<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hey I am Zana</title>
  
  
  <link href="https://zanazhong.github.io/atom.xml" rel="self"/>
  
  <link href="https://zanazhong.github.io/"/>
  <updated>2025-01-16T07:07:49.869Z</updated>
  <id>https://zanazhong.github.io/</id>
  
  <author>
    <name>Zana</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入淺出理解 Docker 的底層運作與架</title>
    <link href="https://zanazhong.github.io/2025/01/16/%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA%E7%90%86%E8%A7%A3-Docker-%E7%9A%84%E5%BA%95%E5%B1%A4%E9%81%8B%E4%BD%9C%E8%88%87%E6%9E%B6/"/>
    <id>https://zanazhong.github.io/2025/01/16/%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA%E7%90%86%E8%A7%A3-Docker-%E7%9A%84%E5%BA%95%E5%B1%A4%E9%81%8B%E4%BD%9C%E8%88%87%E6%9E%B6/</id>
    <published>2025-01-16T07:07:49.000Z</published>
    <updated>2025-01-16T07:07:49.869Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>單體架構 vs 微服務架構：選擇的關鍵與應用</title>
    <link href="https://zanazhong.github.io/2025/01/15/%E7%AD%86%E8%A8%98-%E5%96%AE%E9%AB%94%E6%9E%B6%E6%A7%8B-vs-%E5%BE%AE%E6%9C%8D%E5%8B%99%E6%9E%B6%E6%A7%8B%EF%BC%9A%E9%81%B8%E6%93%87%E7%9A%84%E9%97%9C%E9%8D%B5%E8%88%87%E6%87%89%E7%94%A8/"/>
    <id>https://zanazhong.github.io/2025/01/15/%E7%AD%86%E8%A8%98-%E5%96%AE%E9%AB%94%E6%9E%B6%E6%A7%8B-vs-%E5%BE%AE%E6%9C%8D%E5%8B%99%E6%9E%B6%E6%A7%8B%EF%BC%9A%E9%81%B8%E6%93%87%E7%9A%84%E9%97%9C%E9%8D%B5%E8%88%87%E6%87%89%E7%94%A8/</id>
    <published>2025-01-15T13:52:44.000Z</published>
    <updated>2025-01-15T14:30:51.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="為什麼要了解單體架構和微服務架構？"><a href="#為什麼要了解單體架構和微服務架構？" class="headerlink" title="為什麼要了解單體架構和微服務架構？"></a>為什麼要了解單體架構和微服務架構？</h2><p>隨著技術的快速發展，軟體架構設計已經成為每個工程師必須掌握的核心知識之一。<br>無論你是正在開發新產品的初創團隊，還是維護大型系統的資深工程師，選擇適合的架構直接影響系統的穩定性、性能和團隊效率。</p><p>然而，對於剛接觸架構設計的初學者來說，「單體架構」與「微服務架構」之間的選擇常常令人困惑：</p><ul><li>單體架構似乎簡單直接，但為什麼大家都在討論微服務？</li><li>微服務聽起來很先進，但是否真的適合所有場景？</li><li>團隊是否一定要採用最新技術，才能保持競爭力？</li></ul><span id="more"></span><h2 id="單體架構-Monolithic-是什麼？"><a href="#單體架構-Monolithic-是什麼？" class="headerlink" title="單體架構 (Monolithic) 是什麼？"></a>單體架構 (Monolithic) 是什麼？</h2><p>Monolithic 是傳統的軟體設計方式，將應用程式的所有功能打包在一個整體中。</p><ul><li>所有功能模組共享同一個代碼庫和部署單位。</li><li>通常包含三層結構：UI 層、業務邏輯層、數據層。</li></ul><p><strong>優點</strong>：</p><ul><li><strong>簡單性</strong>：適合小型或初期專案，開發與部署流程直觀。</li><li><strong>性能好</strong>：內部調用通常比分布式架構更快。</li><li><strong>工具支援廣</strong>：不需要額外的運行時環境管理 (例如 Kubernetes)。</li></ul><p><strong>缺點</strong>：</p><ul><li><strong>耦合性高</strong>：修改或新增功能可能影響整體應用。</li><li><strong>難以擴展</strong>：所有功能部署在一起，無法針對單一模組進行擴展。</li><li><strong>可靠性低</strong>：一個模組出問題，可能導致整個應用崩潰。</li></ul><h2 id="微服務架構-Microservices-是什麼？"><a href="#微服務架構-Microservices-是什麼？" class="headerlink" title="微服務架構 (Microservices) 是什麼？"></a>微服務架構 (Microservices) 是什麼？</h2><p>Microservices 將應用拆分成一系列獨立的服務，每個服務負責一個特定的功能或業務邏輯。</p><ul><li>每個服務都可以獨立開發、部署和維護。</li><li>服務之間通過 API (例如 REST 或 gRPC) 進行通信。</li></ul><p><strong>優點</strong>：</p><ul><li><strong>高擴展性</strong>：可以針對流量高的服務單獨擴展 (如用戶認證服務)。</li><li><strong>高可用性</strong>：單個服務故障不會影響整體系統。</li><li><strong>靈活開發</strong>：不同團隊可以用不同技術棧構建自己的服務。</li></ul><p><strong>缺點</strong>：</p><ul><li><strong>複雜性增加</strong>：服務之間的通信、數據一致性和分布式監控變得更困難。</li><li><strong>部署挑戰</strong>：需要配合容器化 (Docker)、編排工具 (Kubernetes) 和 CI&#x2F;CD 管線。</li><li><strong>運營成本高</strong>：需要專門的基礎設施和人員來維護。</li></ul><h2 id="單體架構一定要轉成微服務嗎？"><a href="#單體架構一定要轉成微服務嗎？" class="headerlink" title="單體架構一定要轉成微服務嗎？"></a>單體架構一定要轉成微服務嗎？</h2><p>不一定！選擇架構應根據業務需求和資源狀況，而非追求潮流。</p><p><strong>應該轉為 Microservices 的情境</strong>：</p><ol><li><strong>系統龐大且複雜</strong>：單體架構已經無法快速迭代和部署。</li><li><strong>流量分布不均</strong>：某些功能的流量特別高，需要獨立擴展 (例如商品查詢 vs 購物車)。</li><li><strong>團隊規模擴大</strong>：不同功能模組需要由多個團隊並行開發，避免資源衝突。</li><li><strong>多樣性需求</strong>：需要引入不同的技術或框架來滿足特定模組需求。</li></ol><p><strong>適合保留 Monolithic 的情境</strong>：</p><ol><li><strong>小型專案</strong>：團隊規模小，開發與維護的成本可控。</li><li><strong>需求穩定</strong>：業務場景簡單，功能變化不大。</li><li><strong>資源有限</strong>：運營人員、基礎設施或時間不足以支撐Microservices的高複雜度。</li></ol><h2 id="比較"><a href="#比較" class="headerlink" title="比較"></a>比較</h2><table><thead><tr><th><strong>特性</strong></th><th><strong>Monolithic</strong></th><th><strong>Microservices</strong></th></tr></thead><tbody><tr><td><strong>耦合性</strong></td><td>高</td><td>低</td></tr><tr><td><strong>開發速度</strong></td><td>快 (初期)</td><td>慢 (初期)</td></tr><tr><td><strong>部署頻率</strong></td><td>整體部署</td><td>單獨部署</td></tr><tr><td><strong>擴展方式</strong></td><td>整體擴展</td><td>單點擴展</td></tr><tr><td><strong>技術多樣性</strong></td><td>單一技術棧</td><td>支援多種技術</td></tr><tr><td><strong>可靠性</strong></td><td>低 (單點故障影響整體)</td><td>高 (服務隔離，降低故障影響範圍)</td></tr></tbody></table><h2 id="應用情境"><a href="#應用情境" class="headerlink" title="應用情境"></a>應用情境</h2><ul><li><p><strong>Monolithic</strong>：<br>適用於小型企業網站、早期 MVP 開發、簡單內部工具等。</p></li><li><p><strong>Microservices</strong>：<br>適用於電子商務平台 (如亞馬遜)、流媒體服務 (如 Netflix)、高度擴展的分布式應用。</p></li></ul><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><ul><li>Monolithic 更適合快速啟動，Microservices 則適合長期運營的大型專案。</li><li><strong>切換前的提醒</strong>：轉向 Microservices 需要全面考慮團隊技能、基礎設施、業務需求，避免「過度設計」。</li><li><strong>最佳策略</strong>：採取 <strong>分段拆解法</strong>，先從最關鍵的模組開始，逐步轉型，平衡效能與複雜度。</li></ul><div class="note info"><p>選擇架構，不是看技術有多潮，而是看它是否真正解決你的問題！<br>這不僅是一場技術選擇，也是平衡效率與效能的一場藝術</p></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;為什麼要了解單體架構和微服務架構？&quot;&gt;&lt;a href=&quot;#為什麼要了解單體架構和微服務架構？&quot; class=&quot;headerlink&quot; title=&quot;為什麼要了解單體架構和微服務架構？&quot;&gt;&lt;/a&gt;為什麼要了解單體架構和微服務架構？&lt;/h2&gt;&lt;p&gt;隨著技術的快速發展，軟體架構設計已經成為每個工程師必須掌握的核心知識之一。&lt;br&gt;無論你是正在開發新產品的初創團隊，還是維護大型系統的資深工程師，選擇適合的架構直接影響系統的穩定性、性能和團隊效率。&lt;/p&gt;
&lt;p&gt;然而，對於剛接觸架構設計的初學者來說，「單體架構」與「微服務架構」之間的選擇常常令人困惑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;單體架構似乎簡單直接，但為什麼大家都在討論微服務？&lt;/li&gt;
&lt;li&gt;微服務聽起來很先進，但是否真的適合所有場景？&lt;/li&gt;
&lt;li&gt;團隊是否一定要採用最新技術，才能保持競爭力？&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="Monolithic" scheme="https://zanazhong.github.io/tags/Monolithic/"/>
    
    <category term="Microservices" scheme="https://zanazhong.github.io/tags/Microservices/"/>
    
    <category term="微服務" scheme="https://zanazhong.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8B%99/"/>
    
    <category term="單體架構" scheme="https://zanazhong.github.io/tags/%E5%96%AE%E9%AB%94%E6%9E%B6%E6%A7%8B/"/>
    
    <category term="系統架構" scheme="https://zanazhong.github.io/tags/%E7%B3%BB%E7%B5%B1%E6%9E%B6%E6%A7%8B/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] 深入淺出理解 Kubernetes/ Docker/ Container/ VM 概念</title>
    <link href="https://zanazhong.github.io/2025/01/14/%E7%AD%86%E8%A8%98-Kubernetes:-Docker:-Container:-VM-%E6%A6%82%E5%BF%B5/"/>
    <id>https://zanazhong.github.io/2025/01/14/%E7%AD%86%E8%A8%98-Kubernetes:-Docker:-Container:-VM-%E6%A6%82%E5%BF%B5/</id>
    <published>2025-01-14T01:08:17.000Z</published>
    <updated>2025-01-16T10:51:54.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="為什麼需要這些技術？"><a href="#為什麼需要這些技術？" class="headerlink" title="為什麼需要這些技術？"></a>為什麼需要這些技術？</h2><p>隨著應用程式越來越複雜，我們需要更靈活、高效的方式來部署和管理它們。傳統的硬體配置已經無法滿足快速變動的需求，因此「虛擬化技術」和「容器化技術」應運而生。</p><span id="more"></span><h2 id="什麼是-VM？"><a href="#什麼是-VM？" class="headerlink" title="什麼是 VM？"></a>什麼是 VM？</h2><p>虛擬機 (Virtual Machine) 是利用虛擬化技術，虛擬化整個硬體 (Hardware) 層，把一台實體機 (Host) 分割成多個彼此獨立的環境 (Guest) &#x3D;&gt; 模擬的是［整台機器］<br>每個 VM 都有自己的作業系統 (Operating System)，並模擬硬體資源 (CPU、記憶體、網路…等)。</p><ul><li><strong>優點</strong>：<ul><li>完全隔離，安全性高。</li><li>支援多種作業系統 (Windows、Linux、Ubuntu)。</li></ul></li><li><strong>缺點</strong>：<ul><li>資源消耗較大，因為每個 VM 都需要一整套作業系統。</li><li>啟動速度較慢。</li></ul></li></ul><h2 id="什麼是容器-Container-？"><a href="#什麼是容器-Container-？" class="headerlink" title="什麼是容器 (Container)？"></a>什麼是容器 (Container)？</h2><p>容器是一種比 VM 更輕量的技術，虛擬化的作業系統層，讓應用程式及其依賴環境打包成獨立的單位來執行。它共享宿主機的作業系統核心，但彼此之間隔離。 &#x3D;&gt; 模擬的是［應用程式環境］<br>透過容器引擎 (ex: Docker、Podman)，容器可以快速啟動並執行應用程式。</p><ul><li><strong>優點</strong>：<ul><li>輕量：共享作業系統核心，減少資源需求。</li><li>啟動快速：秒級啟動，比 VM 更高效。</li><li>可移植性強：應用程式「打包一次，運行到處」。</li></ul></li><li><strong>缺點</strong>：<ul><li>相較 VM 隔離性稍弱 (取決於設定)。</li></ul></li></ul><h2 id="Docker：容器化技術的代名詞"><a href="#Docker：容器化技術的代名詞" class="headerlink" title="Docker：容器化技術的代名詞"></a>Docker：容器化技術的代名詞</h2><p>Docker 是一種用於建立、部署和運行容器的開放平台。<br>將應用程式及其依賴項打包在輕量級的容器中，確保一致性和移植性。</p><ul><li><strong>核心概念</strong>：<ul><li><strong>Image</strong> (映像檔)：容器的靜態模板。</li><li><strong>Container</strong> (容器)：從映像檔啟動的執行實例。</li><li><strong>Registry</strong> (註冊伺服器)：儲存與分發映像檔的倉庫 (如 Docker Hub)。</li></ul></li><li><strong>實用場景</strong>：<ul><li>在本地開發環境中模擬多服務架構。</li><li>快速測試和部署應用程式。</li></ul></li></ul><h2 id="Kubernetes-K8s-：容器的指揮官"><a href="#Kubernetes-K8s-：容器的指揮官" class="headerlink" title="Kubernetes (K8s)：容器的指揮官"></a>Kubernetes (K8s)：容器的指揮官</h2><p>K8s 是管理容器 (ex: 調度、擴容、故障恢復) 的開源平台，專為大規模分散式系統設計。</p><ul><li><strong>主要功能</strong>：<ul><li><strong>自動化部署</strong>：根據定義文件部署應用。</li><li><strong>資源調度</strong>：動態分配計算資源。</li><li><strong>彈性伸縮</strong>：根據負載自動擴展或縮減容器數量。</li><li><strong>服務發現</strong>：為應用程式提供內建的 DNS 支援。</li></ul></li><li><strong>實用場景</strong>：<ul><li>微服務架構 (Microservices) 中管理數百甚至數千個容器。</li><li>高流量應用需要動態擴展。</li></ul></li></ul><h2 id="比較"><a href="#比較" class="headerlink" title="比較"></a>比較</h2><table><thead><tr><th><strong>特性</strong></th><th><strong>Kubernetes</strong></th><th><strong>Docker</strong></th><th><strong>虛擬機 (VM)</strong></th></tr></thead><tbody><tr><td><strong>管理對象</strong></td><td>容器 (集群層級管理)</td><td>容器 (單機層級管理)</td><td>整個操作系統</td></tr><tr><td><strong>隔離層級</strong></td><td>基於容器與命名空間(Namespace)</td><td>基於容器與命名空間(Namespace)</td><td>基於虛擬硬體</td></tr><tr><td><strong>隔離性</strong></td><td>N&#x2F;A (管理工具)</td><td>中</td><td>高</td></tr><tr><td><strong>資源效率</strong></td><td>輕量級 (容器共享同一內核)</td><td>輕量級 (容器共享同一內核)</td><td>重量級 (每個)VM 有獨立的內核)</td></tr><tr><td><strong>啟動速度</strong></td><td>快 (秒級)</td><td>快 (秒級)</td><td>慢 (分鐘級)</td></tr><tr><td><strong>運行環境的靈活性</strong></td><td>高 (容器自動調度與管理)</td><td>中 (單機或簡單的容器編排)</td><td>低 (操作系統層級管理)</td></tr><tr><td><strong>工具</strong></td><td>Kubernetes</td><td>Docker</td><td>VirtualBox、VMware</td></tr></tbody></table><h2 id="應用情境"><a href="#應用情境" class="headerlink" title="應用情境"></a>應用情境</h2><ul><li><strong>虛擬機</strong><br>當你需要在單台硬體上跑多個不同作業系統的應用 (ex:  Windows + Linux)。</li><li><strong>容器</strong><br>部署輕量、可攜式的微服務，適合 CI&#x2F;CD Pipline、自動化測試。</li><li><strong>Kubernetes</strong><br>大型分散式系統需要高效管理，且擁有動態流量需求的場景。</li></ul><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><ul><li>虛擬機是傳統的隔離方案，適合需要高安全性的場景。</li><li>容器則是現代化應用的主流解決方案，輕量且靈活。</li><li>Docker 是目前最受歡迎的容器化技術，提供簡單易用的工具來打包、分發和執行應用程式，讓開發與部署更加高效。</li><li>Kubernetes 是容器化技術的最佳管理工具，幫助我們在大規模維運中游刃有餘。</li></ul><div class="note info"><p>VM 是重量，Container 是輕量，Kubernetes 是管家！</p></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;為什麼需要這些技術？&quot;&gt;&lt;a href=&quot;#為什麼需要這些技術？&quot; class=&quot;headerlink&quot; title=&quot;為什麼需要這些技術？&quot;&gt;&lt;/a&gt;為什麼需要這些技術？&lt;/h2&gt;&lt;p&gt;隨著應用程式越來越複雜，我們需要更靈活、高效的方式來部署和管理它們。傳統的硬體配置已經無法滿足快速變動的需求，因此「虛擬化技術」和「容器化技術」應運而生。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Kubernetes" scheme="https://zanazhong.github.io/tags/Kubernetes/"/>
    
    <category term="Docker" scheme="https://zanazhong.github.io/tags/Docker/"/>
    
    <category term="Container" scheme="https://zanazhong.github.io/tags/Container/"/>
    
    <category term="VM" scheme="https://zanazhong.github.io/tags/VM/"/>
    
    <category term="Containerized" scheme="https://zanazhong.github.io/tags/Containerized/"/>
    
    <category term="Virtualized" scheme="https://zanazhong.github.io/tags/Virtualized/"/>
    
    <category term="容器化技術" scheme="https://zanazhong.github.io/tags/%E5%AE%B9%E5%99%A8%E5%8C%96%E6%8A%80%E8%A1%93/"/>
    
    <category term="虛擬化" scheme="https://zanazhong.github.io/tags/%E8%99%9B%E6%93%AC%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1913. Maximum Product Difference Between Two Pairs</title>
    <link href="https://zanazhong.github.io/2023/12/18/%E7%AD%86%E8%A8%98-1913.-Maximum-Product%20Difference-Between-Two-Pairs/"/>
    <id>https://zanazhong.github.io/2023/12/18/%E7%AD%86%E8%A8%98-1913.-Maximum-Product%20Difference-Between-Two-Pairs/</id>
    <published>2023-12-18T13:54:30.000Z</published>
    <updated>2023-12-18T13:59:41.490Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/maximum-product-difference-between-two-pairs/">https://leetcode.com/problems/maximum-product-difference-between-two-pairs/</a></p><blockquote><p>The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).</p><p>For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) &#x3D; 16.<br>Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.</p><p>Return the maximum such product difference.</p></blockquote><span id="more"></span><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [5,6,2,7,4]</span><br><span class="line">Output: 34</span><br><span class="line">Explanation: We can choose indices 1 and 3 for the first pair (6, 7) and indices 2 and 4 for the second pair (2, 4).</span><br><span class="line">The product difference is (6 * 7) - (2 * 4) &#x3D; 34.</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [4,2,5,9,7,4,8]</span><br><span class="line">Output: 64</span><br><span class="line">Explanation: We can choose indices 3 and 6 for the first pair (9, 8) and indices 1 and 5 for the second pair (2, 4).</span><br><span class="line">The product difference is (9 * 8) - (2 * 4) &#x3D; 64.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProductDifference</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        min_num1, min_num2 = math.inf, math.inf</span><br><span class="line">        max_num1, max_num2 = -math.inf, -math.inf</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> nums: </span><br><span class="line">            <span class="keyword">if</span> number &gt; max_num1:</span><br><span class="line">                max_num1, max_num2 = number, max_num1</span><br><span class="line">            <span class="keyword">elif</span> number &gt; max_num2:</span><br><span class="line">                max_num2 = number</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span> number &lt; min_num1:</span><br><span class="line">                min_num1, min_num2 = number, min_num1</span><br><span class="line">            <span class="keyword">elif</span> number &lt; min_num2:</span><br><span class="line">                min_num2 = number</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> max_num1 * max_num2 - min_num1 * min_num2</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/maximum-product-difference-between-two-pairs/&quot;&gt;https://leetcode.com/problems/maximum-product-difference-between-two-pairs/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).&lt;/p&gt;
&lt;p&gt;For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) &amp;#x3D; 16.&lt;br&gt;Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.&lt;/p&gt;
&lt;p&gt;Return the maximum such product difference.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Math" scheme="https://zanazhong.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 867. Transpose Matrix</title>
    <link href="https://zanazhong.github.io/2023/12/10/%E7%AD%86%E8%A8%98-Leetcode-867.-Transpose-Matrix/"/>
    <id>https://zanazhong.github.io/2023/12/10/%E7%AD%86%E8%A8%98-Leetcode-867.-Transpose-Matrix/</id>
    <published>2023-12-10T04:59:38.000Z</published>
    <updated>2023-12-18T13:59:48.680Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/transpose-matrix/">https://leetcode.com/problems/transpose-matrix/</a></p><blockquote><p>Given a 2D integer array matrix, return the transpose of matrix.</p><p>The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix’s row and column indices.</p></blockquote><span id="more"></span><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: matrix &#x3D; [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">Output: [[1,4,7],[2,5,8],[3,6,9]]</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: matrix &#x3D; [[1,2,3],[4,5,6]]</span><br><span class="line">Output: [[1,4],[2,5],[3,6]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transpose</span>(<span class="params">self, matrix: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        result = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(matrix[<span class="number">0</span>])):</span><br><span class="line">            new_matrix = []</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(matrix)):</span><br><span class="line">                new_matrix.append(matrix[row][col])</span><br><span class="line"></span><br><span class="line">            result.append(new_matrix)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/transpose-matrix/&quot;&gt;https://leetcode.com/problems/transpose-matrix/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a 2D integer array matrix, return the transpose of matrix.&lt;/p&gt;
&lt;p&gt;The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix’s row and column indices.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Matrix" scheme="https://zanazhong.github.io/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1903. Largest Odd Number in String</title>
    <link href="https://zanazhong.github.io/2023/12/09/%E7%AD%86%E8%A8%98-1903.-Largest-Odd%20Number-in-String/"/>
    <id>https://zanazhong.github.io/2023/12/09/%E7%AD%86%E8%A8%98-1903.-Largest-Odd%20Number-in-String/</id>
    <published>2023-12-08T22:06:42.000Z</published>
    <updated>2023-12-08T22:08:00.491Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>You are given a string num, representing a large integer. Return the largest-valued odd integer (as a string) that is a non-empty substring of num, or an empty string “” if no odd integer exists.</p></blockquote><p>A substring is a contiguous sequence of characters within a string.</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: num &#x3D; &quot;52&quot;</span><br><span class="line">Output: &quot;5&quot;</span><br><span class="line">Explanation: The only non-empty substrings are &quot;5&quot;, &quot;2&quot;, and &quot;52&quot;. &quot;5&quot; is the only odd number.</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: num &#x3D; &quot;4206&quot;</span><br><span class="line">Output: &quot;&quot;</span><br><span class="line">Explanation: There are no odd numbers in &quot;4206&quot;.</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: num &#x3D; &quot;35427&quot;</span><br><span class="line">Output: &quot;35427&quot;</span><br><span class="line">Explanation: &quot;35427&quot; is already an odd number.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">largestOddNumber</span>(<span class="params">self, num: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(num) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">int</span>(num[i]) % <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> num[:i + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;You are given a string num, representing a large integer. Return the largest-valued odd integer (as a string) that is a non-</summary>
      
    
    
    
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="reverse" scheme="https://zanazhong.github.io/tags/reverse/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1716. Calculate Money in Leetcode Bank</title>
    <link href="https://zanazhong.github.io/2023/12/07/%E7%AD%86%E8%A8%98-Leetcode-%201716.-Calculate%20Money-in%20Leetcode-Bank/"/>
    <id>https://zanazhong.github.io/2023/12/07/%E7%AD%86%E8%A8%98-Leetcode-%201716.-Calculate%20Money-in%20Leetcode-Bank/</id>
    <published>2023-12-07T10:58:59.000Z</published>
    <updated>2023-12-07T11:01:47.628Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/calculate-money-in-leetcode-bank">https://leetcode.com/problems/calculate-money-in-leetcode-bank</a></p><blockquote><p>Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.</p></blockquote><p>He starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous Monday.<br>Given n, return the total amount of money he will have in the Leetcode bank at the end of the nth day.</p><p><img src="https://hackmd.io/_uploads/HJQMMQkL6.png" alt="image"></p><span id="more"></span><blockquote><p>key: 總和用上底加下底乘高除二計算，再加上剩餘天數</p></blockquote><p>第一週: 1 + 2 + 3 + 4 + 5 + 6 + 7 &#x3D; 28<br>第二週: 2 + 3 + 4 + 5 + 6 + 7 + 8 &#x3D; 28 + 7<br>第三週為: 3 + 4 + 5 + 6 + 7 + 8 + 9 &#x3D; 28 + 7 x 2<br>.<br>.<br>.<br>N 週過去，總金額為: 28 + (28 + 7) + (28 + 7 × 2) + …… + [28 + 7 × (N - 1)]</p><p>{[28 + 28 + 7(N - 1)] × R} ÷ 2 </p><p>最後記得加上不滿週的天數: (N + 1) + (N + 2) + … + (N + D)<br>[(N + 1) + (N + D)] x D ÷ 2 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">totalMoney</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        week, day = <span class="built_in">divmod</span>(n, <span class="number">7</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">28</span> + <span class="number">28</span> + <span class="number">7</span> * (week - <span class="number">1</span>)) * week // <span class="number">2</span> + (week * <span class="number">2</span> + day + <span class="number">1</span>) * day // <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/calculate-money-in-leetcode-bank&quot;&gt;https://leetcode.com/problems/calculate-money-in-leetcode-bank&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous Monday.&lt;br&gt;Given n, return the total amount of money he will have in the Leetcode bank at the end of the nth day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJQMMQkL6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Math" scheme="https://zanazhong.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 905. Sort Array By Parity</title>
    <link href="https://zanazhong.github.io/2023/09/29/%E7%AD%86%E8%A8%98-Leetcode-%20905.-Sort-Array-By-Parity/"/>
    <id>https://zanazhong.github.io/2023/09/29/%E7%AD%86%E8%A8%98-Leetcode-%20905.-Sort-Array-By-Parity/</id>
    <published>2023-09-28T23:25:49.000Z</published>
    <updated>2023-09-28T23:28:02.406Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/contains-duplicate/">https://leetcode.com/problems/contains-duplicate/</a></p><blockquote><p>Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.<br>Return any array that satisfies this condition.</p></blockquote><p><img src="https://hackmd.io/_uploads/SJBmot7lp.png"></p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        left, right = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> left &lt; right: </span><br><span class="line">            <span class="keyword">if</span> nums[right] % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">and</span> nums[left] % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                nums[right], nums[left] = nums[left], nums[right]</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line">                right -= <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> nums[left] % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> nums[right] % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                right -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span>        even_idx = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                nums[even_idx], nums[i] = nums[i], nums[even_idx]</span><br><span class="line">                even_idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/contains-duplicate/&quot;&gt;https://leetcode.com/problems/contains-duplicate/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.&lt;br&gt;Return any array that satisfies this condition.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/SJBmot7lp.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
    <category term="two pointer" scheme="https://zanazhong.github.io/tags/two-pointer/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 217. Contains Duplicate</title>
    <link href="https://zanazhong.github.io/2023/09/28/%E7%AD%86%E8%A8%98-Leetcode-%20217.-Contains-Duplicate/"/>
    <id>https://zanazhong.github.io/2023/09/28/%E7%AD%86%E8%A8%98-Leetcode-%20217.-Contains-Duplicate/</id>
    <published>2023-09-28T12:20:56.000Z</published>
    <updated>2023-09-28T12:28:21.207Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/contains-duplicate/">https://leetcode.com/problems/contains-duplicate/</a></p><blockquote><p>Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.</p></blockquote><p><img src="https://hackmd.io/_uploads/H1SgWl7ga.png"></p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        ans = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> num <span class="keyword">in</span> ans:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans[num] = <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        ans = &#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> ans.get(num):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans[num] = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(nums) != <span class="built_in">len</span>(<span class="built_in">list</span>(<span class="built_in">set</span>(nums)))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/contains-duplicate/&quot;&gt;https://leetcode.com/problems/contains-duplicate/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/H1SgWl7ga.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
    <category term="set" scheme="https://zanazhong.github.io/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 136. Single Number</title>
    <link href="https://zanazhong.github.io/2023/09/28/%E7%AD%86%E8%A8%98-Leetcode-%20136.-Single%20Number/"/>
    <id>https://zanazhong.github.io/2023/09/28/%E7%AD%86%E8%A8%98-Leetcode-%20136.-Single%20Number/</id>
    <published>2023-09-28T10:50:09.000Z</published>
    <updated>2023-09-28T10:58:42.813Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/single-number/">https://leetcode.com/problems/single-number/</a></p><blockquote><p>Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.<br>You must implement a solution with a linear runtime complexity and use only constant extra space.</p></blockquote><p><img src="https://hackmd.io/_uploads/BJfpj0Mx6.png"></p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNumber</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="built_in">list</span> = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">                <span class="built_in">list</span>.remove(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">list</span>.append(i)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>.pop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/single-number/&quot;&gt;https://leetcode.com/problems/single-number/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.&lt;br&gt;You must implement a solution with a linear runtime complexity and use only constant extra space.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/BJfpj0Mx6.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 56. Merge Intervals</title>
    <link href="https://zanazhong.github.io/2023/09/05/%E7%AD%86%E8%A8%98-Leetcode-%2056.-Merge%20Intervals/"/>
    <id>https://zanazhong.github.io/2023/09/05/%E7%AD%86%E8%A8%98-Leetcode-%2056.-Merge%20Intervals/</id>
    <published>2023-09-05T09:58:43.000Z</published>
    <updated>2023-09-05T10:10:57.348Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/merge-intervals/">https://leetcode.com/problems/merge-intervals/</a></p><p><img src="https://i.imgur.com/FaQwh8J.png"><br>It means each list in intervals is a range, just to merge the overlapping one, others stay the same.</p><span id="more"></span><p>解題:</p><ol><li>sort</li></ol><p>sort by the start of each range<br>save the first one in result<br>if any the start of each range smaller then the last item in result, it should be merged, otherwise append in result</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">merge</span>(<span class="params">self, intervals</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type intervals: List[List[int]]</span></span><br><span class="line"><span class="string">        :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># internals.sort(key = lambda x = x[0])</span></span><br><span class="line">        sort_intervals = <span class="built_in">sorted</span>(intervals, key = <span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        res = [sort_intervals[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> start, end <span class="keyword">in</span> sort_intervals[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">if</span> res[-<span class="number">1</span>][<span class="number">1</span>] &gt;= start:</span><br><span class="line">                res[-<span class="number">1</span>][<span class="number">1</span>] = <span class="built_in">max</span>(res[-<span class="number">1</span>][<span class="number">1</span>], end)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.append([start, end])</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/merge-intervals/&quot;&gt;https://leetcode.com/problems/merge-intervals/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/FaQwh8J.png&quot;&gt;&lt;br&gt;It means each list in intervals is a range, just to merge the overlapping one, others stay the same.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 2215. Find the Difference of Two Arrays</title>
    <link href="https://zanazhong.github.io/2023/05/03/%E7%AD%86%E8%A8%98-Leetcode-1822-Sign-of-the-Product-of-an-Array/"/>
    <id>https://zanazhong.github.io/2023/05/03/%E7%AD%86%E8%A8%98-Leetcode-1822-Sign-of-the-Product-of-an-Array/</id>
    <published>2023-05-03T12:34:13.000Z</published>
    <updated>2023-09-05T10:07:24.952Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:</p><ul><li>answer[0] is a list of all distinct integers in nums1 which are not present in nums2.</li><li>answer[1] is a list of all distinct integers in nums2 which are not present in nums1.</li></ul><p>Note that the integers in the lists may be returned in any order.</p></blockquote><p><img src="https://i.imgur.com/mN6RB67.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findDifference</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        set1 = <span class="built_in">set</span>(nums1)</span><br><span class="line">        set2 = <span class="built_in">set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> [ <span class="built_in">list</span>(set1 - set2), <span class="built_in">list</span>(set2 - set1)]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;blockquote&gt;
&lt;p&gt;Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:&lt;/p&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1822. Sign of the Product of an Array</title>
    <link href="https://zanazhong.github.io/2023/05/02/%E7%AD%86-Leetcode-1822-Sign-of-the-Product-of-an-Array/"/>
    <id>https://zanazhong.github.io/2023/05/02/%E7%AD%86-Leetcode-1822-Sign-of-the-Product-of-an-Array/</id>
    <published>2023-05-02T10:11:37.000Z</published>
    <updated>2023-05-02T10:20:47.436Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/sign-of-the-product-of-an-array/">https://leetcode.com/problems/sign-of-the-product-of-an-array/</a></p><blockquote><p>There is a function signFunc(x) that returns:<br>1 if x is positive.<br>-1 if x is negative.<br>0 if x is equal to 0.<br>You are given an integer array nums. Let product be the product of all values in the array nums.<br>Return signFunc(product).</p></blockquote><p><img src="https://i.imgur.com/v6fBWOf.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arraySign</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        sign = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">0</span>:</span><br><span class="line">                sign = -sign</span><br><span class="line">        <span class="keyword">return</span> sign</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/sign-of-the-product-of-an-array/&quot;&gt;https://leetcode.com/problems/sign-of-the-product-of-an-array/&lt;/</summary>
      
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1491. Average Salary Excluding the Minimum and Maximum Salary</title>
    <link href="https://zanazhong.github.io/2023/05/01/%E7%AD%86%E8%A8%98-Leetcode-1491-Average-Salary-Excluding-the-Minimum-and-Maximum-Salary/"/>
    <id>https://zanazhong.github.io/2023/05/01/%E7%AD%86%E8%A8%98-Leetcode-1491-Average-Salary-Excluding-the-Minimum-and-Maximum-Salary/</id>
    <published>2023-05-01T13:54:22.000Z</published>
    <updated>2023-05-02T10:20:20.150Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/">https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/</a></p><blockquote><p>You are given an array of unique integers salary where salary[i] is the salary of the ith employee.<br>Return the average salary of employees excluding the minimum and maximum salary. Answers within 10-5 of the actual answer will be accepted.</p></blockquote><p><img src="https://i.imgur.com/uoZrJtI.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span> </span><br><span class="line">        salary.sort()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary[<span class="number">1</span>:-<span class="number">1</span>]) / (<span class="built_in">len</span>(salary) - <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        salary.remove(<span class="built_in">min</span>(salary))</span><br><span class="line">        salary.remove(<span class="built_in">max</span>(salary))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary) / <span class="built_in">len</span>(salary)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">sum</span>(salary) - <span class="built_in">min</span>(salary) - <span class="built_in">max</span>(salary)) / (<span class="built_in">len</span>(salary) - <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        salary.sort()</span><br><span class="line">        salary.pop(<span class="number">0</span>)</span><br><span class="line">        salary.pop()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary) / <span class="built_in">len</span>(salary)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/&quot;&gt;https://leetcode.com/problems/average-sa</summary>
      
    
    
    
    
    <category term="sort" scheme="https://zanazhong.github.io/tags/sort/"/>
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Hexo - 換電腦重新部署環境</title>
    <link href="https://zanazhong.github.io/2023/04/17/%E7%AD%86%E8%A8%98-Hexo-%E6%8F%9B%E9%9B%BB%E8%85%A6%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E7%92%B0%E5%A2%83/"/>
    <id>https://zanazhong.github.io/2023/04/17/%E7%AD%86%E8%A8%98-Hexo-%E6%8F%9B%E9%9B%BB%E8%85%A6%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E7%92%B0%E5%A2%83/</id>
    <published>2023-04-17T13:30:32.000Z</published>
    <updated>2023-04-17T13:36:56.045Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>換電腦後發現即使有用 time machine 做備份還是要重新部署<br>因為 push 至 github 的是已經編譯過後的檔案，所以沒有留原始檔的話，看起來應該沒救了(?)</p></blockquote><span id="more"></span><h3 id="step-1-電腦環境設定"><a href="#step-1-電腦環境設定" class="headerlink" title="step 1: 電腦環境設定"></a>step 1: 電腦環境設定</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><center>   <img src="https://i.imgur.com/wNuNXtT.png" width="40%"></center><h3 id="step-2-重新建置-Hexo-環境"><a href="#step-2-重新建置-Hexo-環境" class="headerlink" title="step 2: 重新建置 Hexo 環境"></a>step 2: 重新建置 Hexo 環境</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#建立一個 blog 的資料夾 (blog_name 請自行命名~)</span><br><span class="line">hexo init blog_name  </span><br></pre></td></tr></table></figure><p>若是有其他的要安裝請參考 <a href="https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-GitHub-pages-Hexo-%E6%90%AD%E5%BB%BA-Blog-Mac/#more">Hexo 環境安裝</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog_name</span><br></pre></td></tr></table></figure><h4 id="將備份的檔案複製至新的-Hexo-環境"><a href="#將備份的檔案複製至新的-Hexo-環境" class="headerlink" title="將備份的檔案複製至新的 Hexo 環境"></a>將備份的檔案複製至新的 Hexo 環境</h4><center>   <img src="https://i.imgur.com/lWLZd0F.png)" width="40%"></center><p>將除了 node_modules 跟 public 之外的檔案複製過去</p><blockquote><p>node_modules 是放一些 library 的地方，執行 npm install 時就會下載相關的 library；而 public 是放原始檔編譯後的檔案，之後部署時會再建回來</p></blockquote><h4 id="複製完執行以下指令"><a href="#複製完執行以下指令" class="headerlink" title="複製完執行以下指令"></a>複製完執行以下指令</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>可能會出現一些 Error or Warning，照著他的指示修正即可</p><h3 id="step-3-在本地端-preview-一下"><a href="#step-3-在本地端-preview-一下" class="headerlink" title="step 3: 在本地端 preview 一下"></a>step 3: 在本地端 preview 一下</h3><p>上線前還是小心謹慎一點好，先在本地檢視一下有沒有如期正常顯示，畢竟裡面已經有嘔心瀝血作品</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#透過本機的 http://localhost:<span class="number">4000</span> 查看</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure><h3 id="step-4-重新部署-gogo"><a href="#step-4-重新部署-gogo" class="headerlink" title="step 4: 重新部署 gogo"></a>step 4: 重新部署 gogo</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><h3 id="番外-部署問題"><a href="#番外-部署問題" class="headerlink" title="番外: 部署問題"></a>番外: 部署問題</h3><blockquote><p>事情有時候總是沒這麼簡單的喇!!</p></blockquote><p>看起來一般來說他給的這個網站裡面都能找到解法 ⬇️<br>Something’s wrong. Maybe you can find the solution here: %s <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a></p><p>分享一下我遇到的是 github Authentication Failed (身份驗證失敗)<br>解法：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 進去網站資料夾</span><br><span class="line"><span class="built_in">cd</span> blog_name</span><br><span class="line"></span><br><span class="line"># 修改 _config.yml</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>將 https 方式改成用 ssh 方式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">deploy:</span></span><br><span class="line"><span class="function">    <span class="title">type</span>: <span class="title">git</span></span></span><br><span class="line"><span class="function">    <span class="title">repo</span>: <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">yourname</span>/<span class="title">yourname.github.io.git</span> -&gt; <span class="title">git</span>@<span class="title">github.com:yourname</span>/<span class="title">yourname.github.io.git</span></span></span><br><span class="line"><span class="function">    <span class="title">branch</span>: <span class="title">master</span></span></span><br></pre></td></tr></table></figure><ol><li><p>Generating a new SSH key and adding it to the ssh-agent <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">:link:</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~&#x2F;.ssh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>產生金鑰的過程中，會問 3 個問題，如果沒有特殊需求可以全部使用預設值(press Enter)就好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 金鑰儲存的位置與檔名，預設檔名是前面所提到 id_ed25519，可以更改檔名，ex: githud_key</span><br><span class="line">Enter file in which to save the key (&#x2F;home&#x2F;username&#x2F;.ssh&#x2F;id_ed25519): [Press enter]</span><br><span class="line"></span><br><span class="line"># 詢問是否指定金鑰保護密碼，若有設定密碼的話，之後使用每次使用時，這把金鑰時就要輸入密碼，請務必牢記。之後想修改金鑰密碼的話，可以透過 ssh-keygen 來設定。</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Generating public&#x2F;private ed25519 key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519</span><br><span class="line">Your public key has been saved in &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:*************************** your_email@example.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ED25519 256]--+</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lDCil5I.png"></p><p>設定金鑰代理</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br><span class="line"># output: Agent pid <span class="number">98350</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.ssh/config</span><br><span class="line">open ~/.ssh/config</span><br></pre></td></tr></table></figure><p>modify ~&#x2F;.ssh&#x2F;config</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">   AddKeysToAgent yes</span><br><span class="line">   UseKeychain yes</span><br><span class="line">   IdentityFile ~/.ssh/id_ed25519 #！如果有改名的話這邊記得改</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Add your SSH private key to the ssh-agen</span><br><span class="line">ssh-add -K ~/.ssh/id_ed25519</span><br><span class="line"># <span class="built_in">copy</span> it</span><br><span class="line">pbcopy &lt; ~/.ssh/id_ed25519.pub #！如果有改名的話這邊記得改</span><br></pre></td></tr></table></figure></li><li><p>Adding a new SSH key to your GitHub account<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">:link:</a><br>![](<a href="https://i.imgur.com/fT8xpej.png">https://i.imgur.com/fT8xpej.png</a> &#x3D;200x)<br><img src="https://i.imgur.com/esiwR1T.png"></p><p><img src="https://i.imgur.com/8yv980c.png"></p><p>連線測試</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"># output: Hi XXX! You’ve successfully authenticated, but GitHub does <span class="keyword">not</span> provide shell access.</span><br></pre></td></tr></table></figure></li><li><p>deploy on GitHub</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;換電腦後發現即使有用 time machine 做備份還是要重新部署&lt;br&gt;因為 push 至 github 的是已經編譯過後的檔案，所以沒有留原始檔的話，看起來應該沒救了(?)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://zanazhong.github.io/categories/Hexo/"/>
    
    
    <category term="GitHub" scheme="https://zanazhong.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://zanazhong.github.io/tags/Hexo/"/>
    
    <category term="GitHub pages" scheme="https://zanazhong.github.io/tags/GitHub-pages/"/>
    
    <category term="Blog" scheme="https://zanazhong.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Check.io - Acceptable Password II</title>
    <link href="https://zanazhong.github.io/2021/05/01/%E7%AD%86%E8%A8%98-Check-io-Acceptable-Password-II/"/>
    <id>https://zanazhong.github.io/2021/05/01/%E7%AD%86%E8%A8%98-Check-io-Acceptable-Password-II/</id>
    <published>2021-05-01T13:20:28.000Z</published>
    <updated>2021-05-01T13:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/acceptable-password-ii/">check.io</a> 上的題目：合格的密碼須含數字<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/PvH7bh2.png"></p><h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><ul><li>密碼須大於６位數</li><li>至少需包含一個數字</li></ul><h3 id="map-用法"><a href="#map-用法" class="headerlink" title="map 用法"></a>map 用法</h3><div class="note default"><p>語法： map(function: iterable) </p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">square</span>(<span class="params">x</span>):</span></span><br><span class="line">  <span class="keyword">return</span> x * x</span><br><span class="line">    </span><br><span class="line"><span class="built_in">map</span>(square, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])  <span class="comment">#Output [2, 4, 6, 8]</span></span><br></pre></td></tr></table></figure><h3 id="any-用法"><a href="#any-用法" class="headerlink" title="any 用法"></a>any 用法</h3><h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><pre><code class="python">def is_acceptable_password(password: str) -&gt; bool:    # your code here    return True if len(password) &gt; 6 and any(map(str.isdigit, password)) else False</code></pre>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/acceptable-password-ii/&quot;&gt;check.io&lt;/a&gt; 上的題目：合格的密碼須含數字&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="map" scheme="https://zanazhong.github.io/tags/map/"/>
    
    <category term="any" scheme="https://zanazhong.github.io/tags/any/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Check.io - Date and Time Converter</title>
    <link href="https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Date-and-Time-Converter/"/>
    <id>https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Date-and-Time-Converter/</id>
    <published>2021-04-25T14:33:41.000Z</published>
    <updated>2021-05-01T13:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/date-and-time-converter/">check.io</a> 上的題目：將字串轉成規定的格式<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/1IHEoPk.png"></p><h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><h2 id=""><a href="#" class="headerlink" title="- "></a>- </h2><p>strptime<br>strftime<br>format</p><p><a href="https://www.geeksforgeeks.org/python-strftime-function/"><img src="https://i.imgur.com/cKcNfZx.png" alt="參考來源"></a></p><h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">date_time</span>(<span class="params">time: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">    <span class="comment">#convert string to datetime</span></span><br><span class="line">    date_time = datetime.datetime.strptime(time, <span class="string">&quot;%d.%m.%Y %H:%M&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> date_time.strftime(<span class="string">f&quot;<span class="subst">&#123;date_time.day&#125;</span> %B %Y year <span class="subst">&#123;date_time.hour&#125;</span> hour<span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> <span class="keyword">if</span> date_time.hour != <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>&#125;</span> <span class="subst">&#123;date_time.minute&#125;</span> minute<span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> <span class="keyword">if</span> date_time.minute != <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>分享一個查到的不錯的方法</p><pre><code class="python">import datetimedef date_time(time: str) -&gt; str:    #convert string to datetime    date_time = datetime.datetime.strptime(time, &quot;%d.%m.%Y %H:%M&quot;)    return date_time.strftime(f&quot;&#123;date_time.day&#125; %B %Y year &#123;date_time.hour&#125; &#123;[&#39;hours&#39;, &#39;hour&#39;][date_time.hour == 1]&#125; &#123;date_time.minute&#125; &#123;[&#39;minutes&#39;, &#39;minute&#39;][date_time.minute == 1]&#125;&quot;)</code></pre>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/date-and-time-converter/&quot;&gt;check.io&lt;/a&gt; 上的題目：將字串轉成規定的格式&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="datetime" scheme="https://zanazhong.github.io/tags/datetime/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Check.io - Pawn Brotherhood</title>
    <link href="https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Pawn-Brotherhood/"/>
    <id>https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Pawn-Brotherhood/</id>
    <published>2021-04-25T13:57:42.000Z</published>
    <updated>2021-04-25T13:59:43.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/pawn-brotherhood/">check.io</a> 上的題目：判斷西洋棋中的兵有幾個是安全的<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p></blockquote><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/oTOaA4z.jpg"><br>總結來說：兵的行徑方向走斜對角的(左前、右前)，若是兵的右下或左下有其他兵的話，他就是安全的</p><h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">safe_pawns</span>(<span class="params">pawns: <span class="built_in">set</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">    safe = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> pawns:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(<span class="built_in">ord</span>(p[<span class="number">0</span>]) + <span class="number">1</span>) + <span class="built_in">str</span>(<span class="built_in">int</span>(p[<span class="number">1</span>]) - <span class="number">1</span>) <span class="keyword">in</span> pawns <span class="keyword">or</span> <span class="built_in">chr</span>(<span class="built_in">ord</span>(p[<span class="number">0</span>]) - <span class="number">1</span>) + <span class="built_in">str</span>(<span class="built_in">int</span>(p[<span class="number">1</span>]) - <span class="number">1</span>) <span class="keyword">in</span> pawns:</span><br><span class="line">            safe += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> safe</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/pawn-brotherhood/&quot;&gt;check.io&lt;/a&gt; 上的題目：判斷西洋棋中的兵有幾個是安全的&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下</summary>
      
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="chr" scheme="https://zanazhong.github.io/tags/chr/"/>
    
    <category term="ord" scheme="https://zanazhong.github.io/tags/ord/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] HackerRank - Sales by Match</title>
    <link href="https://zanazhong.github.io/2021/04/02/%E7%AD%86%E8%A8%98-HackerRank-Sales-by-Match/"/>
    <id>https://zanazhong.github.io/2021/04/02/%E7%AD%86%E8%A8%98-HackerRank-Sales-by-Match/</id>
    <published>2021-04-02T12:40:09.000Z</published>
    <updated>2021-04-02T14:47:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>HackerRank 上的題目：找出成對的襪子並算出總共有幾雙<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><a href="https://www.hackerrank.com/challenges/sock-merchant/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"><img src="https://i.imgur.com/McOlaEW.png"></a></p><h3 id="解題步驟："><a href="#解題步驟：" class="headerlink" title="解題步驟："></a>解題步驟：</h3><ol><li>想想怎麼找出成對的襪子並記錄</li><li>計算出所有成對的襪子有幾雙</li></ol><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>如果第一個想到用 dictionary 來實踐儲存不同顏色襪子有幾隻的話，<a href="https://zanazhong.github.io/2021/03/22/%E5%AD%B8%E7%BF%92-Python-List/">此篇文章</a> 有提到相關用法，這裡就不贅述。</p><p>最好要將 dictionay 裡所有的 value 值找出成對的並算出共有幾對的話可以使用 sum。</p><h3 id="sum-的用法"><a href="#sum-的用法" class="headerlink" title="sum 的用法"></a>sum 的用法</h3><div class="note default"><p>語法： sum(iterable, start)</p></div><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list &#x3D; [2, 4, 1, 3, 6]</span><br><span class="line">print(sum(list))</span><br><span class="line">&#x2F;&#x2F; 起始點從 100 開始 (目前沒使用過)</span><br><span class="line">print(sum(list, 100))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">16</span><br><span class="line">116</span><br></pre></td></tr></table></figure><h3 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h3><h4 id="方法一-dict-sum"><a href="#方法一-dict-sum" class="headerlink" title="方法一 dict + sum"></a>方法一 dict + sum</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sockMerchant</span>(<span class="params">n, ar</span>):</span></span><br><span class="line">    pair_count = &#123;i : ar.count(i) <span class="keyword">for</span> i <span class="keyword">in</span> ar&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(i//<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> pair_count.values())</span><br></pre></td></tr></table></figure><h4 id="方法二-set-sum"><a href="#方法二-set-sum" class="headerlink" title="方法二 set + sum"></a>方法二 set + sum</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sockMerchant</span>(<span class="params">n, ar</span>):</span></span><br><span class="line">    pair_count = <span class="built_in">set</span>(ar)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(ar.count(i) // <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> pair_count)</span><br></pre></td></tr></table></figure><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h4 id="方法一-for-loop"><a href="#方法一-for-loop" class="headerlink" title="方法一 for loop"></a>方法一 for loop</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sockMerchant</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] ar)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ar[i] != -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++ ) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ar[i] == ar[j]) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    ar[j] = -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(count);</span><br><span class="line">            sum += Math.floor(count / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法二-HashSet"><a href="#方法二-HashSet" class="headerlink" title="方法二 HashSet"></a>方法二 HashSet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sockMerchant</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] ar)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    HashSet&lt;Integer&gt; sock_set = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Integer i: ar) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sock_set.contains(i)) &#123;</span><br><span class="line">            sock_set.remove(i);</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sock_set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ref: <a href="https://www.programiz.com/python-programming/methods/built-in/sum">https://www.programiz.com/python-programming/methods/built-in/sum</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;HackerRank 上的題目：找出成對的襪子並算出總共有幾雙&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="hackerrank" scheme="https://zanazhong.github.io/categories/hackerrank/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/hackerrank/python/"/>
    
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="dictionary" scheme="https://zanazhong.github.io/tags/dictionary/"/>
    
    <category term="hackerrank" scheme="https://zanazhong.github.io/tags/hackerrank/"/>
    
    <category term="sum" scheme="https://zanazhong.github.io/tags/sum/"/>
    
    <category term="java" scheme="https://zanazhong.github.io/tags/java/"/>
    
    <category term="hashset" scheme="https://zanazhong.github.io/tags/hashset/"/>
    
  </entry>
  
  <entry>
    <title>[分享] Website Layout - Sidebar + Flexed</title>
    <link href="https://zanazhong.github.io/2021/04/01/%E5%88%86%E4%BA%AB-Website-Layout-Sidebar-Flexed/"/>
    <id>https://zanazhong.github.io/2021/04/01/%E5%88%86%E4%BA%AB-Website-Layout-Sidebar-Flexed/</id>
    <published>2021-04-01T15:59:35.000Z</published>
    <updated>2021-04-01T16:01:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p></blockquote><span id="more"></span><iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/NWddogz?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe><p>&#x2F;&#x2F; 有空再認真補教學</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="html" scheme="https://zanazhong.github.io/categories/html/"/>
    
    
    <category term="sidebar" scheme="https://zanazhong.github.io/tags/sidebar/"/>
    
    <category term="html" scheme="https://zanazhong.github.io/tags/html/"/>
    
    <category term="css" scheme="https://zanazhong.github.io/tags/css/"/>
    
    <category term="javascript" scheme="https://zanazhong.github.io/tags/javascript/"/>
    
    <category term="jquery" scheme="https://zanazhong.github.io/tags/jquery/"/>
    
    <category term="Bootstrap" scheme="https://zanazhong.github.io/tags/Bootstrap/"/>
    
    <category term="Bootstrap-table" scheme="https://zanazhong.github.io/tags/Bootstrap-table/"/>
    
    <category term="card" scheme="https://zanazhong.github.io/tags/card/"/>
    
  </entry>
  
</feed>
