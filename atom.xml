<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hey I am Zana</title>
  
  
  <link href="https://zanazhong.github.io/atom.xml" rel="self"/>
  
  <link href="https://zanazhong.github.io/"/>
  <updated>2023-05-03T12:37:09.160Z</updated>
  <id>https://zanazhong.github.io/</id>
  
  <author>
    <name>Zana</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>筆記</title>
    <link href="https://zanazhong.github.io/2023/05/03/%E7%AD%86%E8%A8%98/"/>
    <id>https://zanazhong.github.io/2023/05/03/%E7%AD%86%E8%A8%98/</id>
    <published>2023-05-03T12:34:13.000Z</published>
    <updated>2023-05-03T12:37:09.160Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:</p><ul><li>answer[0] is a list of all distinct integers in nums1 which are not present in nums2.</li><li>answer[1] is a list of all distinct integers in nums2 which are not present in nums1.</li></ul><p>Note that the integers in the lists may be returned in any order.</p></blockquote><p><img src="https://i.imgur.com/mN6RB67.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findDifference</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        set1 = <span class="built_in">set</span>(nums1)</span><br><span class="line">        set2 = <span class="built_in">set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> [ <span class="built_in">list</span>(set1 - set2), <span class="built_in">list</span>(set2 - set1)]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;answer[0] is a list o</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1822. Sign of the Product of an Array</title>
    <link href="https://zanazhong.github.io/2023/05/02/%E7%AD%86-Leetcode-1822-Sign-of-the-Product-of-an-Array/"/>
    <id>https://zanazhong.github.io/2023/05/02/%E7%AD%86-Leetcode-1822-Sign-of-the-Product-of-an-Array/</id>
    <published>2023-05-02T10:11:37.000Z</published>
    <updated>2023-05-02T10:20:47.436Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/sign-of-the-product-of-an-array/">https://leetcode.com/problems/sign-of-the-product-of-an-array/</a></p><blockquote><p>There is a function signFunc(x) that returns:<br>1 if x is positive.<br>-1 if x is negative.<br>0 if x is equal to 0.<br>You are given an integer array nums. Let product be the product of all values in the array nums.<br>Return signFunc(product).</p></blockquote><p><img src="https://i.imgur.com/v6fBWOf.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arraySign</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        sign = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">0</span>:</span><br><span class="line">                sign = -sign</span><br><span class="line">        <span class="keyword">return</span> sign</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/sign-of-the-product-of-an-array/&quot;&gt;https://leetcode.com/problems/sign-of-the-product-of-an-array/&lt;/</summary>
      
    
    
    
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Leetcode - 1491. Average Salary Excluding the Minimum and Maximum Salary</title>
    <link href="https://zanazhong.github.io/2023/05/01/%E7%AD%86%E8%A8%98-Leetcode-1491-Average-Salary-Excluding-the-Minimum-and-Maximum-Salary/"/>
    <id>https://zanazhong.github.io/2023/05/01/%E7%AD%86%E8%A8%98-Leetcode-1491-Average-Salary-Excluding-the-Minimum-and-Maximum-Salary/</id>
    <published>2023-05-01T13:54:22.000Z</published>
    <updated>2023-05-02T10:20:20.150Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/">https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/</a></p><blockquote><p>You are given an array of unique integers salary where salary[i] is the salary of the ith employee.<br>Return the average salary of employees excluding the minimum and maximum salary. Answers within 10-5 of the actual answer will be accepted.</p></blockquote><p><img src="https://i.imgur.com/uoZrJtI.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span> </span><br><span class="line">        salary.sort()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary[<span class="number">1</span>:-<span class="number">1</span>]) / (<span class="built_in">len</span>(salary) - <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        salary.remove(<span class="built_in">min</span>(salary))</span><br><span class="line">        salary.remove(<span class="built_in">max</span>(salary))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary) / <span class="built_in">len</span>(salary)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">sum</span>(salary) - <span class="built_in">min</span>(salary) - <span class="built_in">max</span>(salary)) / (<span class="built_in">len</span>(salary) - <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        salary.sort()</span><br><span class="line">        salary.pop(<span class="number">0</span>)</span><br><span class="line">        salary.pop()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary) / <span class="built_in">len</span>(salary)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/&quot;&gt;https://leetcode.com/problems/average-sa</summary>
      
    
    
    
    
    <category term="sort" scheme="https://zanazhong.github.io/tags/sort/"/>
    
    <category term="Leetcode" scheme="https://zanazhong.github.io/tags/Leetcode/"/>
    
    <category term="Python" scheme="https://zanazhong.github.io/tags/Python/"/>
    
    <category term="Coding" scheme="https://zanazhong.github.io/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Hexo - 換電腦重新部署環境</title>
    <link href="https://zanazhong.github.io/2023/04/17/%E7%AD%86%E8%A8%98-Hexo-%E6%8F%9B%E9%9B%BB%E8%85%A6%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E7%92%B0%E5%A2%83/"/>
    <id>https://zanazhong.github.io/2023/04/17/%E7%AD%86%E8%A8%98-Hexo-%E6%8F%9B%E9%9B%BB%E8%85%A6%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E7%92%B0%E5%A2%83/</id>
    <published>2023-04-17T13:30:32.000Z</published>
    <updated>2023-04-17T13:36:56.045Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>換電腦後發現即使有用 time machine 做備份還是要重新部署<br>因為 push 至 github 的是已經編譯過後的檔案，所以沒有留原始檔的話，看起來應該沒救了(?)</p></blockquote><span id="more"></span><h3 id="step-1-電腦環境設定"><a href="#step-1-電腦環境設定" class="headerlink" title="step 1: 電腦環境設定"></a>step 1: 電腦環境設定</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><center>   <img src="https://i.imgur.com/wNuNXtT.png" width="40%"></center><h3 id="step-2-重新建置-Hexo-環境"><a href="#step-2-重新建置-Hexo-環境" class="headerlink" title="step 2: 重新建置 Hexo 環境"></a>step 2: 重新建置 Hexo 環境</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#建立一個 blog 的資料夾 (blog_name 請自行命名~)</span><br><span class="line">hexo init blog_name  </span><br></pre></td></tr></table></figure><p>若是有其他的要安裝請參考 <a href="https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-GitHub-pages-Hexo-%E6%90%AD%E5%BB%BA-Blog-Mac/#more">Hexo 環境安裝</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog_name</span><br></pre></td></tr></table></figure><h4 id="將備份的檔案複製至新的-Hexo-環境"><a href="#將備份的檔案複製至新的-Hexo-環境" class="headerlink" title="將備份的檔案複製至新的 Hexo 環境"></a>將備份的檔案複製至新的 Hexo 環境</h4><center>   <img src="https://i.imgur.com/lWLZd0F.png)" width="40%"></center><p>將除了 node_modules 跟 public 之外的檔案複製過去</p><blockquote><p>node_modules 是放一些 library 的地方，執行 npm install 時就會下載相關的 library；而 public 是放原始檔編譯後的檔案，之後部署時會再建回來</p></blockquote><h4 id="複製完執行以下指令"><a href="#複製完執行以下指令" class="headerlink" title="複製完執行以下指令"></a>複製完執行以下指令</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>可能會出現一些 Error or Warning，照著他的指示修正即可</p><h3 id="step-3-在本地端-preview-一下"><a href="#step-3-在本地端-preview-一下" class="headerlink" title="step 3: 在本地端 preview 一下"></a>step 3: 在本地端 preview 一下</h3><p>上線前還是小心謹慎一點好，先在本地檢視一下有沒有如期正常顯示，畢竟裡面已經有嘔心瀝血作品</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#透過本機的 http://localhost:<span class="number">4000</span> 查看</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure><h3 id="step-4-重新部署-gogo"><a href="#step-4-重新部署-gogo" class="headerlink" title="step 4: 重新部署 gogo"></a>step 4: 重新部署 gogo</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><h3 id="番外-部署問題"><a href="#番外-部署問題" class="headerlink" title="番外: 部署問題"></a>番外: 部署問題</h3><blockquote><p>事情有時候總是沒這麼簡單的喇!!</p></blockquote><p>看起來一般來說他給的這個網站裡面都能找到解法 ⬇️<br>Something’s wrong. Maybe you can find the solution here: %s <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a></p><p>分享一下我遇到的是 github Authentication Failed (身份驗證失敗)<br>解法：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 進去網站資料夾</span><br><span class="line"><span class="built_in">cd</span> blog_name</span><br><span class="line"></span><br><span class="line"># 修改 _config.yml</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>將 https 方式改成用 ssh 方式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">deploy:</span></span><br><span class="line"><span class="function">    <span class="title">type</span>: <span class="title">git</span></span></span><br><span class="line"><span class="function">    <span class="title">repo</span>: <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">yourname</span>/<span class="title">yourname.github.io.git</span> -&gt; <span class="title">git</span>@<span class="title">github.com:yourname</span>/<span class="title">yourname.github.io.git</span></span></span><br><span class="line"><span class="function">    <span class="title">branch</span>: <span class="title">master</span></span></span><br></pre></td></tr></table></figure><ol><li><p>Generating a new SSH key and adding it to the ssh-agent <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">:link:</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~&#x2F;.ssh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>產生金鑰的過程中，會問 3 個問題，如果沒有特殊需求可以全部使用預設值(press Enter)就好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 金鑰儲存的位置與檔名，預設檔名是前面所提到 id_ed25519，可以更改檔名，ex: githud_key</span><br><span class="line">Enter file in which to save the key (&#x2F;home&#x2F;username&#x2F;.ssh&#x2F;id_ed25519): [Press enter]</span><br><span class="line"></span><br><span class="line"># 詢問是否指定金鑰保護密碼，若有設定密碼的話，之後使用每次使用時，這把金鑰時就要輸入密碼，請務必牢記。之後想修改金鑰密碼的話，可以透過 ssh-keygen 來設定。</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Generating public&#x2F;private ed25519 key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519</span><br><span class="line">Your public key has been saved in &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:*************************** your_email@example.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ED25519 256]--+</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lDCil5I.png"></p><p>設定金鑰代理</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br><span class="line"># output: Agent pid <span class="number">98350</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.ssh/config</span><br><span class="line">open ~/.ssh/config</span><br></pre></td></tr></table></figure><p>modify ~&#x2F;.ssh&#x2F;config</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">   AddKeysToAgent yes</span><br><span class="line">   UseKeychain yes</span><br><span class="line">   IdentityFile ~/.ssh/id_ed25519 #！如果有改名的話這邊記得改</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Add your SSH private key to the ssh-agen</span><br><span class="line">ssh-add -K ~/.ssh/id_ed25519</span><br><span class="line"># <span class="built_in">copy</span> it</span><br><span class="line">pbcopy &lt; ~/.ssh/id_ed25519.pub #！如果有改名的話這邊記得改</span><br></pre></td></tr></table></figure></li><li><p>Adding a new SSH key to your GitHub account<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">:link:</a><br>![](<a href="https://i.imgur.com/fT8xpej.png">https://i.imgur.com/fT8xpej.png</a> &#x3D;200x)<br><img src="https://i.imgur.com/esiwR1T.png"></p><p><img src="https://i.imgur.com/8yv980c.png"></p><p>連線測試</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"># output: Hi XXX! You’ve successfully authenticated, but GitHub does <span class="keyword">not</span> provide shell access.</span><br></pre></td></tr></table></figure></li><li><p>deploy on GitHub</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;換電腦後發現即使有用 time machine 做備份還是要重新部署&lt;br&gt;因為 push 至 github 的是已經編譯過後的檔案，所以沒有留原始檔的話，看起來應該沒救了(?)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://zanazhong.github.io/categories/Hexo/"/>
    
    
    <category term="GitHub" scheme="https://zanazhong.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://zanazhong.github.io/tags/Hexo/"/>
    
    <category term="GitHub pages" scheme="https://zanazhong.github.io/tags/GitHub-pages/"/>
    
    <category term="Blog" scheme="https://zanazhong.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Check.io - Acceptable Password II</title>
    <link href="https://zanazhong.github.io/2021/05/01/%E7%AD%86%E8%A8%98-Check-io-Acceptable-Password-II/"/>
    <id>https://zanazhong.github.io/2021/05/01/%E7%AD%86%E8%A8%98-Check-io-Acceptable-Password-II/</id>
    <published>2021-05-01T13:20:28.000Z</published>
    <updated>2021-05-01T13:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/acceptable-password-ii/">check.io</a> 上的題目：合格的密碼須含數字<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/PvH7bh2.png"></p><h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><ul><li>密碼須大於６位數</li><li>至少需包含一個數字</li></ul><h3 id="map-用法"><a href="#map-用法" class="headerlink" title="map 用法"></a>map 用法</h3><div class="note default"><p>語法： map(function: iterable) </p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">square</span>(<span class="params">x</span>):</span></span><br><span class="line">  <span class="keyword">return</span> x * x</span><br><span class="line">    </span><br><span class="line"><span class="built_in">map</span>(square, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])  <span class="comment">#Output [2, 4, 6, 8]</span></span><br></pre></td></tr></table></figure><h3 id="any-用法"><a href="#any-用法" class="headerlink" title="any 用法"></a>any 用法</h3><h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><pre><code class="python">def is_acceptable_password(password: str) -&gt; bool:    # your code here    return True if len(password) &gt; 6 and any(map(str.isdigit, password)) else False</code></pre>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/acceptable-password-ii/&quot;&gt;check.io&lt;/a&gt; 上的題目：合格的密碼須含數字&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="map" scheme="https://zanazhong.github.io/tags/map/"/>
    
    <category term="any" scheme="https://zanazhong.github.io/tags/any/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Check.io - Date and Time Converter</title>
    <link href="https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Date-and-Time-Converter/"/>
    <id>https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Date-and-Time-Converter/</id>
    <published>2021-04-25T14:33:41.000Z</published>
    <updated>2021-05-01T13:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/date-and-time-converter/">check.io</a> 上的題目：將字串轉成規定的格式<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/1IHEoPk.png"></p><h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><h2 id=""><a href="#" class="headerlink" title="- "></a>- </h2><p>strptime<br>strftime<br>format</p><p><a href="https://www.geeksforgeeks.org/python-strftime-function/"><img src="https://i.imgur.com/cKcNfZx.png" alt="參考來源"></a></p><h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">date_time</span>(<span class="params">time: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">    <span class="comment">#convert string to datetime</span></span><br><span class="line">    date_time = datetime.datetime.strptime(time, <span class="string">&quot;%d.%m.%Y %H:%M&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> date_time.strftime(<span class="string">f&quot;<span class="subst">&#123;date_time.day&#125;</span> %B %Y year <span class="subst">&#123;date_time.hour&#125;</span> hour<span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> <span class="keyword">if</span> date_time.hour != <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>&#125;</span> <span class="subst">&#123;date_time.minute&#125;</span> minute<span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> <span class="keyword">if</span> date_time.minute != <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>分享一個查到的不錯的方法</p><pre><code class="python">import datetimedef date_time(time: str) -&gt; str:    #convert string to datetime    date_time = datetime.datetime.strptime(time, &quot;%d.%m.%Y %H:%M&quot;)    return date_time.strftime(f&quot;&#123;date_time.day&#125; %B %Y year &#123;date_time.hour&#125; &#123;[&#39;hours&#39;, &#39;hour&#39;][date_time.hour == 1]&#125; &#123;date_time.minute&#125; &#123;[&#39;minutes&#39;, &#39;minute&#39;][date_time.minute == 1]&#125;&quot;)</code></pre>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/date-and-time-converter/&quot;&gt;check.io&lt;/a&gt; 上的題目：將字串轉成規定的格式&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="datetime" scheme="https://zanazhong.github.io/tags/datetime/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Check.io - Pawn Brotherhood</title>
    <link href="https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Pawn-Brotherhood/"/>
    <id>https://zanazhong.github.io/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Pawn-Brotherhood/</id>
    <published>2021-04-25T13:57:42.000Z</published>
    <updated>2021-04-25T13:59:43.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/pawn-brotherhood/">check.io</a> 上的題目：判斷西洋棋中的兵有幾個是安全的<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p></blockquote><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/oTOaA4z.jpg"><br>總結來說：兵的行徑方向走斜對角的(左前、右前)，若是兵的右下或左下有其他兵的話，他就是安全的</p><h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">safe_pawns</span>(<span class="params">pawns: <span class="built_in">set</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">    safe = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> pawns:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(<span class="built_in">ord</span>(p[<span class="number">0</span>]) + <span class="number">1</span>) + <span class="built_in">str</span>(<span class="built_in">int</span>(p[<span class="number">1</span>]) - <span class="number">1</span>) <span class="keyword">in</span> pawns <span class="keyword">or</span> <span class="built_in">chr</span>(<span class="built_in">ord</span>(p[<span class="number">0</span>]) - <span class="number">1</span>) + <span class="built_in">str</span>(<span class="built_in">int</span>(p[<span class="number">1</span>]) - <span class="number">1</span>) <span class="keyword">in</span> pawns:</span><br><span class="line">            safe += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> safe</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/pawn-brotherhood/&quot;&gt;check.io&lt;/a&gt; 上的題目：判斷西洋棋中的兵有幾個是安全的&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下</summary>
      
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="chr" scheme="https://zanazhong.github.io/tags/chr/"/>
    
    <category term="ord" scheme="https://zanazhong.github.io/tags/ord/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] HackerRank - Sales by Match</title>
    <link href="https://zanazhong.github.io/2021/04/02/%E7%AD%86%E8%A8%98-HackerRank-Sales-by-Match/"/>
    <id>https://zanazhong.github.io/2021/04/02/%E7%AD%86%E8%A8%98-HackerRank-Sales-by-Match/</id>
    <published>2021-04-02T12:40:09.000Z</published>
    <updated>2021-04-02T14:47:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>HackerRank 上的題目：找出成對的襪子並算出總共有幾雙<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><a href="https://www.hackerrank.com/challenges/sock-merchant/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"><img src="https://i.imgur.com/McOlaEW.png"></a></p><h3 id="解題步驟："><a href="#解題步驟：" class="headerlink" title="解題步驟："></a>解題步驟：</h3><ol><li>想想怎麼找出成對的襪子並記錄</li><li>計算出所有成對的襪子有幾雙</li></ol><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>如果第一個想到用 dictionary 來實踐儲存不同顏色襪子有幾隻的話，<a href="https://zanazhong.github.io/2021/03/22/%E5%AD%B8%E7%BF%92-Python-List/">此篇文章</a> 有提到相關用法，這裡就不贅述。</p><p>最好要將 dictionay 裡所有的 value 值找出成對的並算出共有幾對的話可以使用 sum。</p><h3 id="sum-的用法"><a href="#sum-的用法" class="headerlink" title="sum 的用法"></a>sum 的用法</h3><div class="note default"><p>語法： sum(iterable, start)</p></div><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list &#x3D; [2, 4, 1, 3, 6]</span><br><span class="line">print(sum(list))</span><br><span class="line">&#x2F;&#x2F; 起始點從 100 開始 (目前沒使用過)</span><br><span class="line">print(sum(list, 100))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">16</span><br><span class="line">116</span><br></pre></td></tr></table></figure><h3 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h3><h4 id="方法一-dict-sum"><a href="#方法一-dict-sum" class="headerlink" title="方法一 dict + sum"></a>方法一 dict + sum</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sockMerchant</span>(<span class="params">n, ar</span>):</span></span><br><span class="line">    pair_count = &#123;i : ar.count(i) <span class="keyword">for</span> i <span class="keyword">in</span> ar&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(i//<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> pair_count.values())</span><br></pre></td></tr></table></figure><h4 id="方法二-set-sum"><a href="#方法二-set-sum" class="headerlink" title="方法二 set + sum"></a>方法二 set + sum</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sockMerchant</span>(<span class="params">n, ar</span>):</span></span><br><span class="line">    pair_count = <span class="built_in">set</span>(ar)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(ar.count(i) // <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> pair_count)</span><br></pre></td></tr></table></figure><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h4 id="方法一-for-loop"><a href="#方法一-for-loop" class="headerlink" title="方法一 for loop"></a>方法一 for loop</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sockMerchant</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] ar)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ar[i] != -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++ ) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ar[i] == ar[j]) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    ar[j] = -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(count);</span><br><span class="line">            sum += Math.floor(count / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法二-HashSet"><a href="#方法二-HashSet" class="headerlink" title="方法二 HashSet"></a>方法二 HashSet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sockMerchant</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] ar)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    HashSet&lt;Integer&gt; sock_set = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Integer i: ar) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sock_set.contains(i)) &#123;</span><br><span class="line">            sock_set.remove(i);</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sock_set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ref: <a href="https://www.programiz.com/python-programming/methods/built-in/sum">https://www.programiz.com/python-programming/methods/built-in/sum</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;HackerRank 上的題目：找出成對的襪子並算出總共有幾雙&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="hackerrank" scheme="https://zanazhong.github.io/categories/hackerrank/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/hackerrank/python/"/>
    
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="dictionary" scheme="https://zanazhong.github.io/tags/dictionary/"/>
    
    <category term="hackerrank" scheme="https://zanazhong.github.io/tags/hackerrank/"/>
    
    <category term="sum" scheme="https://zanazhong.github.io/tags/sum/"/>
    
    <category term="java" scheme="https://zanazhong.github.io/tags/java/"/>
    
    <category term="hashset" scheme="https://zanazhong.github.io/tags/hashset/"/>
    
  </entry>
  
  <entry>
    <title>[分享] Website Layout - Sidebar + Flexed</title>
    <link href="https://zanazhong.github.io/2021/04/01/%E5%88%86%E4%BA%AB-Website-Layout-Sidebar-Flexed/"/>
    <id>https://zanazhong.github.io/2021/04/01/%E5%88%86%E4%BA%AB-Website-Layout-Sidebar-Flexed/</id>
    <published>2021-04-01T15:59:35.000Z</published>
    <updated>2021-04-01T16:01:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p></blockquote><span id="more"></span><iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/NWddogz?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe><p>&#x2F;&#x2F; 有空再認真補教學</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="html" scheme="https://zanazhong.github.io/categories/html/"/>
    
    
    <category term="Bootstrap" scheme="https://zanazhong.github.io/tags/Bootstrap/"/>
    
    <category term="Bootstrap-table" scheme="https://zanazhong.github.io/tags/Bootstrap-table/"/>
    
    <category term="html" scheme="https://zanazhong.github.io/tags/html/"/>
    
    <category term="css" scheme="https://zanazhong.github.io/tags/css/"/>
    
    <category term="javascript" scheme="https://zanazhong.github.io/tags/javascript/"/>
    
    <category term="jquery" scheme="https://zanazhong.github.io/tags/jquery/"/>
    
    <category term="sidebar" scheme="https://zanazhong.github.io/tags/sidebar/"/>
    
    <category term="card" scheme="https://zanazhong.github.io/tags/card/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Relative Dropdown List</title>
    <link href="https://zanazhong.github.io/2021/03/30/%E7%AD%86%E8%A8%98-Relative-Dropdown-List/"/>
    <id>https://zanazhong.github.io/2021/03/30/%E7%AD%86%E8%A8%98-Relative-Dropdown-List/</id>
    <published>2021-03-30T01:55:35.000Z</published>
    <updated>2021-03-30T01:57:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p></blockquote><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get the one which just select</span></span><br><span class="line">$(<span class="string">&#x27;.form_select select&#x27;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">var</span> current_selected = <span class="built_in">this</span>.id;</span><br><span class="line">  <span class="comment">// get all Dropdown in the form</span></span><br><span class="line">  <span class="comment">// remove val of dropdowns except current select </span></span><br><span class="line">  $(<span class="string">&#x27;.form_select select:not(#&#x27;</span> + current_selected + <span class="string">&#x27;)&#x27;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#&#x27;</span> + <span class="built_in">this</span>.id).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/MWJjPGa?height=265&theme-id=dark&default-tab=html,result" frameborder="0">See the Pen <a href='https://codepen.io/ZZYume/pen/MWJjPGa'>Relative Dropdown List </a> by Yume  (<a href='https://codepen.io/ZZYume'>@ZZYume</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="html" scheme="https://zanazhong.github.io/categories/html/"/>
    
    
    <category term="html" scheme="https://zanazhong.github.io/tags/html/"/>
    
    <category term="css" scheme="https://zanazhong.github.io/tags/css/"/>
    
    <category term="javascript" scheme="https://zanazhong.github.io/tags/javascript/"/>
    
    <category term="jquery" scheme="https://zanazhong.github.io/tags/jquery/"/>
    
    <category term="dropdown" scheme="https://zanazhong.github.io/tags/dropdown/"/>
    
  </entry>
  
  <entry>
    <title>[學習] Python List</title>
    <link href="https://zanazhong.github.io/2021/03/22/%E5%AD%B8%E7%BF%92-Python-List/"/>
    <id>https://zanazhong.github.io/2021/03/22/%E5%AD%B8%E7%BF%92-Python-List/</id>
    <published>2021-03-22T14:39:49.000Z</published>
    <updated>2021-04-02T14:48:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>常遇到的問題</p><ul><li>find the duplicate elements in the list</li><li>count the duplicate elements in the list</li><li>remove the duplicate elements in the list</li></ul><span id="more"></span><h3 id="List-count-用法"><a href="#List-count-用法" class="headerlink" title="List.count() 用法"></a>List.count() 用法</h3><blockquote><p>計算指定的值在 list 出現幾次</p></blockquote><div class="note default"><p>語法：list.count(element)</p></div><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>]</span><br><span class="line"><span class="built_in">print</span>(my_list.count(<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(my_list.count(<span class="number">7</span>))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="進階"><a href="#進階" class="headerlink" title="進階"></a>進階</h4><blockquote><p>將 list 裡面所有的 element 都記錄下有幾個</p></blockquote><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dup_list = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>]</span><br><span class="line">clear_dict = &#123;i: dup_list.count(i) <span class="keyword">for</span> i <span class="keyword">in</span> dup_list&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(clear_dict)</span><br></pre></td></tr></table></figure><p>output: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;a&#39;: 3, &#39;c&#39;: 2, &#39;b&#39;: 1&#125;</span><br></pre></td></tr></table></figure><h3 id="另一種用法-Counter"><a href="#另一種用法-Counter" class="headerlink" title="另一種用法 Counter"></a>另一種用法 Counter</h3><div class="note default"><p>需要先 import<br>語法：<br>from collections import Counter<br>Counter(List&#x2F;String)</p></div><blockquote><p>counter 出來的型態通常會轉成 Dictionary 會比較方便～<br>在下面也會示範有轉成 dict 跟沒轉成 dict 的差別</p></blockquote><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">dup_list = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>]</span><br><span class="line">count_list = <span class="built_in">dict</span>(Counter(dup_list))</span><br><span class="line">count_string = Counter(<span class="string">&#x27;acacaba&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(count_list)</span><br><span class="line"><span class="built_in">print</span>(count_string)</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;a&#39;: 3, &#39;c&#39;: 2, &#39;b&#39;: 1&#125;</span><br><span class="line">Counter(&#123;&#39;a&#39;: 4, &#39;b&#39;: 1, &#39;c&#39;: 2&#125;)</span><br></pre></td></tr></table></figure><h4 id="Counter-的額外用法"><a href="#Counter-的額外用法" class="headerlink" title="Counter 的額外用法"></a>Counter 的額外用法</h4><blockquote><p>找出出現次數前 n 多</p></blockquote><div class="note default"><p>語法： Counter.most_common()</p></div><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 接續上一個例子</span></span><br><span class="line"><span class="built_in">print</span>(count_string.most_common(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(count_string.most_common(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[(&#39;a&#39;, 4)]</span><br><span class="line">[(&#39;a&#39;, 4), (&#39;c&#39;, 2)]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;常遇到的問題&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;find the duplicate elements in the list&lt;/li&gt;
&lt;li&gt;count the duplicate elements in the list&lt;/li&gt;
&lt;li&gt;remove the duplicate elements in the list&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="https://zanazhong.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="count" scheme="https://zanazhong.github.io/tags/count/"/>
    
  </entry>
  
  <entry>
    <title>[學習] Check.io - Bigger Price</title>
    <link href="https://zanazhong.github.io/2021/03/17/%E5%AD%B8%E7%BF%92-Check-io-Bigger-Price/"/>
    <id>https://zanazhong.github.io/2021/03/17/%E5%AD%B8%E7%BF%92-Check-io-Bigger-Price/</id>
    <published>2021-03-17T04:10:10.000Z</published>
    <updated>2021-03-22T04:56:31.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>check.io 上的題目：求出 list 裡 topN 貴的物品儲存方式是dicionary，每個物品各有兩個 key 分別為 name &amp; price<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><p>先來看看題目</p><p><img src="https://i.imgur.com/ss2IjD4.png"></p><p>看完題目可能會覺得小複雜，一般題目出有關 dictionary 的題目大多都只要找出一個最大或最小的 key 值，很直覺就會想到要用max&#x2F;min的函式來解決(詳細用法在<a href="https://zanazhong.github.io/2021/01/14/%E5%AD%B8%E7%BF%92-Check-io-Nearest-Value/#more">此篇文章</a>有提到)，這裡還要找不只一個，但認真想想其實也沒很難，用sort就可以一行輕鬆解決了。</p><h3 id="sorted-的用法"><a href="#sorted-的用法" class="headerlink" title="sorted 的用法"></a>sorted 的用法</h3><div class="note default"><p>語法：sorted(list, key&#x3D;parameters, reverse&#x3D;True&#x2F;False)</p></div><h4 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">9</span>]</span><br><span class="line">y = <span class="built_in">sorted</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3, 6, 9]</span><br></pre></td></tr></table></figure><p>反向排序(大到小)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = <span class="built_in">sorted</span>(x, reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[9, 6, 3, 2, 1]</span><br></pre></td></tr></table></figure><h4 id="進階"><a href="#進階" class="headerlink" title="進階"></a>進階</h4><p>example 1:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = [(<span class="string">&quot;Amy&quot;</span>, <span class="number">150</span>, <span class="number">60</span>),</span><br><span class="line">     (<span class="string">&quot;Emily&quot;</span>, <span class="number">154</span>, <span class="number">55</span>),</span><br><span class="line">     (<span class="string">&quot;Wen&quot;</span>, <span class="number">145</span>, <span class="number">70</span>)]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(x, key=<span class="keyword">lambda</span> a: a[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(&#39;Wen&#39;, 145, 70), (&#39;Amy&#39;, 150, 60), (&#39;Emily&#39;, 154, 55)]</span><br></pre></td></tr></table></figure><p>example 2:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = [&#123;<span class="string">&quot;fruit&quot;</span>: <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">20</span>&#125;,</span><br><span class="line">     &#123;<span class="string">&quot;fruit&quot;</span>: <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">18</span>&#125;,</span><br><span class="line">     &#123;<span class="string">&quot;fruit&quot;</span>: <span class="string">&quot;peach&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">25</span>&#125;] </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(x, key=<span class="keyword">lambda</span> x: x[<span class="string">&quot;price&quot;</span>]))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;&#39;fruit&#39;: &#39;banana&#39;, &#39;price&#39;: 18&#125;, &#123;&#39;fruit&#39;: &#39;apple&#39;, &#39;price&#39;: 20&#125;, &#123;&#39;fruit&#39;: &#39;peach&#39;, &#39;price&#39;: 25&#125;]</span><br></pre></td></tr></table></figure><h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bigger_price</span>(<span class="params">limit: <span class="built_in">int</span>, data: <span class="built_in">list</span></span>) -&gt; <span class="built_in">list</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        TOP most expensive goods</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(data, key=<span class="keyword">lambda</span> d: d[<span class="string">&#x27;price&#x27;</span>], reverse=<span class="literal">True</span>)[:limit]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Example:&#x27;</span>)</span><br><span class="line">    pprint(bigger_price(<span class="number">2</span>, [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bread&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">138</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;meat&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">15</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;water&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># These &quot;asserts&quot; using for self-checking and not for auto-testing</span></span><br><span class="line">    <span class="keyword">assert</span> bigger_price(<span class="number">2</span>, [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bread&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">138</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;meat&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">15</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;water&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ]) == [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">138</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bread&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">100</span>&#125;</span><br><span class="line">    ], <span class="string">&quot;First&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> bigger_price(<span class="number">1</span>, [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;pen&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">5</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whiteboard&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">170</span>&#125;</span><br><span class="line">    ]) == [&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whiteboard&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">170</span>&#125;], <span class="string">&quot;Second&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Done! Looks like it is fine. Go and check it&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;check.io 上的題目：求出 list 裡 topN 貴的物品儲存方式是dicionary，每個物品各有兩個 key 分別為 name &amp;amp; price&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="lambda" scheme="https://zanazhong.github.io/tags/lambda/"/>
    
    <category term="sort" scheme="https://zanazhong.github.io/tags/sort/"/>
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="dictionary" scheme="https://zanazhong.github.io/tags/dictionary/"/>
    
  </entry>
  
  <entry>
    <title>[學習] Pyton  try - except</title>
    <link href="https://zanazhong.github.io/2021/01/31/%E5%AD%B8%E7%BF%92-Pyton-try-except/"/>
    <id>https://zanazhong.github.io/2021/01/31/%E5%AD%B8%E7%BF%92-Pyton-try-except/</id>
    <published>2021-01-31T08:42:58.000Z</published>
    <updated>2021-03-17T04:14:13.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在開發程式的過程中，難免有會遇到錯誤，例如：使用者輸入不正確的資料、網路連線問題或語法上的問題等，如果沒有做好例外處理的機制，程式碼可能因此而中斷，還會讓使用者看到錯誤訊息，對產品使用的觀感不佳，體驗也會大打折扣。因此，在開發的過程中要考慮到錯誤發生時，程式碼要如何做適當的反應。</p></blockquote><span id="more"></span><p>Python 在例外處理的機制為：</p><div class="note default"><p>try 執行<br>except 例外<br>else 都沒出錯就執行這區塊<br>finally 任何狀況下都會執行的區塊</p></div><p>而錯誤類型可以至<a href="https://docs.python.org/3.6/library/exceptions.html">該網址</a>查看，常見ValueError(ex: int(hi))、ZeroDivisionError(ex: x &#x3D; 2&#x2F;0)、</p><p>先來個完整的架構的範例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = x / y</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不能除以零！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;結果是：&quot;</span>, result)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Hi，我一定會執行&quot;</span>)</span><br><span class="line">func(<span class="number">4</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">func(<span class="number">2</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>output：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">結果是： 2.0</span><br><span class="line">Hi，我一定會執行</span><br><span class="line">--------------</span><br><span class="line">不能除以零！</span><br><span class="line">Hi，我一定會執行</span><br></pre></td></tr></table></figure><p>一般來說可以這樣寫：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    正常時要執行的程式</span><br><span class="line">except &lt;error type&gt;:</span><br><span class="line">    錯誤時要執行程式</span><br></pre></td></tr></table></figure><p>不確定的錯誤類型的話 error type 可以不寫</p><p>example：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = x / y</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;something wrong&quot;</span>)</span><br><span class="line"></span><br><span class="line">func(<span class="number">4</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">something wrong</span><br></pre></td></tr></table></figure><p>sys.exc_info()[0] 可以用來取出 except 的錯誤訊息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">i = <span class="string">&#x27;o&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    result = i / <span class="number">0</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Unexpected error:&quot;</span>, sys.exc_info()[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>output：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unexpected error: &lt;class &#39;TypeError&#39;&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在開發程式的過程中，難免有會遇到錯誤，例如：使用者輸入不正確的資料、網路連線問題或語法上的問題等，如果沒有做好例外處理的機制，程式碼可能因此而中斷，還會讓使用者看到錯誤訊息，對產品使用的觀感不佳，體驗也會大打折扣。因此，在開發的過程中要考慮到錯誤發生時，程式碼要如何做適當的反應。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="python" scheme="https://zanazhong.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="try-except" scheme="https://zanazhong.github.io/tags/try-except/"/>
    
  </entry>
  
  <entry>
    <title>[學習] Pyton - String</title>
    <link href="https://zanazhong.github.io/2021/01/20/%E5%AD%B8%E7%BF%92-Pyton-String/"/>
    <id>https://zanazhong.github.io/2021/01/20/%E5%AD%B8%E7%BF%92-Pyton-String/</id>
    <published>2021-01-20T03:25:15.000Z</published>
    <updated>2021-03-17T04:15:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些關於 String 單字或字首大寫處理的用法</p></blockquote><span id="more"></span><h2 id="字首大寫"><a href="#字首大寫" class="headerlink" title="字首大寫"></a>字首大寫</h2><ul><li>capitalize(): 只會將字串的字首轉成大寫，其餘若有大寫的字會轉成小寫</li><li>title(): 將字串中所有“單字”的字首轉成大寫</li></ul><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot;greetings, fiends&quot;</span></span><br><span class="line"><span class="built_in">print</span>(text.capitalize())</span><br><span class="line"><span class="built_in">print</span>(text.title())</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;Greetings, friends&#39;</span><br><span class="line">&#39;Greetings, Fiends&#39;</span><br></pre></td></tr></table></figure><p>但 capitalize() 可能會遇到一個問題，若是原本句子中有人名或地名，本身字首就是大寫的單子，在使用 capitalize() 後會變成小寫，因此有另一種方法，如下：</p><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot;welcome to New York&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(text[<span class="number">0</span>].upper() + text[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Welcome to New York&quot;</span><br></pre></td></tr></table></figure><ul><li>lower(): 將字串全部轉成小寫</li><li>upper(): 將字串全部轉成大寫</li><li>islowewr(): 檢查字串是否全小寫</li><li>isupper(): 檢查字串是否全大寫</li></ul><p>input:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot;Hi, my Name is Zana&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(text.lower())</span><br><span class="line"><span class="built_in">print</span>(text.upper())</span><br><span class="line"><span class="built_in">print</span>(text.islowewr())</span><br><span class="line"><span class="built_in">print</span>(text.isupper())</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;hi, my name is zana&quot;</span><br><span class="line">&quot;HI, MY NAME IS ZANA&quot;</span><br><span class="line">False</span><br><span class="line">False</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一些關於 String 單字或字首大寫處理的用法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="python" scheme="https://zanazhong.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="string" scheme="https://zanazhong.github.io/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>[學習] Check.io - Nearest Value</title>
    <link href="https://zanazhong.github.io/2021/01/14/%E5%AD%B8%E7%BF%92-Check-io-Nearest-Value/"/>
    <id>https://zanazhong.github.io/2021/01/14/%E5%AD%B8%E7%BF%92-Check-io-Nearest-Value/</id>
    <published>2021-01-14T09:57:26.000Z</published>
    <updated>2021-03-17T04:13:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://py.checkio.org/en/mission/nearest-value/">check.io</a> 上的題目：求出與指定數字最接近之值<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p></blockquote><span id="more"></span><p><img src="https://i.imgur.com/JQbrSnX.png"></p><h3 id="lamdba-的用法"><a href="#lamdba-的用法" class="headerlink" title="lamdba 的用法"></a>lamdba 的用法</h3><div class="note default"><p>語法： lambda parameters: expression</p></div><ul><li>parameters (參數) 可以是多個參數，參數間要由 “ , ” 作間隔</li><li>expression (運算式)</li></ul><p>example_1 input:</p><figure class="highlight python"><figcaption><span>example_1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="keyword">lambda</span> x: x**<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(a(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure><p>example_2 input:</p><figure class="highlight python"><figcaption><span>example_2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="keyword">lambda</span> x, y: x * y</span><br><span class="line"><span class="built_in">print</span>(a(<span class="number">10</span>, <span class="number">11</span>))</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">110</span><br></pre></td></tr></table></figure><p>以 example_1 為例 lambda 也等於</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example</span>(<span class="params">x</span>):</span></span><br><span class="line">   <span class="keyword">return</span> x**<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(example(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>以 example_2 為例 example_2 也可以寫成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print((lambda x, y: x * y)(10, 11))</span><br></pre></td></tr></table></figure><h3 id="min-x2F-max-的用法"><a href="#min-x2F-max-的用法" class="headerlink" title="min&#x2F;max 的用法"></a>min&#x2F;max 的用法</h3><div class="note default"><p>語法： max(parameters, key&#x3D;expression)</p></div><ul><li>expression (運算式) 返回要執行比較的值 (滿抽象的QQ</li></ul><p>example_1 input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list &#x3D; [(1, &#39;a&#39;), (6, &#39;d&#39;), (4, &#39;e&#39;), (-2, &#39;y&#39;)]</span><br><span class="line">max(list)</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(6, &#39;d&#39;)</span><br></pre></td></tr></table></figure><p>example_2 input:</p><blockquote><p>tuple 型態，比較的話會先看第一個位置的值，一樣的話看第二個位置的值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list &#x3D; [(1, &#39;a&#39;), (6, &#39;d&#39;), (6, &#39;e&#39;), (-2, &#39;y&#39;)]</span><br><span class="line">max(list)</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(6, &#39;e&#39;)</span><br></pre></td></tr></table></figure><p>example_3 input:</p><blockquote><p>tuple 型態，指定要比較的為每個 tuple 裡 index&#x3D;1 的值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list &#x3D; [(1, &#39;a&#39;), (6, &#39;d&#39;), (4, &#39;e&#39;), (-2, &#39;y&#39;)]</span><br><span class="line">max(list, key&#x3D;lambda l: l[1])</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(-2, &#39;y&#39;)</span><br></pre></td></tr></table></figure><h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nearest_value</span>(<span class="params">values: <span class="built_in">set</span>, one: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">    <span class="comment"># your code here</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(values, key=<span class="keyword">lambda</span> x: (<span class="built_in">abs</span>(one - x), x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># These &quot;asserts&quot; are used for self-checking and not for an auto-testing</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>) == <span class="number">10</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">8</span>) == <span class="number">7</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>) == <span class="number">8</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>) == <span class="number">9</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">0</span>) == <span class="number">4</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">100</span>) == <span class="number">17</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">5</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">89</span>, <span class="number">100</span>&#125;, <span class="number">7</span>) == <span class="number">8</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;-<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, <span class="number">0</span>) == -<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Coding complete? Click &#x27;Check&#x27; to earn cool rewards!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站"></a>參考網站</h4><ul><li><a href="https://www.geeksforgeeks.org/python-find-closest-number-to-k-in-given-list/">https://www.geeksforgeeks.org/python-find-closest-number-to-k-in-given-list/</a></li><li><a href="https://stackoverflow.com/questions/18296755/python-max-function-using-key-and-lambda-expression">https://stackoverflow.com/questions/18296755/python-max-function-using-key-and-lambda-expression</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://py.checkio.org/en/mission/nearest-value/&quot;&gt;check.io&lt;/a&gt; 上的題目：求出與指定數字最接近之值&lt;br&gt;此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/categories/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/categories/Check-io/python/"/>
    
    
    <category term="Check.io" scheme="https://zanazhong.github.io/tags/Check-io/"/>
    
    <category term="python" scheme="https://zanazhong.github.io/tags/python/"/>
    
    <category term="lambda" scheme="https://zanazhong.github.io/tags/lambda/"/>
    
    <category term="list" scheme="https://zanazhong.github.io/tags/list/"/>
    
    <category term="min/max" scheme="https://zanazhong.github.io/tags/min-max/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] 網頁版面 - 側邊欄</title>
    <link href="https://zanazhong.github.io/2020/09/20/%E7%AD%86%E8%A8%98-%E7%B6%B2%E9%A0%81%E7%89%88%E9%9D%A2-%E5%81%B4%E9%82%8A%E6%AC%84/"/>
    <id>https://zanazhong.github.io/2020/09/20/%E7%AD%86%E8%A8%98-%E7%B6%B2%E9%A0%81%E7%89%88%E9%9D%A2-%E5%81%B4%E9%82%8A%E6%AC%84/</id>
    <published>2020-09-20T13:25:06.000Z</published>
    <updated>2021-01-20T09:00:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p></blockquote><span id="more"></span><iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/WNwaPpJ?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe><p>想看比較清楚的 code，我也有放在 <a href="https://github.com/ZanaZhong/side-nav.github.io">Github</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Bootstrap" scheme="https://zanazhong.github.io/tags/Bootstrap/"/>
    
    <category term="Bootstrap-table" scheme="https://zanazhong.github.io/tags/Bootstrap-table/"/>
    
    <category term="html" scheme="https://zanazhong.github.io/tags/html/"/>
    
    <category term="css" scheme="https://zanazhong.github.io/tags/css/"/>
    
    <category term="javascript" scheme="https://zanazhong.github.io/tags/javascript/"/>
    
    <category term="jquery" scheme="https://zanazhong.github.io/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Boostrape-table 列上編輯功能</title>
    <link href="https://zanazhong.github.io/2020/09/20/%E7%AD%86%E8%A8%98-Boostrape-table-%E5%88%97%E4%B8%8A%E7%B7%A8%E8%BC%AF%E5%8A%9F%E8%83%BD/"/>
    <id>https://zanazhong.github.io/2020/09/20/%E7%AD%86%E8%A8%98-Boostrape-table-%E5%88%97%E4%B8%8A%E7%B7%A8%E8%BC%AF%E5%8A%9F%E8%83%BD/</id>
    <published>2020-09-20T01:50:11.000Z</published>
    <updated>2021-01-14T10:36:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p></blockquote><span id="more"></span><h3 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.add&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> empty = <span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">var</span> input = $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&#x27;input[type=&quot;text&quot;]&#x27;</span>);</span><br><span class="line">   input.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(!$(<span class="built_in">this</span>).val())&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).addClass(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">       empty = <span class="literal">true</span>;</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       $(<span class="built_in">this</span>).removeClass(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">   $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;.error&quot;</span>).first().focus();</span><br><span class="line">   <span class="comment">// 新增或編輯完新增時檢查是否都有填</span></span><br><span class="line">   <span class="keyword">if</span>(!empty)&#123;</span><br><span class="line">     $(<span class="string">&#x27;input[type=text]&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).parent(<span class="string">&quot;td&quot;</span>).html($(<span class="built_in">this</span>).val());  </span><br><span class="line">     &#125;);           </span><br><span class="line">     $(<span class="string">&#x27;input[type=date]&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).parent(<span class="string">&quot;td&quot;</span>).html($(<span class="built_in">this</span>).val()); </span><br><span class="line">     &#125;)</span><br><span class="line">     $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;.add, .edit&quot;</span>).toggle();</span><br><span class="line">     $(<span class="string">&quot;.add-new&quot;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h3 id="編輯功能"><a href="#編輯功能" class="headerlink" title="編輯功能"></a>編輯功能</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.edit&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;td:not(:last-child)&quot;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (index == <span class="number">1</span>) &#123;</span><br><span class="line">        $(<span class="built_in">this</span>).html(<span class="string">&#x27;&lt;input type=&quot;date&quot; class=&quot;form-control&quot; value=&quot;&#x27;</span> + $(<span class="built_in">this</span>).text() + <span class="string">&#x27;&quot;&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="built_in">this</span>).html(<span class="string">&#x27;&lt;input type=&quot;text&quot; class=&quot;form-control&quot; value=&quot;&#x27;</span> + $(<span class="built_in">this</span>).text() + <span class="string">&#x27;&quot;&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);     </span><br><span class="line">    $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;.add, .edit&quot;</span>).toggle();</span><br><span class="line">    $(<span class="string">&quot;.add-new&quot;</span>).attr(<span class="string">&quot;disabled&quot;</span>, <span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="刪除功能"><a href="#刪除功能" class="headerlink" title="刪除功能"></a>刪除功能</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.delete&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).remove();</span><br><span class="line">    $(<span class="string">&quot;.add-new&quot;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/QWNVXoK?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe><p>ref: <a href="https://www.tutorialrepublic.com/faq.php">https://www.tutorialrepublic.com/faq.php</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://zanazhong.github.io/categories/Hexo/"/>
    
    
    <category term="Bootstrap" scheme="https://zanazhong.github.io/tags/Bootstrap/"/>
    
    <category term="Bootstrap-table" scheme="https://zanazhong.github.io/tags/Bootstrap-table/"/>
    
    <category term="html" scheme="https://zanazhong.github.io/tags/html/"/>
    
    <category term="css" scheme="https://zanazhong.github.io/tags/css/"/>
    
    <category term="javascript" scheme="https://zanazhong.github.io/tags/javascript/"/>
    
    <category term="jquery" scheme="https://zanazhong.github.io/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Hexo - nexT 基礎配置 (三)</title>
    <link href="https://zanazhong.github.io/2020/09/14/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%B8%89/"/>
    <id>https://zanazhong.github.io/2020/09/14/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%B8%89/</id>
    <published>2020-09-14T01:58:12.000Z</published>
    <updated>2021-01-14T10:36:43.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>此篇文章主要教學 Disqus 建置</p></blockquote><span id="more"></span><h3 id="新增留言功能"><a href="#新增留言功能" class="headerlink" title="新增留言功能"></a>新增留言功能</h3><ol><li><p>至 <a href="https://disqus.com/">Disqus</a> 註冊帳號<br>  <img src="https://i.imgur.com/fJmBmr6.png" alt="圖片"></p></li><li><p>選擇 I want to install Disqus on my site<br>  <img src="https://i.imgur.com/muQV1ZW.jpg" alt="圖片"></p></li><li><p>.<br>  <img src="https://i.imgur.com/FqbITcy.png" alt="圖片"></p></li><li><p>到 <a href="https://disqus.com/api/applications/">Disqus API Application</a> 註冊 application<br>  <img src="https://i.imgur.com/uVVwI0b.png" alt="圖片"></p><ul><li>點選 Register new application</li><li>完成後就會给你一個 API Key<br> <img src="https://i.imgur.com/HFKEZ37.png" alt="圖片"></li></ul></li><li><p>設定 Hexo<br>themes&#x2F;next&#x2F;_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DisqusJS</span></span><br><span class="line"><span class="comment"># Alternative Disqus - Render comment component using Disqus API.</span></span><br><span class="line"><span class="comment"># Demo: https://suka.js.org/DisqusJS/</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/SukkaW/DisqusJS</span></span><br><span class="line"><span class="attr">disqusjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># API Endpoint of Disqus API (https://disqus.com/api/).</span></span><br><span class="line">  <span class="comment"># Leave api empty if you are able to connect to Disqus API. Otherwise you need a reverse proxy for it.</span></span><br><span class="line">  <span class="comment"># For example:</span></span><br><span class="line">  <span class="comment"># api: https://disqus.skk.moe/disqus/</span></span><br><span class="line">  <span class="attr">api:</span></span><br><span class="line">  <span class="attr">apikey:</span> <span class="comment"># Register new application from https://disqus.com/api/applications/</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="comment"># See: https://disqus.com/admin/settings/general/</span></span><br></pre></td></tr></table></figure></li><li><p>完成<br>  <img src="https://i.imgur.com/iSG3tLo.png" alt="圖片"></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;自己在建置的時候查了很多資料，整理完希望幫助到有需要的人&lt;br&gt;此篇文章主要教學 Disqus 建置&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://zanazhong.github.io/categories/Hexo/"/>
    
    
    <category term="GitHub" scheme="https://zanazhong.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://zanazhong.github.io/tags/Hexo/"/>
    
    <category term="GitHub pages" scheme="https://zanazhong.github.io/tags/GitHub-pages/"/>
    
    <category term="Blog" scheme="https://zanazhong.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Hexo - nexT 基礎配置 (二)</title>
    <link href="https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%BA%8C/"/>
    <id>https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%BA%8C/</id>
    <published>2020-09-11T10:56:27.000Z</published>
    <updated>2021-01-20T02:40:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>此篇文章需要下載一些而外的套件</p></blockquote><span id="more"></span><h3 id="pjax-安裝-還不知道要做啥"><a href="#pjax-安裝-還不知道要做啥" class="headerlink" title="pjax 安裝 (還不知道要做啥)"></a>pjax 安裝 (還不知道要做啥)</h3><blockquote><p>pjax 實現了 URL 改變但不重新整理整個頁面，也就是只有局部的頁面會更新，不會讓整個頁面重新閃動（重新整理）。那這個功能有什麼特色呢？最重要的就是原本左下角的音樂播放器遇到切換頁面，就會停掉然後重新載入；但使用 pjax 後就能解決這個問題。</p></blockquote><p>&#x2F;themes&#x2F;next&#x2F;_config.yml，修改 pjax: true：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Easily enable fast Ajax navigation on your website.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pjax</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span> <span class="string">(default</span> <span class="literal">null</span><span class="string">)</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pjax themes/next/source/lib/pjax</span><br></pre></td></tr></table></figure><h3 id="文章字數統計-x2F-閱讀時間安裝"><a href="#文章字數統計-x2F-閱讀時間安裝" class="headerlink" title="文章字數統計&#x2F;閱讀時間安裝"></a>文章字數統計&#x2F;閱讀時間安裝</h3><p>&#x2F;themes&#x2F;next&#x2F;_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true # 是否&quot;換行顯示&quot;字數統計及閱讀時長</span><br><span class="line">  item_text_post: false # 字數統計和閱讀時長是要使用小圖示(true)還是文字表示(false)</span><br><span class="line">  item_text_total: false # 文章底部的字數統計和閱讀時長是要使用小圖示(true)還是文字表示(false)</span><br></pre></td></tr></table></figure><h3 id="讓google可以搜尋到你的網站"><a href="#讓google可以搜尋到你的網站" class="headerlink" title="讓google可以搜尋到你的網站"></a>讓google可以搜尋到你的網站</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>Hexo 資料夾根目錄 &#x2F;_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><p>但事情沒這麼單純，之後有空再寫</p><h3 id="文章搜尋功能安裝"><a href="#文章搜尋功能安裝" class="headerlink" title="文章搜尋功能安裝"></a>文章搜尋功能安裝</h3><p>&#x2F;themes&#x2F;next&#x2F;_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="string">(default</span> <span class="literal">false</span><span class="string">)</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>Hexo 資料夾根目錄 &#x2F;_config.yml<br>自己加上，加入最末端即可</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章搜尋功能</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure><h3 id="頁面滾動進度條"><a href="#頁面滾動進度條" class="headerlink" title="頁面滾動進度條"></a>頁面滾動進度條</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reading_progress:</span><br><span class="line">  enable: true (default false)</span><br></pre></td></tr></table></figure><p>(好像要下載這個，但我好像沒有)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-reading-progress source&#x2F;lib&#x2F;reading_progress</span><br></pre></td></tr></table></figure><h3 id="頁面載入進度條"><a href="#頁面載入進度條" class="headerlink" title="頁面載入進度條"></a>頁面載入進度條</h3><p>我的沒反應QQQQQ</p><!-- https://blog.pangao.vip/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/ --><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-pace source&#x2F;lib&#x2F;pace</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line">  # Themes list:</span><br><span class="line">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure><h3 id="閱讀統計"><a href="#閱讀統計" class="headerlink" title="閱讀統計"></a>閱讀統計</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/43jmHsU.png?90x" alt="圖片"></p><h3 id="文章中程式碼設置"><a href="#文章中程式碼設置" class="headerlink" title="文章中程式碼設置"></a>文章中程式碼設置</h3><ul><li><p>區塊樣式<br>可至 <a href="https://theme-next.js.org/highlight/">themes</a> 挑選</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">atom-one-dark-reasonable</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="string">tomorrow-night</span></span><br><span class="line"><span class="attr">prism:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br></pre></td></tr></table></figure></li><li><p>copy button</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">border_radius:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;自己在建置的時候查了很多資料，整理完希望幫助到有需要的人&lt;br&gt;此篇文章需要下載一些而外的套件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="GitHub" scheme="https://zanazhong.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://zanazhong.github.io/tags/Hexo/"/>
    
    <category term="GitHub pages" scheme="https://zanazhong.github.io/tags/GitHub-pages/"/>
    
    <category term="Blog" scheme="https://zanazhong.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Hexo - nexT 基礎配置 (一)</title>
    <link href="https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%B8%80/"/>
    <id>https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%B8%80/</id>
    <published>2020-09-11T10:43:19.000Z</published>
    <updated>2021-01-14T10:36:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>此篇文章主要是修改 _config.yml 裡的設置</p></blockquote><span id="more"></span><h3 id="新建文章分類頁面-Categories"><a href="#新建文章分類頁面-Categories" class="headerlink" title="新建文章分類頁面 (Categories)"></a>新建文章分類頁面 (Categories)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>修改 source&#x2F;categories&#x2F;index.md </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 產生當下時間</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章增加分類，只要在 categories 後面加入類別</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">categories: [categorie1, categorie2, ...]</span><br></pre></td></tr></table></figure><h3 id="新建文章標籤頁面-Tags"><a href="#新建文章標籤頁面-Tags" class="headerlink" title="新建文章標籤頁面 (Tags)"></a>新建文章標籤頁面 (Tags)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>修改 source&#x2F;tags&#x2F;index.md </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 產生當下時間</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章增加標籤，只要在 tags 後面加入標籤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [tag1, tag2, ...]</span><br></pre></td></tr></table></figure><p>下列方式會在文章中顯示 tags</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#39;[筆記] GitHub pages + Hexo 搭建 Blog (Mac)&#39;</span><br><span class="line">date: 2020-09-11 18:39:59</span><br><span class="line">tags: </span><br><span class="line">  - tag1</span><br><span class="line">  - tag2</span><br><span class="line">  - tag3</span><br><span class="line">  - tag4</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/q9GAmY2.png?450x" alt="圖片"></p><h3 id="設置首頁不顯示全文"><a href="#設置首頁不顯示全文" class="headerlink" title="設置首頁不顯示全文"></a>設置首頁不顯示全文</h3><p>Next默認會顯示全文，個人不是很喜歡，首頁會有點太長</p><ul><li>修改配置<br>印象安裝時 default 應該就是true<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">excerpt_description:</span>  <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><p>方法一： 在文章中寫 desctiption</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title: &#39;文章標題&#39;</span><br><span class="line">date: 產生當下時間</span><br><span class="line">description: &#39;會顯示在首頁的摘要，其餘的會隱藏&#39;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>方法二：<br>  在文章中想截斷的地方加上 <code>&lt;!--more--&gt;</code></p></li></ul></li></ul><h3 id="文章中-note-樣式"><a href="#文章中-note-樣式" class="headerlink" title="文章中 note 樣式"></a>文章中 note 樣式</h3><ul><li><p>default:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">style: simple</span><br><span class="line">icons: false</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/79YnfVM.png" alt="圖片"></p></li><li><p>修改後</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  style: flat</span><br><span class="line">  icons: true</span><br></pre></td></tr></table></figure><div class="note default"><p>default note</p></div><div class="note primary"><p>primary note</p></div><div class="note success"><p>success note</p></div><div class="note info"><p>info note</p></div><div class="note warning"><p>warning note</p></div><div class="note danger"><p>danger note</p></div><p>使用方法：(跟 HackMD 滿像的)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger note</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Scheme-設定"><a href="#Scheme-設定" class="headerlink" title="Scheme 設定"></a>Scheme 設定</h3><p>在 NexT 中以下幾種 Scheme 可選擇，預設主題為Muse<br>修改 theme&#x2F;next&#x2F;_config.yml，去掉註解 ‘#’ 即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><h3 id="開啟社群帳號連結"><a href="#開啟社群帳號連結" class="headerlink" title="開啟社群帳號連結"></a>開啟社群帳號連結</h3><p>修改 theme&#x2F;next&#x2F;_config.yml，去掉註解 ‘#’ 即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: &#96;Key: permalink || icon&#96;</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before &#96;||&#96; delimiter is the target permalink, value after &#96;||&#96; delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  #GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || fab fa-github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span><br><span class="line">  #Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || fab fa-weibo</span><br><span class="line">  #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || fab fa-google</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || fab fa-twitter</span><br><span class="line">  #FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;yourname&#x2F; || fab fa-facebook</span><br><span class="line">  #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || fab fa-stack-overflow</span><br><span class="line">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || fab fa-youtube</span><br><span class="line">  #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || fab fa-instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure><h3 id="大頭貼設定"><a href="#大頭貼設定" class="headerlink" title="大頭貼設定"></a>大頭貼設定</h3><p>修改 theme&#x2F;next&#x2F;_config.yml，去掉註解 ‘#’ 即可</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;自己在建置的時候查了很多資料，整理完希望幫助到有需要的人&lt;br&gt;此篇文章主要是修改 _config.yml 裡的設置&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://zanazhong.github.io/categories/Hexo/"/>
    
    
    <category term="GitHub" scheme="https://zanazhong.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://zanazhong.github.io/tags/Hexo/"/>
    
    <category term="GitHub pages" scheme="https://zanazhong.github.io/tags/GitHub-pages/"/>
    
    <category term="Blog" scheme="https://zanazhong.github.io/tags/Blog/"/>
    
    <category term="Mac" scheme="https://zanazhong.github.io/tags/Mac/"/>
    
  </entry>
  
</feed>
