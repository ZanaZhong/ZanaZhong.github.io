<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>[分享] Website Layout - Sidebar + Flexed</title>
    <url>/2021/04/01/%E5%88%86%E4%BA%AB-Website-Layout-Sidebar-Flexed/</url>
    <content><![CDATA[<blockquote>
<p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p>
</blockquote>
<span id="more"></span>

<iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/NWddogz?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe>

<p>&#x2F;&#x2F; 有空再認真補教學</p>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>sidebar</tag>
        <tag>html</tag>
        <tag>css</tag>
        <tag>javascript</tag>
        <tag>jquery</tag>
        <tag>Bootstrap</tag>
        <tag>Bootstrap-table</tag>
        <tag>card</tag>
      </tags>
  </entry>
  <entry>
    <title>[學習] Check.io - Bigger Price</title>
    <url>/2021/03/17/%E5%AD%B8%E7%BF%92-Check-io-Bigger-Price/</url>
    <content><![CDATA[<blockquote>
<p>check.io 上的題目：求出 list 裡 topN 貴的物品儲存方式是dicionary，每個物品各有兩個 key 分別為 name &amp; price<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p>
</blockquote>
<span id="more"></span>

<p>先來看看題目</p>
<p><img src="https://i.imgur.com/ss2IjD4.png"></p>
<p>看完題目可能會覺得小複雜，一般題目出有關 dictionary 的題目大多都只要找出一個最大或最小的 key 值，很直覺就會想到要用max&#x2F;min的函式來解決(詳細用法在<a href="https://zanazhong.github.io/2021/01/14/%E5%AD%B8%E7%BF%92-Check-io-Nearest-Value/#more">此篇文章</a>有提到)，這裡還要找不只一個，但認真想想其實也沒很難，用sort就可以一行輕鬆解決了。</p>
<h3 id="sorted-的用法"><a href="#sorted-的用法" class="headerlink" title="sorted 的用法"></a>sorted 的用法</h3><div class="note default"><p>語法：sorted(list, key&#x3D;parameters, reverse&#x3D;True&#x2F;False)</p>
</div>

<h4 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">9</span>]</span><br><span class="line">y = <span class="built_in">sorted</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[1, 2, 3, 6, 9]</span><br></pre></td></tr></table></figure>

<p>反向排序(大到小)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = <span class="built_in">sorted</span>(x, reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[9, 6, 3, 2, 1]</span><br></pre></td></tr></table></figure>

<h4 id="進階"><a href="#進階" class="headerlink" title="進階"></a>進階</h4><p>example 1:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [(<span class="string">&quot;Amy&quot;</span>, <span class="number">150</span>, <span class="number">60</span>),</span><br><span class="line">     (<span class="string">&quot;Emily&quot;</span>, <span class="number">154</span>, <span class="number">55</span>),</span><br><span class="line">     (<span class="string">&quot;Wen&quot;</span>, <span class="number">145</span>, <span class="number">70</span>)]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(x, key=<span class="keyword">lambda</span> a: a[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[(&#39;Wen&#39;, 145, 70), (&#39;Amy&#39;, 150, 60), (&#39;Emily&#39;, 154, 55)]</span><br></pre></td></tr></table></figure>

<p>example 2:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [&#123;<span class="string">&quot;fruit&quot;</span>: <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">20</span>&#125;,</span><br><span class="line">     &#123;<span class="string">&quot;fruit&quot;</span>: <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">18</span>&#125;,</span><br><span class="line">     &#123;<span class="string">&quot;fruit&quot;</span>: <span class="string">&quot;peach&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">25</span>&#125;] </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(x, key=<span class="keyword">lambda</span> x: x[<span class="string">&quot;price&quot;</span>]))</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#123;&#39;fruit&#39;: &#39;banana&#39;, &#39;price&#39;: 18&#125;, &#123;&#39;fruit&#39;: &#39;apple&#39;, &#39;price&#39;: 20&#125;, &#123;&#39;fruit&#39;: &#39;peach&#39;, &#39;price&#39;: 25&#125;]</span><br></pre></td></tr></table></figure>

<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bigger_price</span>(<span class="params">limit: <span class="built_in">int</span>, data: <span class="built_in">list</span></span>) -&gt; <span class="built_in">list</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        TOP most expensive goods</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(data, key=<span class="keyword">lambda</span> d: d[<span class="string">&#x27;price&#x27;</span>], reverse=<span class="literal">True</span>)[:limit]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Example:&#x27;</span>)</span><br><span class="line">    pprint(bigger_price(<span class="number">2</span>, [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bread&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">138</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;meat&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">15</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;water&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># These &quot;asserts&quot; using for self-checking and not for auto-testing</span></span><br><span class="line">    <span class="keyword">assert</span> bigger_price(<span class="number">2</span>, [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bread&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">100</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">138</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;meat&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">15</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;water&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ]) == [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">138</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bread&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">100</span>&#125;</span><br><span class="line">    ], <span class="string">&quot;First&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> bigger_price(<span class="number">1</span>, [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;pen&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">5</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whiteboard&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">170</span>&#125;</span><br><span class="line">    ]) == [&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;whiteboard&quot;</span>, <span class="string">&quot;price&quot;</span>: <span class="number">170</span>&#125;], <span class="string">&quot;Second&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Done! Looks like it is fine. Go and check it&#x27;</span>)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Check.io</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>Check.io</tag>
        <tag>python</tag>
        <tag>lambda</tag>
        <tag>sort</tag>
        <tag>list</tag>
        <tag>dictionary</tag>
      </tags>
  </entry>
  <entry>
    <title>[學習] Check.io - Nearest Value</title>
    <url>/2021/01/14/%E5%AD%B8%E7%BF%92-Check-io-Nearest-Value/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://py.checkio.org/en/mission/nearest-value/">check.io</a> 上的題目：求出與指定數字最接近之值<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p>
</blockquote>
<span id="more"></span>

<p><img src="https://i.imgur.com/JQbrSnX.png"></p>
<h3 id="lamdba-的用法"><a href="#lamdba-的用法" class="headerlink" title="lamdba 的用法"></a>lamdba 的用法</h3><div class="note default"><p>語法： lambda parameters: expression</p>
</div>

<ul>
<li>parameters (參數) 可以是多個參數，參數間要由 “ , ” 作間隔</li>
<li>expression (運算式)</li>
</ul>
<p>example_1 input:</p>
<figure class="highlight python"><figcaption><span>example_1</span></figcaption><table><tr><td class="code"><pre><span class="line">a = <span class="keyword">lambda</span> x: x**<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(a(<span class="number">10</span>))</span><br></pre></td></tr></table></figure>

<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>

<p>example_2 input:</p>
<figure class="highlight python"><figcaption><span>example_2</span></figcaption><table><tr><td class="code"><pre><span class="line">a = <span class="keyword">lambda</span> x, y: x * y</span><br><span class="line"><span class="built_in">print</span>(a(<span class="number">10</span>, <span class="number">11</span>))</span><br></pre></td></tr></table></figure>

<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">110</span><br></pre></td></tr></table></figure>
<p>以 example_1 為例 lambda 也等於</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example</span>(<span class="params">x</span>):</span></span><br><span class="line">   <span class="keyword">return</span> x**<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(example(<span class="number">10</span>))</span><br></pre></td></tr></table></figure>

<p>以 example_2 為例 example_2 也可以寫成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print((lambda x, y: x * y)(10, 11))</span><br></pre></td></tr></table></figure>

<h3 id="min-x2F-max-的用法"><a href="#min-x2F-max-的用法" class="headerlink" title="min&#x2F;max 的用法"></a>min&#x2F;max 的用法</h3><div class="note default"><p>語法： max(parameters, key&#x3D;expression)</p>
</div>
<ul>
<li>expression (運算式) 返回要執行比較的值 (滿抽象的QQ</li>
</ul>
<p>example_1 input:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list &#x3D; [(1, &#39;a&#39;), (6, &#39;d&#39;), (4, &#39;e&#39;), (-2, &#39;y&#39;)]</span><br><span class="line">max(list)</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(6, &#39;d&#39;)</span><br></pre></td></tr></table></figure>

<p>example_2 input:</p>
<blockquote>
<p>tuple 型態，比較的話會先看第一個位置的值，一樣的話看第二個位置的值</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list &#x3D; [(1, &#39;a&#39;), (6, &#39;d&#39;), (6, &#39;e&#39;), (-2, &#39;y&#39;)]</span><br><span class="line">max(list)</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(6, &#39;e&#39;)</span><br></pre></td></tr></table></figure>

<p>example_3 input:</p>
<blockquote>
<p>tuple 型態，指定要比較的為每個 tuple 裡 index&#x3D;1 的值</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list &#x3D; [(1, &#39;a&#39;), (6, &#39;d&#39;), (4, &#39;e&#39;), (-2, &#39;y&#39;)]</span><br><span class="line">max(list, key&#x3D;lambda l: l[1])</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(-2, &#39;y&#39;)</span><br></pre></td></tr></table></figure>

<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nearest_value</span>(<span class="params">values: <span class="built_in">set</span>, one: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">    <span class="comment"># your code here</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(values, key=<span class="keyword">lambda</span> x: (<span class="built_in">abs</span>(one - x), x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># These &quot;asserts&quot; are used for self-checking and not for an auto-testing</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>) == <span class="number">10</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">8</span>) == <span class="number">7</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>) == <span class="number">8</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">9</span>) == <span class="number">9</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">0</span>) == <span class="number">4</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">17</span>&#125;, <span class="number">100</span>) == <span class="number">17</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;<span class="number">5</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">89</span>, <span class="number">100</span>&#125;, <span class="number">7</span>) == <span class="number">8</span></span><br><span class="line">    <span class="keyword">assert</span> nearest_value(&#123;-<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, <span class="number">0</span>) == -<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Coding complete? Click &#x27;Check&#x27; to earn cool rewards!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h4 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站"></a>參考網站</h4><ul>
<li><a href="https://www.geeksforgeeks.org/python-find-closest-number-to-k-in-given-list/">https://www.geeksforgeeks.org/python-find-closest-number-to-k-in-given-list/</a></li>
<li><a href="https://stackoverflow.com/questions/18296755/python-max-function-using-key-and-lambda-expression">https://stackoverflow.com/questions/18296755/python-max-function-using-key-and-lambda-expression</a></li>
</ul>
]]></content>
      <categories>
        <category>Check.io</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>Check.io</tag>
        <tag>python</tag>
        <tag>lambda</tag>
        <tag>list</tag>
        <tag>min/max</tag>
      </tags>
  </entry>
  <entry>
    <title>[學習] Python List</title>
    <url>/2021/03/22/%E5%AD%B8%E7%BF%92-Python-List/</url>
    <content><![CDATA[<p>常遇到的問題</p>
<ul>
<li>find the duplicate elements in the list</li>
<li>count the duplicate elements in the list</li>
<li>remove the duplicate elements in the list</li>
</ul>
<span id="more"></span>

<h3 id="List-count-用法"><a href="#List-count-用法" class="headerlink" title="List.count() 用法"></a>List.count() 用法</h3><blockquote>
<p>計算指定的值在 list 出現幾次</p>
</blockquote>
<div class="note default"><p>語法：list.count(element)</p>
</div>

<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>]</span><br><span class="line"><span class="built_in">print</span>(my_list.count(<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(my_list.count(<span class="number">7</span>))</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<h4 id="進階"><a href="#進階" class="headerlink" title="進階"></a>進階</h4><blockquote>
<p>將 list 裡面所有的 element 都記錄下有幾個</p>
</blockquote>
<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dup_list = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>]</span><br><span class="line">clear_dict = &#123;i: dup_list.count(i) <span class="keyword">for</span> i <span class="keyword">in</span> dup_list&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(clear_dict)</span><br></pre></td></tr></table></figure>
<p>output: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;a&#39;: 3, &#39;c&#39;: 2, &#39;b&#39;: 1&#125;</span><br></pre></td></tr></table></figure>

<h3 id="另一種用法-Counter"><a href="#另一種用法-Counter" class="headerlink" title="另一種用法 Counter"></a>另一種用法 Counter</h3><div class="note default"><p>需要先 import<br>語法：<br>from collections import Counter<br>Counter(List&#x2F;String)</p>
</div>
<blockquote>
<p>counter 出來的型態通常會轉成 Dictionary 會比較方便～<br>在下面也會示範有轉成 dict 跟沒轉成 dict 的差別</p>
</blockquote>
<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">dup_list = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>]</span><br><span class="line">count_list = <span class="built_in">dict</span>(Counter(dup_list))</span><br><span class="line">count_string = Counter(<span class="string">&#x27;acacaba&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(count_list)</span><br><span class="line"><span class="built_in">print</span>(count_string)</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;a&#39;: 3, &#39;c&#39;: 2, &#39;b&#39;: 1&#125;</span><br><span class="line">Counter(&#123;&#39;a&#39;: 4, &#39;b&#39;: 1, &#39;c&#39;: 2&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="Counter-的額外用法"><a href="#Counter-的額外用法" class="headerlink" title="Counter 的額外用法"></a>Counter 的額外用法</h4><blockquote>
<p>找出出現次數前 n 多</p>
</blockquote>
<div class="note default"><p>語法： Counter.most_common()</p>
</div>

<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 接續上一個例子</span></span><br><span class="line"><span class="built_in">print</span>(count_string.most_common(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(count_string.most_common(<span class="number">2</span>))</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[(&#39;a&#39;, 4)]</span><br><span class="line">[(&#39;a&#39;, 4), (&#39;c&#39;, 2)]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>list</tag>
        <tag>count</tag>
      </tags>
  </entry>
  <entry>
    <title>[學習] Pyton  try - except</title>
    <url>/2021/01/31/%E5%AD%B8%E7%BF%92-Pyton-try-except/</url>
    <content><![CDATA[<blockquote>
<p>在開發程式的過程中，難免有會遇到錯誤，例如：使用者輸入不正確的資料、網路連線問題或語法上的問題等，如果沒有做好例外處理的機制，程式碼可能因此而中斷，還會讓使用者看到錯誤訊息，對產品使用的觀感不佳，體驗也會大打折扣。因此，在開發的過程中要考慮到錯誤發生時，程式碼要如何做適當的反應。</p>
</blockquote>
<span id="more"></span>

<p>Python 在例外處理的機制為：</p>
<div class="note default"><p>try 執行<br>except 例外<br>else 都沒出錯就執行這區塊<br>finally 任何狀況下都會執行的區塊</p>
</div>

<p>而錯誤類型可以至<a href="https://docs.python.org/3.6/library/exceptions.html">該網址</a>查看，常見ValueError(ex: int(hi))、ZeroDivisionError(ex: x &#x3D; 2&#x2F;0)、</p>
<p>先來個完整的架構的範例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = x / y</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;不能除以零！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;結果是：&quot;</span>, result)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Hi，我一定會執行&quot;</span>)</span><br><span class="line">func(<span class="number">4</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">func(<span class="number">2</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>output：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">結果是： 2.0</span><br><span class="line">Hi，我一定會執行</span><br><span class="line">--------------</span><br><span class="line">不能除以零！</span><br><span class="line">Hi，我一定會執行</span><br></pre></td></tr></table></figure>

<p>一般來說可以這樣寫：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    正常時要執行的程式</span><br><span class="line">except &lt;error type&gt;:</span><br><span class="line">    錯誤時要執行程式</span><br></pre></td></tr></table></figure>

<p>不確定的錯誤類型的話 error type 可以不寫</p>
<p>example：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = x / y</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;something wrong&quot;</span>)</span><br><span class="line"></span><br><span class="line">func(<span class="number">4</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">something wrong</span><br></pre></td></tr></table></figure>

<p>sys.exc_info()[0] 可以用來取出 except 的錯誤訊息</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">i = <span class="string">&#x27;o&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    result = i / <span class="number">0</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Unexpected error:&quot;</span>, sys.exc_info()[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>

<p>output：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Unexpected error: &lt;class &#39;TypeError&#39;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>try-except</tag>
      </tags>
  </entry>
  <entry>
    <title>[學習] Pyton - String</title>
    <url>/2021/01/20/%E5%AD%B8%E7%BF%92-Pyton-String/</url>
    <content><![CDATA[<blockquote>
<p>一些關於 String 單字或字首大寫處理的用法</p>
</blockquote>
<span id="more"></span>

<h2 id="字首大寫"><a href="#字首大寫" class="headerlink" title="字首大寫"></a>字首大寫</h2><ul>
<li>capitalize(): 只會將字串的字首轉成大寫，其餘若有大寫的字會轉成小寫</li>
<li>title(): 將字串中所有“單字”的字首轉成大寫</li>
</ul>
<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text = <span class="string">&quot;greetings, fiends&quot;</span></span><br><span class="line"><span class="built_in">print</span>(text.capitalize())</span><br><span class="line"><span class="built_in">print</span>(text.title())</span><br></pre></td></tr></table></figure>

<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;Greetings, friends&#39;</span><br><span class="line">&#39;Greetings, Fiends&#39;</span><br></pre></td></tr></table></figure>

<p>但 capitalize() 可能會遇到一個問題，若是原本句子中有人名或地名，本身字首就是大寫的單子，在使用 capitalize() 後會變成小寫，因此有另一種方法，如下：</p>
<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text = <span class="string">&quot;welcome to New York&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(text[<span class="number">0</span>].upper() + text[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;Welcome to New York&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>lower(): 將字串全部轉成小寫</li>
<li>upper(): 將字串全部轉成大寫</li>
<li>islowewr(): 檢查字串是否全小寫</li>
<li>isupper(): 檢查字串是否全大寫</li>
</ul>
<p>input:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text = <span class="string">&quot;Hi, my Name is Zana&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(text.lower())</span><br><span class="line"><span class="built_in">print</span>(text.upper())</span><br><span class="line"><span class="built_in">print</span>(text.islowewr())</span><br><span class="line"><span class="built_in">print</span>(text.isupper())</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;hi, my name is zana&quot;</span><br><span class="line">&quot;HI, MY NAME IS ZANA&quot;</span><br><span class="line">False</span><br><span class="line">False</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 1822. Sign of the Product of an Array</title>
    <url>/2023/05/02/%E7%AD%86-Leetcode-1822-Sign-of-the-Product-of-an-Array/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/sign-of-the-product-of-an-array/">https://leetcode.com/problems/sign-of-the-product-of-an-array/</a></p>
<blockquote>
<p>There is a function signFunc(x) that returns:<br>1 if x is positive.<br>-1 if x is negative.<br>0 if x is equal to 0.<br>You are given an integer array nums. Let product be the product of all values in the array nums.<br>Return signFunc(product).</p>
</blockquote>
<p><img src="https://i.imgur.com/v6fBWOf.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arraySign</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        sign = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">0</span>:</span><br><span class="line">                sign = -sign</span><br><span class="line">        <span class="keyword">return</span> sign</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>深入淺出理解 Docker 的底層運作與架</title>
    <url>/2025/01/16/%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA%E7%90%86%E8%A7%A3-Docker-%E7%9A%84%E5%BA%95%E5%B1%A4%E9%81%8B%E4%BD%9C%E8%88%87%E6%9E%B6/</url>
    <content><![CDATA[<h2 id="Docker-是什麼？"><a href="#Docker-是什麼？" class="headerlink" title="Docker 是什麼？"></a>Docker 是什麼？</h2><p>Docker 是現代開發與運維中不可或缺的工具、是一種容器化技術，用來打包、部署和運行應用程序。它讓你能在任何環境中快速部署應用，實現「一次構建，隨處運行」的目標。</p>
<span id="more"></span>

<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>要理解 Docker 的運作，我們需要先了解幾個核心概念：</p>
<ul>
<li><p><strong>Image</strong>：</p>
<ul>
<li>應用的靜態模板，包含應用程序及其運行所需的依賴（EX:程式碼、程式庫）。</li>
<li>類似於 VM 中的「快照」(Snapeshot)。</li>
</ul>
</li>
<li><p><strong>Container</strong>：</p>
<ul>
<li>從 Image 啟動的執行實例，是一個輕量的隔離運行環境。</li>
<li>每個容器共享宿主機的作業系統核心，但彼此隔離。</li>
</ul>
</li>
<li><p><strong>Registry</strong>：</p>
<ul>
<li>儲存和分發 Image 的地方（EX: Docker Hub or Private Registry）。</li>
</ul>
</li>
</ul>
<h2 id="底層技術"><a href="#底層技術" class="headerlink" title="底層技術"></a>底層技術</h2><blockquote>
<p>Docker 的強大主要依賴於 Linux 的核心功能</p>
</blockquote>
<ul>
<li><p><strong>Namespace</strong></p>
<ul>
<li>用於實現 Container 的 <strong>process 隔離</strong>。</li>
<li>每個 Container 都有自己的命名空間，確保不同容器間的資源互不影響。</li>
<li>常見的 Namespace：<ul>
<li>**PID (進程 ID)**：每個容器看到的是自己的進程列表。</li>
<li>**NET (網路)**：每個容器擁有自己的網路接口和 IP。</li>
<li>**MNT (掛載)**：每個容器有自己的檔案系統視圖。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Cgroups</strong></p>
<ul>
<li>用於實現資源管理和限制，EX: CPU、記憶體和網路。</li>
<li>防止單一容器佔用過多資源，影響整體系統性能。</li>
</ul>
</li>
<li><p><strong>UnionFS</strong></p>
<ul>
<li>支援分層的檔案系統，++減少重複存儲的數據量++。</li>
<li>Docker 的 Image 由多層構成，每層只存儲新增或修改的部分，未改變的部分會繼續共享。</li>
</ul>
</li>
<li><p><strong>Container Runtime</strong></p>
<ul>
<li>Docker 使用 <strong>containerd</strong> 作為 Container Runtime，負責管理 Container 的生命周期（啟動、停止、刪除）。</li>
</ul>
</li>
</ul>
<h2 id="核心架構"><a href="#核心架構" class="headerlink" title="核心架構"></a>核心架構</h2><ul>
<li><p><strong>Docker Client</strong>：</p>
<ul>
<li>用戶與 Docker 互動的介面，接受指令（EX: <code>docker run</code>）</li>
<li>將請求發送給 Docker Daemon。</li>
</ul>
</li>
<li><p><strong>Docker Daemon</strong>：</p>
<ul>
<li>Docker 的核心，負責處理容器操作（EX: 啟動、停止）以及管理 Image 和網絡等資源。</li>
<li>持續運行，並++監聽來自 Docker Client 的請求++。</li>
</ul>
</li>
<li><p><strong>Docker Registry</strong>：</p>
<ul>
<li>儲存與分發 Image 。</li>
<li>默認為 Docker Hub，但也可以自行建立。</li>
</ul>
</li>
<li><p><strong>Containerd</strong>：</p>
<ul>
<li>Container 的核心執行環境，管理容器的生命周期。</li>
</ul>
</li>
<li><p><strong>OCI Runtime（Open Container Initiative）</strong>：</p>
<ul>
<li>標準化的 Container Runtime（EX: runc），負責真正啟動和運行容器。</li>
</ul>
</li>
</ul>
<p><img src="https://hackmd.io/_uploads/H1Hyw48Dkg.jpg" alt="docker_architecture"></p>
<h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p>假設執行以下指令：<code>docker run hello-world</code></p>
<ol>
<li><p><strong>查找 Image</strong>：</p>
<ul>
<li>Docker Client 發送請求到 Docker Daemon。</li>
<li>Daemon 會先在本地檢查是否存在 <code>hello-world</code> Image，沒有則從 Docker Hub 拉取。</li>
</ul>
</li>
<li><p><strong>啟動容器</strong>：</p>
<ul>
<li>使用下載的 Image 創建容器。</li>
<li>分配資源（EX: CPU、Memory）並設置 Namespace。</li>
</ul>
</li>
<li><p><strong>運行應用程序</strong>：</p>
<ul>
<li>啟動容器中的應用程序。</li>
<li>使用者可以通過容器內的網路端口與應用程序交互。</li>
</ul>
</li>
</ol>
<h2 id="應用場景"><a href="#應用場景" class="headerlink" title="應用場景"></a>應用場景</h2><ul>
<li><p><strong>開發環境一致性</strong>：<br> 開發人員可以在本地運行與生產環境完全一致的環境，避免「在我這能跑」的問題。</p>
</li>
<li><p><strong>CI&#x2F;CD 流程</strong>：<br> 快速打包、測試和部署應用程序，大幅縮短交付周期。</p>
</li>
<li><p><strong>微服務架構</strong>：<br> 每個微服務打包成獨立的容器，實現高效管理和擴展。</p>
</li>
</ul>
<h2 id="優缺點"><a href="#優缺點" class="headerlink" title="優缺點"></a>優缺點</h2><table>
<thead>
<tr>
<th><strong>優點</strong></th>
<th><strong>缺點</strong></th>
</tr>
</thead>
<tbody><tr>
<td>輕量級：共享 OS 核心，減少資源需求</td>
<td>容器隔離性不如虛擬機（需注意安全設置）</td>
</tr>
<tr>
<td>啟動速度快：秒級啟動，提升開發效率</td>
<td>高效管理需要學習曲線（如編排工具 Kubernetes）</td>
</tr>
<tr>
<td>高可移植性：支援跨平台部署</td>
<td>大量容器可能增加監控和調試的複雜度</td>
</tr>
</tbody></table>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>Docker 通過整合 Linux 的 Namespace、Cgroups 和 UnionFS，提供了一個輕量且高效的容器化平台。它的設計理念簡單，但底層運作機制複雜且高效，是現代軟體開發與部署的核心工具。</p>
<div class="note info"><p>Docker 是容器技術的橋梁、是一種輕量虛擬化技術，讓你的應用程式無縫運行在任何環境中！</p>
</div>]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>Architecture</tag>
        <tag>基礎架構</tag>
        <tag>Linux</tag>
        <tag>Namespace</tag>
        <tag>Cgroups</tag>
        <tag>UnionFS</tag>
        <tag>容器化技術</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 1903. Largest Odd Number in String</title>
    <url>/2023/12/09/%E7%AD%86%E8%A8%98-1903.-Largest-Odd%20Number-in-String/</url>
    <content><![CDATA[<blockquote>
<p>You are given a string num, representing a large integer. Return the largest-valued odd integer (as a string) that is a non-empty substring of num, or an empty string “” if no odd integer exists.</p>
</blockquote>
<p>A substring is a contiguous sequence of characters within a string.</p>
<p>Example 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: num &#x3D; &quot;52&quot;</span><br><span class="line">Output: &quot;5&quot;</span><br><span class="line">Explanation: The only non-empty substrings are &quot;5&quot;, &quot;2&quot;, and &quot;52&quot;. &quot;5&quot; is the only odd number.</span><br></pre></td></tr></table></figure>
<p>Example 2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: num &#x3D; &quot;4206&quot;</span><br><span class="line">Output: &quot;&quot;</span><br><span class="line">Explanation: There are no odd numbers in &quot;4206&quot;.</span><br></pre></td></tr></table></figure>
<p>Example 3:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: num &#x3D; &quot;35427&quot;</span><br><span class="line">Output: &quot;35427&quot;</span><br><span class="line">Explanation: &quot;35427&quot; is already an odd number.</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">largestOddNumber</span>(<span class="params">self, num: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(num) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">int</span>(num[i]) % <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> num[:i + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>list</tag>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>reverse</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 1913. Maximum Product Difference Between Two Pairs</title>
    <url>/2023/12/18/%E7%AD%86%E8%A8%98-1913.-Maximum-Product%20Difference-Between-Two-Pairs/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/maximum-product-difference-between-two-pairs/">https://leetcode.com/problems/maximum-product-difference-between-two-pairs/</a></p>
<blockquote>
<p>The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).</p>
<p>For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) &#x3D; 16.<br>Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.</p>
<p>Return the maximum such product difference.</p>
</blockquote>
<span id="more"></span>

<p>Example 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums &#x3D; [5,6,2,7,4]</span><br><span class="line">Output: 34</span><br><span class="line">Explanation: We can choose indices 1 and 3 for the first pair (6, 7) and indices 2 and 4 for the second pair (2, 4).</span><br><span class="line">The product difference is (6 * 7) - (2 * 4) &#x3D; 34.</span><br></pre></td></tr></table></figure>
<p>Example 2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums &#x3D; [4,2,5,9,7,4,8]</span><br><span class="line">Output: 64</span><br><span class="line">Explanation: We can choose indices 3 and 6 for the first pair (9, 8) and indices 1 and 5 for the second pair (2, 4).</span><br><span class="line">The product difference is (9 * 8) - (2 * 4) &#x3D; 64.</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProductDifference</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        min_num1, min_num2 = math.inf, math.inf</span><br><span class="line">        max_num1, max_num2 = -math.inf, -math.inf</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> nums: </span><br><span class="line">            <span class="keyword">if</span> number &gt; max_num1:</span><br><span class="line">                max_num1, max_num2 = number, max_num1</span><br><span class="line">            <span class="keyword">elif</span> number &gt; max_num2:</span><br><span class="line">                max_num2 = number</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span> number &lt; min_num1:</span><br><span class="line">                min_num1, min_num2 = number, min_num1</span><br><span class="line">            <span class="keyword">elif</span> number &lt; min_num2:</span><br><span class="line">                min_num2 = number</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> max_num1 * max_num2 - min_num1 * min_num2</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Math</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Boostrape-table 列上編輯功能</title>
    <url>/2020/09/20/%E7%AD%86%E8%A8%98-Boostrape-table-%E5%88%97%E4%B8%8A%E7%B7%A8%E8%BC%AF%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<blockquote>
<p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p>
</blockquote>
<span id="more"></span>

<h3 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.add&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> empty = <span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">var</span> input = $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&#x27;input[type=&quot;text&quot;]&#x27;</span>);</span><br><span class="line">   input.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(!$(<span class="built_in">this</span>).val())&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).addClass(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">       empty = <span class="literal">true</span>;</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       $(<span class="built_in">this</span>).removeClass(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">   $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;.error&quot;</span>).first().focus();</span><br><span class="line">   <span class="comment">// 新增或編輯完新增時檢查是否都有填</span></span><br><span class="line">   <span class="keyword">if</span>(!empty)&#123;</span><br><span class="line">     $(<span class="string">&#x27;input[type=text]&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).parent(<span class="string">&quot;td&quot;</span>).html($(<span class="built_in">this</span>).val());  </span><br><span class="line">     &#125;);           </span><br><span class="line">     $(<span class="string">&#x27;input[type=date]&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       $(<span class="built_in">this</span>).parent(<span class="string">&quot;td&quot;</span>).html($(<span class="built_in">this</span>).val()); </span><br><span class="line">     &#125;)</span><br><span class="line">     $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;.add, .edit&quot;</span>).toggle();</span><br><span class="line">     $(<span class="string">&quot;.add-new&quot;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>

<h3 id="編輯功能"><a href="#編輯功能" class="headerlink" title="編輯功能"></a>編輯功能</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.edit&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;td:not(:last-child)&quot;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (index == <span class="number">1</span>) &#123;</span><br><span class="line">        $(<span class="built_in">this</span>).html(<span class="string">&#x27;&lt;input type=&quot;date&quot; class=&quot;form-control&quot; value=&quot;&#x27;</span> + $(<span class="built_in">this</span>).text() + <span class="string">&#x27;&quot;&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="built_in">this</span>).html(<span class="string">&#x27;&lt;input type=&quot;text&quot; class=&quot;form-control&quot; value=&quot;&#x27;</span> + $(<span class="built_in">this</span>).text() + <span class="string">&#x27;&quot;&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);     </span><br><span class="line">    $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).find(<span class="string">&quot;.add, .edit&quot;</span>).toggle();</span><br><span class="line">    $(<span class="string">&quot;.add-new&quot;</span>).attr(<span class="string">&quot;disabled&quot;</span>, <span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h3 id="刪除功能"><a href="#刪除功能" class="headerlink" title="刪除功能"></a>刪除功能</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.delete&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).parents(<span class="string">&quot;tr&quot;</span>).remove();</span><br><span class="line">    $(<span class="string">&quot;.add-new&quot;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/QWNVXoK?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe>


<p>ref: <a href="https://www.tutorialrepublic.com/faq.php">https://www.tutorialrepublic.com/faq.php</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
        <tag>javascript</tag>
        <tag>jquery</tag>
        <tag>Bootstrap</tag>
        <tag>Bootstrap-table</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Check.io - Acceptable Password II</title>
    <url>/2021/05/01/%E7%AD%86%E8%A8%98-Check-io-Acceptable-Password-II/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://py.checkio.org/en/mission/acceptable-password-ii/">check.io</a> 上的題目：合格的密碼須含數字<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看</p>
</blockquote>
<span id="more"></span>

<h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/PvH7bh2.png"></p>
<h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><ul>
<li>密碼須大於６位數</li>
<li>至少需包含一個數字</li>
</ul>
<h3 id="map-用法"><a href="#map-用法" class="headerlink" title="map 用法"></a>map 用法</h3><div class="note default"><p>語法： map(function: iterable) </p>
</div>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">square</span>(<span class="params">x</span>):</span></span><br><span class="line">  <span class="keyword">return</span> x * x</span><br><span class="line">    </span><br><span class="line"><span class="built_in">map</span>(square, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])  <span class="comment">#Output [2, 4, 6, 8]</span></span><br></pre></td></tr></table></figure>

<h3 id="any-用法"><a href="#any-用法" class="headerlink" title="any 用法"></a>any 用法</h3><h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><pre><code class="python">def is_acceptable_password(password: str) -&gt; bool:
    # your code here
    return True if len(password) &gt; 6 and any(map(str.isdigit, password)) else False
</code></pre>
]]></content>
      <categories>
        <category>Check.io</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>Check.io</tag>
        <tag>python</tag>
        <tag>map</tag>
        <tag>any</tag>
      </tags>
  </entry>
  <entry>
    <title>從架構到流程：完整理解 Docker 的 component 與互動邏輯</title>
    <url>/2025/01/17/%E5%BE%9E%E6%9E%B6%E6%A7%8B%E5%88%B0%E6%B5%81%E7%A8%8B%EF%BC%9A%E5%AE%8C%E6%95%B4%E7%90%86%E8%A7%A3-Docker-%E7%9A%84-component-%E8%88%87%E4%BA%92%E5%8B%95%E9%82%8F%E8%BC%AF/</url>
    <content><![CDATA[<p>本文將從 <strong>整體架構</strong> 和 <strong>運作流程</strong> 的角度，剖析 Docker 主要的 component 及其運作方式。</p>
<h2 id="核心組件與角色"><a href="#核心組件與角色" class="headerlink" title="核心組件與角色"></a>核心組件與角色</h2><h3 id="Docker-Client"><a href="#Docker-Client" class="headerlink" title="Docker Client"></a>Docker Client</h3><blockquote>
<p>用戶與 Docker 互動的入口，通過命令 (如 <code>docker run</code>、<code>docker build</code>) 向 Docker Daemon 發送請求。</p>
</blockquote>
<ul>
<li><strong>互動對象</strong>：與 Docker Daemon 通訊 (通常通過 REST API 或 UNIX Socket)。</li>
<li><strong>位置</strong>：用戶本地環境。</li>
</ul>
<h3 id="Docker-Daemon"><a href="#Docker-Daemon" class="headerlink" title="Docker Daemon"></a>Docker Daemon</h3><blockquote>
<p>Docker 的核心服務 process ，負責接收 Client 請求並執行具體操作，EX: 拉取 Image、創建 Container，並協調後續所有 Container 生命週期、Image 管理、網路、儲存…等工作。<br>早期 Docker Daemon 自己直接管理 Container，但後來將 Container 執行的部分抽象化給 <strong><code>Containerd</code></strong> 去處理。</p>
</blockquote>
<ul>
<li><strong>內部構成</strong>：<ul>
<li><strong>Containerd</strong>：Container 管理層，負責++管理容器的生命周期++ (EX: 啟動、停止)。</li>
<li><strong>Containerd-shim</strong>：中介層，確保 Container 與 Containerd 的解耦，讓 Container 在 Containerd 崩潰後仍能運行。</li>
<li>**OCI Runtime (EX: runc)**：執行層，負責啟動和管理容器的隔離 process 。</li>
</ul>
</li>
</ul>
<h3 id="Registry"><a href="#Registry" class="headerlink" title="Registry"></a>Registry</h3><blockquote>
<p>Image 儲存庫，用於保存和分發 Docker Image。<br>可以是 Public（EX: Docker Hub）或 Private（公司內部架設）。</p>
</blockquote>
<ul>
<li><strong>互動對象</strong>：Docker Daemon 通過拉取或推送操作與 Registry 互動。</li>
<li><strong>常見</strong>：Docker Hub、privete Registry。</li>
</ul>
<h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><blockquote>
<p>Container 的靜態模板，包含應用程式及其運行所需的依賴和配置。</p>
</blockquote>
<ul>
<li><strong>特性</strong>：<ul>
<li>使用分層文件系統 (UnionFS)，每層代表 Image 的一部分 (EX: 基礎 OS、應用依賴)。</li>
<li>不可變，<strong>可以被多個容器共享</strong>。</li>
</ul>
</li>
<li><strong>互動對象</strong>：由 Docker Daemon 從 Registry 中拉取，並交付給 Containerd 啟動 Container。</li>
</ul>
<h3 id="Container"><a href="#Container" class="headerlink" title="Container"></a>Container</h3><blockquote>
<p>Image 的運行實例，是一個輕量級、隔離的應用運行環境。</p>
</blockquote>
<ul>
<li><strong>運作基礎</strong>：依賴 Linux 的 Namespace 和 Cgroups 技術實現隔離與資源限制。</li>
<li><strong>互動對象</strong>：由 Containerd 調用 OCI Runtime 創建，並由 Containerd-shim 管理。</li>
</ul>
<h3 id="Containerd"><a href="#Containerd" class="headerlink" title="Containerd"></a>Containerd</h3><blockquote>
<p>負責 Container 的整體生命周期管理，是 Docker Daemon 的核心子系統。</p>
</blockquote>
<ul>
<li><strong>功能</strong>：<ul>
<li>拉取與管理 Image。</li>
<li>創建與刪除 Container。</li>
<li>調用 OCI Runtime 啟動容器。</li>
</ul>
</li>
<li><strong>互動對象</strong>：通過 Docker Daemon 接收指令，並向 OCI Runtime 傳遞容器配置。</li>
</ul>
<h3 id="Containerd-shim"><a href="#Containerd-shim" class="headerlink" title="Containerd-shim"></a>Containerd-shim</h3><blockquote>
<p>**中介層 (中間代理)**，管理 Container 的生命周期，確保 Container 在 Containerd 崩潰後依然運行。</p>
</blockquote>
<ul>
<li><p><strong>功能</strong>：</p>
<ul>
<li>管理 Container 與父 process 的互動。</li>
</ul>
<ul>
<li>解耦作用：確保容器的執行不依賴於 Containerd 的狀態 (狀態相互獨立)。</li>
<li>資源管理：監控 Container 的 process 狀態。</li>
<li>I&#x2F;O 管理：處理 Container 的輸入&#x2F;輸出數據，方便用戶與 Container 互動。</li>
<li>Container 生命周期管理：處理 Container 的啟動、停止及 process 監控(不因 containerd daemon 本身的重啟而中斷)。</li>
</ul>
</li>
<li><p><strong>互動對象</strong>：</p>
<ul>
<li>作為 Containerd 與容器之間的橋接，解耦 Container 與 Containerd。</li>
<li>與底層的 OCI Runtime 溝通，啟動 Container process。</li>
</ul>
</li>
</ul>
<div class="note info"><ul>
<li>shim 就像是「轉接器」或「支架（shim）」的概念，一個 Container 對應一個 shim。</li>
<li>Container 啟動後，<code>Containerd-shim</code> 會取代 <code>Containerd</code> 成為 Container 的父 process，確保即使 <code>Containerd</code> 崩潰，Container 仍然能持續運行。</li>
</ul>
</div>

<h3 id="OCI-Runtime-EX-runc"><a href="#OCI-Runtime-EX-runc" class="headerlink" title="OCI Runtime (EX: runc)"></a>OCI Runtime (EX: runc)</h3><blockquote>
<p><strong>執行層</strong>，基於 OCI (Open Container Initiative) 規範的運行時工具，負責實際啟動 Container。</p>
</blockquote>
<ul>
<li><strong>功能</strong>：<ul>
<li>設置 Container 的++隔離環境++ (Namespace、Cgroups…等)。</li>
<li>啟動 Container 內的應用 process 。</li>
</ul>
</li>
<li><strong>互動對象</strong>：由 Containerd 呼叫，執行容器啟動的具體邏輯。</li>
</ul>
<p>最常見的 OCI Runtime 是 runc，它是 OCI Runtime 的一個具體實現，專門處理容器的低層操作。</p>
<h3 id="OCI-Spec-規範"><a href="#OCI-Spec-規範" class="headerlink" title="OCI Spec (規範)"></a>OCI Spec (規範)</h3><blockquote>
<p>一套 Container 運行時的標準規範，定義 Container 的配置文件格式和行為。</p>
</blockquote>
<ul>
<li><strong>功能</strong>：<ul>
<li>描述 Container 的資源設置 (EX: CPU、Memory)。</li>
<li>定義 Container 的文件系統掛載點。</li>
<li>設置 process 的啟動命令和參數。</li>
<li>配置 Namespace 隔離（EX: 網路、PID、用戶等）。</li>
</ul>
</li>
<li><strong>內容</strong>：<ul>
<li>Container 的資源配置 (EX: CPU、Memory)。</li>
<li>Namespace 和檔案系統的隔離規則。</li>
</ul>
</li>
<li><strong>主要構成</strong>：<ul>
<li><code>config.json</code>：定義 Container 的配置，EX: 環境變量、文件系統、資源限制。</li>
<li><code>runtime-spec</code>：描述 Container 的行為規範，OCI Runtime 依此實現運行時行為。</li>
</ul>
</li>
<li><strong>互動對象</strong>：OCI Runtime 根據 OCI Spec 配置 Container 環境。</li>
</ul>
<h2 id="運作流程"><a href="#運作流程" class="headerlink" title="運作流程"></a>運作流程</h2><p>以下是執行 <code>docker run</code> 指令的完整過程：</p>
<h3 id="發送指令"><a href="#發送指令" class="headerlink" title="發送指令"></a>發送指令</h3><ul>
<li><strong>步驟</strong>：使用者執行 <code>docker run hello-world</code>。</li>
<li><strong>互動對象</strong>：Docker Client 將請求發送給 Docker Daemon。</li>
</ul>
<h3 id="拉取-Image"><a href="#拉取-Image" class="headerlink" title="拉取 Image"></a>拉取 Image</h3><ul>
<li><strong>步驟</strong>：Docker Daemon 檢查本地是否存在 Image ，若無則從 Registry 拉取。</li>
<li><strong>互動對象</strong>：Docker Daemon 與 Registry 通訊，下載 Image 後存儲於本地。</li>
</ul>
<h3 id="創建-Container"><a href="#創建-Container" class="headerlink" title="創建 Container"></a>創建 Container</h3><ul>
<li><strong>步驟</strong>：<ol>
<li>Docker Daemon 通過 Containerd 請求創建容器。</li>
<li>Containerd 調用 OCI Runtime (如 runc)，基於 OCI Spec 配置容器環境。</li>
</ol>
</li>
<li><strong>互動對象</strong>：<ul>
<li>Docker Daemon → Containerd → OCI Runtime。</li>
</ul>
</li>
</ul>
<h3 id="啟動容器"><a href="#啟動容器" class="headerlink" title="啟動容器"></a>啟動容器</h3><ul>
<li><strong>步驟</strong>：<ol>
<li>OCI Runtime 配置命名空間、Cgroups，並啟動 Container process。</li>
<li>Containerd-shim 接管 Container process 的管理，與父 process 解耦。</li>
</ol>
</li>
<li><strong>互動對象</strong>：<ul>
<li>OCI Runtime → Containerd-shim。</li>
</ul>
</li>
</ul>
<h3 id="運行與管理"><a href="#運行與管理" class="headerlink" title="運行與管理"></a>運行與管理</h3><ul>
<li><strong>步驟</strong>：容器進入運行狀態，Docker Client 可通過命令與容器互動。</li>
<li><strong>互動對象</strong>：<ul>
<li>Docker Client → Docker Daemon → Containerd。</li>
</ul>
</li>
</ul>
<h2 id="架構圖"><a href="#架構圖" class="headerlink" title="架構圖"></a>架構圖</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------------------------+</span><br><span class="line">|           Docker Client           |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">                  |</span><br><span class="line">                  v</span><br><span class="line">+-----------------------------------+                          +-----------------+ </span><br><span class="line">|           Docker Daemon  ---------|--(pull image if needed)-&gt;| Registry Client |</span><br><span class="line">|        +----------------+         |                          +-----------------+ </span><br><span class="line">|        |   Containerd   |         |                                    |</span><br><span class="line">|        +----------------+         |                                    v </span><br><span class="line">|                 |                 |                              +------------+</span><br><span class="line">|                 v                 |                              |  Registry  |</span><br><span class="line">|        +-----------------+        |                              +------------+</span><br><span class="line">|        | Containerd-shim |        |</span><br><span class="line">|        +-----------------+        |</span><br><span class="line">|                 |                 |</span><br><span class="line">|                 v                 |</span><br><span class="line">|        +-----------------+        |</span><br><span class="line">|        |   OCI Runtime   |        |</span><br><span class="line">|        +-----------------+        |</span><br><span class="line">|                 |                 |</span><br><span class="line">|                 v                 |</span><br><span class="line">|  Containers (Isolated Processes)  |</span><br><span class="line">+-----------------------------------+</span><br></pre></td></tr></table></figure>

<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><table>
<thead>
<tr>
<th><strong>組件名稱</strong></th>
<th><strong>作用</strong></th>
<th><strong>互動對象</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Docker Client</td>
<td>接收用戶指令，發送給 Docker Daemon</td>
<td>Docker Daemon</td>
</tr>
<tr>
<td>Docker Daemon</td>
<td>管理 Container 的核心服務，處理 Image 與 Container 操作</td>
<td>Docker Client、Registry、Containerd</td>
</tr>
<tr>
<td>Registry</td>
<td>儲存與分發 Image</td>
<td>Docker Daemon</td>
</tr>
<tr>
<td>Image</td>
<td>Container 的靜態模板</td>
<td>Docker Daemon</td>
</tr>
<tr>
<td>Container</td>
<td>Image 的運行實例</td>
<td>Containerd</td>
</tr>
<tr>
<td>Containerd</td>
<td>管理 Container 的生命周期</td>
<td>Docker Daemon、OCI Runtime</td>
</tr>
<tr>
<td>Containerd-shim</td>
<td>確保 Container 與 Containerd 解耦</td>
<td>Containerd、Container、OCI Runtime</td>
</tr>
<tr>
<td>OCI Runtime (runc)</td>
<td>實際執行Container</td>
<td>Containerd、作業系統</td>
</tr>
<tr>
<td>OCI Spec</td>
<td>Container 配置的標準規範</td>
<td>OCI Runtime</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>Architecture</tag>
        <tag>基礎架構</tag>
        <tag>容器化技術</tag>
        <tag>Containerd</tag>
        <tag>OCI</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Check.io - Date and Time Converter</title>
    <url>/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Date-and-Time-Converter/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://py.checkio.org/en/mission/date-and-time-converter/">check.io</a> 上的題目：將字串轉成規定的格式<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後方便複習，有興趣的人可以參考看看</p>
</blockquote>
<span id="more"></span>

<h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/1IHEoPk.png"></p>
<h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><h2 id=""><a href="#" class="headerlink" title="- "></a>- </h2><p>strptime<br>strftime<br>format</p>
<p><a href="https://www.geeksforgeeks.org/python-strftime-function/"><img src="https://i.imgur.com/cKcNfZx.png" alt="參考來源"></a></p>
<h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">date_time</span>(<span class="params">time: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">    <span class="comment">#convert string to datetime</span></span><br><span class="line">    date_time = datetime.datetime.strptime(time, <span class="string">&quot;%d.%m.%Y %H:%M&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> date_time.strftime(<span class="string">f&quot;<span class="subst">&#123;date_time.day&#125;</span> %B %Y year <span class="subst">&#123;date_time.hour&#125;</span> hour<span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> <span class="keyword">if</span> date_time.hour != <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>&#125;</span> <span class="subst">&#123;date_time.minute&#125;</span> minute<span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> <span class="keyword">if</span> date_time.minute != <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>分享一個查到的不錯的方法</p>
<pre><code class="python">import datetime

def date_time(time: str) -&gt; str:
    #convert string to datetime
    date_time = datetime.datetime.strptime(time, &quot;%d.%m.%Y %H:%M&quot;)

    return date_time.strftime(f&quot;&#123;date_time.day&#125; %B %Y year &#123;date_time.hour&#125; &#123;[&#39;hours&#39;, &#39;hour&#39;][date_time.hour == 1]&#125; &#123;date_time.minute&#125; &#123;[&#39;minutes&#39;, &#39;minute&#39;][date_time.minute == 1]&#125;&quot;)
</code></pre>
]]></content>
      <categories>
        <category>Check.io</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>Check.io</tag>
        <tag>python</tag>
        <tag>datetime</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Check.io - Pawn Brotherhood</title>
    <url>/2021/04/25/%E7%AD%86%E8%A8%98-Check-io-Pawn-Brotherhood/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://py.checkio.org/en/mission/pawn-brotherhood/">check.io</a> 上的題目：判斷西洋棋中的兵有幾個是安全的<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p>
</blockquote>
<h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><img src="https://i.imgur.com/oTOaA4z.jpg"><br>總結來說：兵的行徑方向走斜對角的(左前、右前)，若是兵的右下或左下有其他兵的話，他就是安全的</p>
<h2 id="解題步驟"><a href="#解題步驟" class="headerlink" title="解題步驟"></a>解題步驟</h2><h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">safe_pawns</span>(<span class="params">pawns: <span class="built_in">set</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">    safe = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> pawns:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(<span class="built_in">ord</span>(p[<span class="number">0</span>]) + <span class="number">1</span>) + <span class="built_in">str</span>(<span class="built_in">int</span>(p[<span class="number">1</span>]) - <span class="number">1</span>) <span class="keyword">in</span> pawns <span class="keyword">or</span> <span class="built_in">chr</span>(<span class="built_in">ord</span>(p[<span class="number">0</span>]) - <span class="number">1</span>) + <span class="built_in">str</span>(<span class="built_in">int</span>(p[<span class="number">1</span>]) - <span class="number">1</span>) <span class="keyword">in</span> pawns:</span><br><span class="line">            safe += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> safe</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Check.io</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>Check.io</tag>
        <tag>python</tag>
        <tag>chr</tag>
        <tag>ord</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] GitHub pages + Hexo 搭建 Blog (Mac)</title>
    <url>/2020/09/11/%E7%AD%86%E8%A8%98-GitHub-pages-Hexo-%E6%90%AD%E5%BB%BA-Blog-Mac/</url>
    <content><![CDATA[<blockquote>
<p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>完整手把手教學  GitHub pages + Hexo 搭建</p>
</blockquote>
<span id="more"></span>

<h3 id="環境建置"><a href="#環境建置" class="headerlink" title="環境建置"></a>環境建置</h3><ul>
<li>安裝 <a href="https://nodejs.org/en/">Node.js</a><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h3><p>安裝完 Hexo 後，執行下方指令，Hexo 就會在指定資料夾 <folder name> 中新建所需要的的檔案。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder name&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder name&gt;</span><br><span class="line">npm install</span><br><span class="line">//安裝 git 部署套件</span><br><span class="line">npm install hexo-deployer-git --save  </span><br></pre></td></tr></table></figure>

<h3 id="啟動-Hexo"><a href="#啟動-Hexo" class="headerlink" title="啟動 Hexo"></a>啟動 Hexo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<ul>
<li><p>指令介紹<br>hexo generate (hexo g) 產生靜態檔案，會在目錄下產生public 資料夾<br>hexo server (hexo s) 預覽、啟動伺服器，預設 <a href="http://localhost:4000/">http://localhost:4000/</a><br>hexo deploy (hexo d) 部署網站 (EX: github, heroku … ）</p>
</li>
<li><p>常用組合<br>hexo d -g # 產生靜態檔後部署<br>hexo s -g # 產生靜態檔後預覽</p>
</li>
</ul>
<h3 id="網站配置-config-yml"><a href="#網站配置-config-yml" class="headerlink" title="網站配置 _config.yml"></a>網站配置 _config.yml</h3><p>5 ~ 12 行</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="string">//</span> <span class="string">內容描述(給搜尋引擎看的)</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> </span><br><span class="line"><span class="attr">author:</span> </span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="將-Hexo-配置到-GitHub"><a href="#將-Hexo-配置到-GitHub" class="headerlink" title="將 Hexo 配置到 GitHub"></a>將 Hexo 配置到 GitHub</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url: https:&#x2F;&#x2F;&lt;username&gt;.github.io&#x2F;</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;username&gt;&lt;&#x2F;username&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<ul>
<li>若沒有 GitHub 帳號<ol>
<li>至 <a href="https://github.com/">GitHub</a> 申請</li>
<li>新建 Repositories 取名為 &lt;blogname.github.io&gt;.github.io</li>
</ol>
</li>
</ul>
<h3 id="更換主題"><a href="#更換主題" class="headerlink" title="更換主題"></a>更換主題</h3><p>可至 <a href="https://hexo.io/themes/">Themes</a> 挑選，據說最多人用的是 <a href="https://theme-next.org/">NexT</a></p>
<ul>
<li><p>安裝 NexT</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next.git themes&#x2F;next</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 _config.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next ( default landscape )</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新啟動 server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h3><p>文章會以 Markdown 格式來撰寫，並且檔案存放在 <folder name>&#x2F;source&#x2F;_posts&#x2F;  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;&lt;title&gt;&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>GitHub pages</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Hexo - nexT 基礎配置 (一)</title>
    <url>/2020/09/11/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%B8%80/</url>
    <content><![CDATA[<blockquote>
<p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>此篇文章主要是修改 _config.yml 裡的設置</p>
</blockquote>
<span id="more"></span>

<h3 id="新建文章分類頁面-Categories"><a href="#新建文章分類頁面-Categories" class="headerlink" title="新建文章分類頁面 (Categories)"></a>新建文章分類頁面 (Categories)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
<p>修改 source&#x2F;categories&#x2F;index.md </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 產生當下時間</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>文章增加分類，只要在 categories 後面加入類別</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories: [categorie1, categorie2, ...]</span><br></pre></td></tr></table></figure>

<h3 id="新建文章標籤頁面-Tags"><a href="#新建文章標籤頁面-Tags" class="headerlink" title="新建文章標籤頁面 (Tags)"></a>新建文章標籤頁面 (Tags)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>修改 source&#x2F;tags&#x2F;index.md </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 產生當下時間</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>文章增加標籤，只要在 tags 後面加入標籤</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tags: [tag1, tag2, ...]</span><br></pre></td></tr></table></figure>
<p>下列方式會在文章中顯示 tags</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#39;[筆記] GitHub pages + Hexo 搭建 Blog (Mac)&#39;</span><br><span class="line">date: 2020-09-11 18:39:59</span><br><span class="line">tags: </span><br><span class="line">  - tag1</span><br><span class="line">  - tag2</span><br><span class="line">  - tag3</span><br><span class="line">  - tag4</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/q9GAmY2.png?450x" alt="圖片"></p>
<h3 id="設置首頁不顯示全文"><a href="#設置首頁不顯示全文" class="headerlink" title="設置首頁不顯示全文"></a>設置首頁不顯示全文</h3><p>Next默認會顯示全文，個人不是很喜歡，首頁會有點太長</p>
<ul>
<li>修改配置<br>印象安裝時 default 應該就是true<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt_description:</span>  <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>方法一： 在文章中寫 desctiption</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--- </span><br><span class="line">title: &#39;文章標題&#39;</span><br><span class="line">date: 產生當下時間</span><br><span class="line">description: &#39;會顯示在首頁的摘要，其餘的會隱藏&#39;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>方法二：<br>  在文章中想截斷的地方加上 <code>&lt;!--more--&gt;</code></p>
</li>
</ul>
</li>
</ul>
<h3 id="文章中-note-樣式"><a href="#文章中-note-樣式" class="headerlink" title="文章中 note 樣式"></a>文章中 note 樣式</h3><ul>
<li><p>default:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">style: simple</span><br><span class="line">icons: false</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/79YnfVM.png" alt="圖片"></p>
</li>
<li><p>修改後</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">note:</span><br><span class="line">  style: flat</span><br><span class="line">  icons: true</span><br></pre></td></tr></table></figure>
<div class="note default"><p>default note</p>
</div>

<div class="note primary"><p>primary note</p>
</div>

<div class="note success"><p>success note</p>
</div>

<div class="note info"><p>info note</p>
</div>

<div class="note warning"><p>warning note</p>
</div>

<div class="note danger"><p>danger note</p>
</div>

<p>使用方法：(跟 HackMD 滿像的)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning note</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger note</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Scheme-設定"><a href="#Scheme-設定" class="headerlink" title="Scheme 設定"></a>Scheme 設定</h3><p>在 NexT 中以下幾種 Scheme 可選擇，預設主題為Muse<br>修改 theme&#x2F;next&#x2F;_config.yml，去掉註解 ‘#’ 即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<h3 id="開啟社群帳號連結"><a href="#開啟社群帳號連結" class="headerlink" title="開啟社群帳號連結"></a>開啟社群帳號連結</h3><p>修改 theme&#x2F;next&#x2F;_config.yml，去掉註解 ‘#’ 即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: &#96;Key: permalink || icon&#96;</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before &#96;||&#96; delimiter is the target permalink, value after &#96;||&#96; delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  #GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || fab fa-github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span><br><span class="line">  #Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || fab fa-weibo</span><br><span class="line">  #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || fab fa-google</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || fab fa-twitter</span><br><span class="line">  #FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;yourname&#x2F; || fab fa-facebook</span><br><span class="line">  #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || fab fa-stack-overflow</span><br><span class="line">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || fab fa-youtube</span><br><span class="line">  #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || fab fa-instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>

<h3 id="大頭貼設定"><a href="#大頭貼設定" class="headerlink" title="大頭貼設定"></a>大頭貼設定</h3><p>修改 theme&#x2F;next&#x2F;_config.yml，去掉註解 ‘#’ 即可</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>GitHub pages</tag>
        <tag>Blog</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] HackerRank - Sales by Match</title>
    <url>/2021/04/02/%E7%AD%86%E8%A8%98-HackerRank-Sales-by-Match/</url>
    <content><![CDATA[<blockquote>
<p>HackerRank 上的題目：找出成對的襪子並算出總共有幾雙<br>此系列文章主要是自己在解題時覺得有趣的題目，記錄下來讓自己以後好複習，有興趣的人可以參考看看</p>
</blockquote>
<span id="more"></span>

<h2 id="先來看看題目"><a href="#先來看看題目" class="headerlink" title="先來看看題目"></a>先來看看題目</h2><p><a href="https://www.hackerrank.com/challenges/sock-merchant/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"><img src="https://i.imgur.com/McOlaEW.png"></a></p>
<h3 id="解題步驟："><a href="#解題步驟：" class="headerlink" title="解題步驟："></a>解題步驟：</h3><ol>
<li>想想怎麼找出成對的襪子並記錄</li>
<li>計算出所有成對的襪子有幾雙</li>
</ol>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>如果第一個想到用 dictionary 來實踐儲存不同顏色襪子有幾隻的話，<a href="https://zanazhong.github.io/2021/03/22/%E5%AD%B8%E7%BF%92-Python-List/">此篇文章</a> 有提到相關用法，這裡就不贅述。</p>
<p>最好要將 dictionay 裡所有的 value 值找出成對的並算出共有幾對的話可以使用 sum。</p>
<h3 id="sum-的用法"><a href="#sum-的用法" class="headerlink" title="sum 的用法"></a>sum 的用法</h3><div class="note default"><p>語法： sum(iterable, start)</p>
</div>

<p>input:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list &#x3D; [2, 4, 1, 3, 6]</span><br><span class="line">print(sum(list))</span><br><span class="line">&#x2F;&#x2F; 起始點從 100 開始 (目前沒使用過)</span><br><span class="line">print(sum(list, 100))</span><br></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">16</span><br><span class="line">116</span><br></pre></td></tr></table></figure>

<h3 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h3><h4 id="方法一-dict-sum"><a href="#方法一-dict-sum" class="headerlink" title="方法一 dict + sum"></a>方法一 dict + sum</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sockMerchant</span>(<span class="params">n, ar</span>):</span></span><br><span class="line">    pair_count = &#123;i : ar.count(i) <span class="keyword">for</span> i <span class="keyword">in</span> ar&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(i//<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> pair_count.values())</span><br></pre></td></tr></table></figure>
<h4 id="方法二-set-sum"><a href="#方法二-set-sum" class="headerlink" title="方法二 set + sum"></a>方法二 set + sum</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sockMerchant</span>(<span class="params">n, ar</span>):</span></span><br><span class="line">    pair_count = <span class="built_in">set</span>(ar)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(ar.count(i) // <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> pair_count)</span><br></pre></td></tr></table></figure>

<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h4 id="方法一-for-loop"><a href="#方法一-for-loop" class="headerlink" title="方法一 for loop"></a>方法一 for loop</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sockMerchant</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] ar)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ar[i] != -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++ ) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ar[i] == ar[j]) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    ar[j] = -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(count);</span><br><span class="line">            sum += Math.floor(count / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="方法二-HashSet"><a href="#方法二-HashSet" class="headerlink" title="方法二 HashSet"></a>方法二 HashSet</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sockMerchant</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] ar)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    HashSet&lt;Integer&gt; sock_set = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Integer i: ar) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sock_set.contains(i)) &#123;</span><br><span class="line">            sock_set.remove(i);</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sock_set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>ref: <a href="https://www.programiz.com/python-programming/methods/built-in/sum">https://www.programiz.com/python-programming/methods/built-in/sum</a></p>
]]></content>
      <categories>
        <category>hackerrank</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>dictionary</tag>
        <tag>hackerrank</tag>
        <tag>sum</tag>
        <tag>java</tag>
        <tag>hashset</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Hexo - nexT 基礎配置 (三)</title>
    <url>/2020/09/14/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%B8%89/</url>
    <content><![CDATA[<blockquote>
<p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>此篇文章主要教學 Disqus 建置</p>
</blockquote>
<span id="more"></span>


<h3 id="新增留言功能"><a href="#新增留言功能" class="headerlink" title="新增留言功能"></a>新增留言功能</h3><ol>
<li><p>至 <a href="https://disqus.com/">Disqus</a> 註冊帳號<br>  <img src="https://i.imgur.com/fJmBmr6.png" alt="圖片"></p>
</li>
<li><p>選擇 I want to install Disqus on my site<br>  <img src="https://i.imgur.com/muQV1ZW.jpg" alt="圖片"></p>
</li>
<li><p>.<br>  <img src="https://i.imgur.com/FqbITcy.png" alt="圖片"></p>
</li>
<li><p>到 <a href="https://disqus.com/api/applications/">Disqus API Application</a> 註冊 application<br>  <img src="https://i.imgur.com/uVVwI0b.png" alt="圖片"></p>
<ul>
<li>點選 Register new application</li>
<li>完成後就會给你一個 API Key<br> <img src="https://i.imgur.com/HFKEZ37.png" alt="圖片"></li>
</ul>
</li>
<li><p>設定 Hexo<br>themes&#x2F;next&#x2F;_config.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DisqusJS</span></span><br><span class="line"><span class="comment"># Alternative Disqus - Render comment component using Disqus API.</span></span><br><span class="line"><span class="comment"># Demo: https://suka.js.org/DisqusJS/</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/SukkaW/DisqusJS</span></span><br><span class="line"><span class="attr">disqusjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># API Endpoint of Disqus API (https://disqus.com/api/).</span></span><br><span class="line">  <span class="comment"># Leave api empty if you are able to connect to Disqus API. Otherwise you need a reverse proxy for it.</span></span><br><span class="line">  <span class="comment"># For example:</span></span><br><span class="line">  <span class="comment"># api: https://disqus.skk.moe/disqus/</span></span><br><span class="line">  <span class="attr">api:</span></span><br><span class="line">  <span class="attr">apikey:</span> <span class="comment"># Register new application from https://disqus.com/api/applications/</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="comment"># See: https://disqus.com/admin/settings/general/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>完成<br>  <img src="https://i.imgur.com/iSG3tLo.png" alt="圖片"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>GitHub pages</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Hexo - nexT 基礎配置 (二)</title>
    <url>/2020/09/11/%E7%AD%86%E8%A8%98-Hexo-nexT-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE-%E4%BA%8C/</url>
    <content><![CDATA[<blockquote>
<p>自己在建置的時候查了很多資料，整理完希望幫助到有需要的人<br>此篇文章需要下載一些而外的套件</p>
</blockquote>
<span id="more"></span>

<h3 id="pjax-安裝-還不知道要做啥"><a href="#pjax-安裝-還不知道要做啥" class="headerlink" title="pjax 安裝 (還不知道要做啥)"></a>pjax 安裝 (還不知道要做啥)</h3><blockquote>
<p>pjax 實現了 URL 改變但不重新整理整個頁面，也就是只有局部的頁面會更新，不會讓整個頁面重新閃動（重新整理）。那這個功能有什麼特色呢？最重要的就是原本左下角的音樂播放器遇到切換頁面，就會停掉然後重新載入；但使用 pjax 後就能解決這個問題。</p>
</blockquote>
<p>&#x2F;themes&#x2F;next&#x2F;_config.yml，修改 pjax: true：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Easily enable fast Ajax navigation on your website.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pjax</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span> <span class="string">(default</span> <span class="literal">null</span><span class="string">)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pjax themes/next/source/lib/pjax</span><br></pre></td></tr></table></figure>

<h3 id="文章字數統計-x2F-閱讀時間安裝"><a href="#文章字數統計-x2F-閱讀時間安裝" class="headerlink" title="文章字數統計&#x2F;閱讀時間安裝"></a>文章字數統計&#x2F;閱讀時間安裝</h3><p>&#x2F;themes&#x2F;next&#x2F;_config.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true # 是否&quot;換行顯示&quot;字數統計及閱讀時長</span><br><span class="line">  item_text_post: false # 字數統計和閱讀時長是要使用小圖示(true)還是文字表示(false)</span><br><span class="line">  item_text_total: false # 文章底部的字數統計和閱讀時長是要使用小圖示(true)還是文字表示(false)</span><br></pre></td></tr></table></figure>

<h3 id="讓google可以搜尋到你的網站"><a href="#讓google可以搜尋到你的網站" class="headerlink" title="讓google可以搜尋到你的網站"></a>讓google可以搜尋到你的網站</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
<p>Hexo 資料夾根目錄 &#x2F;_config.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure>
<p>但事情沒這麼單純，之後有空再寫</p>
<h3 id="文章搜尋功能安裝"><a href="#文章搜尋功能安裝" class="headerlink" title="文章搜尋功能安裝"></a>文章搜尋功能安裝</h3><p>&#x2F;themes&#x2F;next&#x2F;_config.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="string">(default</span> <span class="literal">false</span><span class="string">)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>Hexo 資料夾根目錄 &#x2F;_config.yml<br>自己加上，加入最末端即可</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章搜尋功能</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>

<h3 id="頁面滾動進度條"><a href="#頁面滾動進度條" class="headerlink" title="頁面滾動進度條"></a>頁面滾動進度條</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reading_progress:</span><br><span class="line">  enable: true (default false)</span><br></pre></td></tr></table></figure>
<p>(好像要下載這個，但我好像沒有)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-reading-progress source&#x2F;lib&#x2F;reading_progress</span><br></pre></td></tr></table></figure>

<h3 id="頁面載入進度條"><a href="#頁面載入進度條" class="headerlink" title="頁面載入進度條"></a>頁面載入進度條</h3><p>我的沒反應QQQQQ</p>
<!-- https://blog.pangao.vip/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/ -->
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-pace source&#x2F;lib&#x2F;pace</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line">  # Themes list:</span><br><span class="line">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure>

<h3 id="閱讀統計"><a href="#閱讀統計" class="headerlink" title="閱讀統計"></a>閱讀統計</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/43jmHsU.png?90x" alt="圖片"></p>
<h3 id="文章中程式碼設置"><a href="#文章中程式碼設置" class="headerlink" title="文章中程式碼設置"></a>文章中程式碼設置</h3><ul>
<li><p>區塊樣式<br>可至 <a href="https://theme-next.js.org/highlight/">themes</a> 挑選</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">atom-one-dark-reasonable</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="string">tomorrow-night</span></span><br><span class="line"><span class="attr">prism:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>copy button</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">border_radius:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>GitHub pages</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Hexo - 換電腦重新部署環境</title>
    <url>/2023/04/17/%E7%AD%86%E8%A8%98-Hexo-%E6%8F%9B%E9%9B%BB%E8%85%A6%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E7%92%B0%E5%A2%83/</url>
    <content><![CDATA[<blockquote>
<p>換電腦後發現即使有用 time machine 做備份還是要重新部署<br>因為 push 至 github 的是已經編譯過後的檔案，所以沒有留原始檔的話，看起來應該沒救了(?)</p>
</blockquote>
<span id="more"></span>
<h3 id="step-1-電腦環境設定"><a href="#step-1-電腦環境設定" class="headerlink" title="step 1: 電腦環境設定"></a>step 1: 電腦環境設定</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
<center>
   <img src="https://i.imgur.com/wNuNXtT.png" width="40%">
</center>

<h3 id="step-2-重新建置-Hexo-環境"><a href="#step-2-重新建置-Hexo-環境" class="headerlink" title="step 2: 重新建置 Hexo 環境"></a>step 2: 重新建置 Hexo 環境</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#建立一個 blog 的資料夾 (blog_name 請自行命名~)</span><br><span class="line">hexo init blog_name  </span><br></pre></td></tr></table></figure>
<p>若是有其他的要安裝請參考 <a href="https://zanazhong.github.io/2020/09/11/%E7%AD%86%E8%A8%98-GitHub-pages-Hexo-%E6%90%AD%E5%BB%BA-Blog-Mac/#more">Hexo 環境安裝</a></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog_name</span><br></pre></td></tr></table></figure>
<h4 id="將備份的檔案複製至新的-Hexo-環境"><a href="#將備份的檔案複製至新的-Hexo-環境" class="headerlink" title="將備份的檔案複製至新的 Hexo 環境"></a>將備份的檔案複製至新的 Hexo 環境</h4><center>
   <img src="https://i.imgur.com/lWLZd0F.png)" width="40%">
</center>

<p>將除了 node_modules 跟 public 之外的檔案複製過去</p>
<blockquote>
<p>node_modules 是放一些 library 的地方，執行 npm install 時就會下載相關的 library；而 public 是放原始檔編譯後的檔案，之後部署時會再建回來</p>
</blockquote>
<h4 id="複製完執行以下指令"><a href="#複製完執行以下指令" class="headerlink" title="複製完執行以下指令"></a>複製完執行以下指令</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
<p>可能會出現一些 Error or Warning，照著他的指示修正即可</p>
<h3 id="step-3-在本地端-preview-一下"><a href="#step-3-在本地端-preview-一下" class="headerlink" title="step 3: 在本地端 preview 一下"></a>step 3: 在本地端 preview 一下</h3><p>上線前還是小心謹慎一點好，先在本地檢視一下有沒有如期正常顯示，畢竟裡面已經有嘔心瀝血作品</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#透過本機的 http://localhost:<span class="number">4000</span> 查看</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure>

<h3 id="step-4-重新部署-gogo"><a href="#step-4-重新部署-gogo" class="headerlink" title="step 4: 重新部署 gogo"></a>step 4: 重新部署 gogo</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>


<h3 id="番外-部署問題"><a href="#番外-部署問題" class="headerlink" title="番外: 部署問題"></a>番外: 部署問題</h3><blockquote>
<p>事情有時候總是沒這麼簡單的喇!!</p>
</blockquote>
<p>看起來一般來說他給的這個網站裡面都能找到解法 ⬇️<br>Something’s wrong. Maybe you can find the solution here: %s <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a></p>
<p>分享一下我遇到的是 github Authentication Failed (身份驗證失敗)<br>解法：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># 進去網站資料夾</span><br><span class="line"><span class="built_in">cd</span> blog_name</span><br><span class="line"></span><br><span class="line"># 修改 _config.yml</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure>
<p>將 https 方式改成用 ssh 方式</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">deploy:</span></span><br><span class="line"><span class="function">    <span class="title">type</span>: <span class="title">git</span></span></span><br><span class="line"><span class="function">    <span class="title">repo</span>: <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">yourname</span>/<span class="title">yourname.github.io.git</span> -&gt; <span class="title">git</span>@<span class="title">github.com:yourname</span>/<span class="title">yourname.github.io.git</span></span></span><br><span class="line"><span class="function">    <span class="title">branch</span>: <span class="title">master</span></span></span><br></pre></td></tr></table></figure>

<ol>
<li><p>Generating a new SSH key and adding it to the ssh-agent <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">:link:</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -al ~&#x2F;.ssh</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>
<p>產生金鑰的過程中，會問 3 個問題，如果沒有特殊需求可以全部使用預設值(press Enter)就好</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 金鑰儲存的位置與檔名，預設檔名是前面所提到 id_ed25519，可以更改檔名，ex: githud_key</span><br><span class="line">Enter file in which to save the key (&#x2F;home&#x2F;username&#x2F;.ssh&#x2F;id_ed25519): [Press enter]</span><br><span class="line"></span><br><span class="line"># 詢問是否指定金鑰保護密碼，若有設定密碼的話，之後使用每次使用時，這把金鑰時就要輸入密碼，請務必牢記。之後想修改金鑰密碼的話，可以透過 ssh-keygen 來設定。</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public&#x2F;private ed25519 key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519</span><br><span class="line">Your public key has been saved in &#x2F;Users&#x2F;username&#x2F;.ssh&#x2F;id_ed25519.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:*************************** your_email@example.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ED25519 256]--+</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/lDCil5I.png"></p>
<p>設定金鑰代理</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br><span class="line"># output: Agent pid <span class="number">98350</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">touch ~/.ssh/config</span><br><span class="line">open ~/.ssh/config</span><br></pre></td></tr></table></figure>
<p>modify ~&#x2F;.ssh&#x2F;config</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Host *</span><br><span class="line">   AddKeysToAgent yes</span><br><span class="line">   UseKeychain yes</span><br><span class="line">   IdentityFile ~/.ssh/id_ed25519 #！如果有改名的話這邊記得改</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># Add your SSH private key to the ssh-agen</span><br><span class="line">ssh-add -K ~/.ssh/id_ed25519</span><br><span class="line"># <span class="built_in">copy</span> it</span><br><span class="line">pbcopy &lt; ~/.ssh/id_ed25519.pub #！如果有改名的話這邊記得改</span><br></pre></td></tr></table></figure>


</li>
<li><p>Adding a new SSH key to your GitHub account<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account">:link:</a><br>![](<a href="https://i.imgur.com/fT8xpej.png">https://i.imgur.com/fT8xpej.png</a> &#x3D;200x)<br><img src="https://i.imgur.com/esiwR1T.png"></p>
<p><img src="https://i.imgur.com/8yv980c.png"></p>
<p>連線測試</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"># output: Hi XXX! You’ve successfully authenticated, but GitHub does <span class="keyword">not</span> provide shell access.</span><br></pre></td></tr></table></figure></li>
<li><p>deploy on GitHub</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>GitHub pages</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 136. Single Number</title>
    <url>/2023/09/28/%E7%AD%86%E8%A8%98-Leetcode-%20136.-Single%20Number/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/single-number/">https://leetcode.com/problems/single-number/</a></p>
<blockquote>
<p>Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.<br>You must implement a solution with a linear runtime complexity and use only constant extra space.</p>
</blockquote>
<p><img src="https://hackmd.io/_uploads/BJfpj0Mx6.png"></p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNumber</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        <span class="built_in">list</span> = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">                <span class="built_in">list</span>.remove(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">list</span>.append(i)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>.pop()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>list</tag>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] 深入淺出理解 Kubernetes/ Docker/ Container/ VM 概念</title>
    <url>/2025/01/14/%E7%AD%86%E8%A8%98-Kubernetes:-Docker:-Container:-VM-%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h2 id="為什麼需要這些技術？"><a href="#為什麼需要這些技術？" class="headerlink" title="為什麼需要這些技術？"></a>為什麼需要這些技術？</h2><p>隨著應用程式越來越複雜，我們需要更靈活、高效的方式來部署和管理它們。傳統的硬體配置已經無法滿足快速變動的需求，因此「虛擬化技術」和「容器化技術」應運而生。</p>
<span id="more"></span>

<h2 id="什麼是-VM？"><a href="#什麼是-VM？" class="headerlink" title="什麼是 VM？"></a>什麼是 VM？</h2><p>虛擬機 (Virtual Machine) 是利用虛擬化技術，虛擬化整個硬體 (Hardware) 層，把一台實體機 (Host) 分割成多個彼此獨立的環境 (Guest) &#x3D;&gt; 模擬的是［整台機器］<br>每個 VM 都有自己的作業系統 (Operating System)，並模擬硬體資源 (CPU、記憶體、網路…等)。</p>
<ul>
<li><strong>優點</strong>：<ul>
<li>完全隔離，安全性高。</li>
<li>支援多種作業系統 (Windows、Linux、Ubuntu)。</li>
</ul>
</li>
<li><strong>缺點</strong>：<ul>
<li>資源消耗較大，因為每個 VM 都需要一整套作業系統。</li>
<li>啟動速度較慢。</li>
</ul>
</li>
</ul>
<h2 id="什麼是容器-Container-？"><a href="#什麼是容器-Container-？" class="headerlink" title="什麼是容器 (Container)？"></a>什麼是容器 (Container)？</h2><p>容器是一種比 VM 更輕量的技術，虛擬化的作業系統層，讓應用程式及其依賴環境打包成獨立的單位來執行。它共享宿主機的作業系統核心，但彼此之間隔離。 &#x3D;&gt; 模擬的是［應用程式環境］<br>透過容器引擎 (ex: Docker、Podman)，容器可以快速啟動並執行應用程式。</p>
<ul>
<li><strong>優點</strong>：<ul>
<li>輕量：共享作業系統核心，減少資源需求。</li>
<li>啟動快速：秒級啟動，比 VM 更高效。</li>
<li>可移植性強：應用程式「打包一次，運行到處」。</li>
</ul>
</li>
<li><strong>缺點</strong>：<ul>
<li>相較 VM 隔離性稍弱 (取決於設定)。</li>
</ul>
</li>
</ul>
<h2 id="Docker：容器化技術的代名詞"><a href="#Docker：容器化技術的代名詞" class="headerlink" title="Docker：容器化技術的代名詞"></a>Docker：容器化技術的代名詞</h2><p>Docker 是一種用於建立、部署和運行容器的開放平台。<br>將應用程式及其依賴項打包在輕量級的容器中，確保一致性和移植性。</p>
<ul>
<li><strong>核心概念</strong>：<ul>
<li><strong>Image</strong> (映像檔)：容器的靜態模板。</li>
<li><strong>Container</strong> (容器)：從映像檔啟動的執行實例。</li>
<li><strong>Registry</strong> (註冊伺服器)：儲存與分發映像檔的倉庫 (如 Docker Hub)。</li>
</ul>
</li>
<li><strong>實用場景</strong>：<ul>
<li>在本地開發環境中模擬多服務架構。</li>
<li>快速測試和部署應用程式。</li>
</ul>
</li>
</ul>
<h2 id="Kubernetes-K8s-：容器的指揮官"><a href="#Kubernetes-K8s-：容器的指揮官" class="headerlink" title="Kubernetes (K8s)：容器的指揮官"></a>Kubernetes (K8s)：容器的指揮官</h2><p>K8s 是管理容器 (ex: 調度、擴容、故障恢復) 的開源平台，專為大規模分散式系統設計。</p>
<ul>
<li><strong>主要功能</strong>：<ul>
<li><strong>自動化部署</strong>：根據定義文件部署應用。</li>
<li><strong>資源調度</strong>：動態分配計算資源。</li>
<li><strong>彈性伸縮</strong>：根據負載自動擴展或縮減容器數量。</li>
<li><strong>服務發現</strong>：為應用程式提供內建的 DNS 支援。</li>
</ul>
</li>
<li><strong>實用場景</strong>：<ul>
<li>微服務架構 (Microservices) 中管理數百甚至數千個容器。</li>
<li>高流量應用需要動態擴展。</li>
</ul>
</li>
</ul>
<h2 id="比較"><a href="#比較" class="headerlink" title="比較"></a>比較</h2><table>
<thead>
<tr>
<th><strong>特性</strong></th>
<th><strong>Kubernetes</strong></th>
<th><strong>Docker</strong></th>
<th><strong>虛擬機 (VM)</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>管理對象</strong></td>
<td>容器 (集群層級管理)</td>
<td>容器 (單機層級管理)</td>
<td>整個操作系統</td>
</tr>
<tr>
<td><strong>隔離層級</strong></td>
<td>基於容器與命名空間(Namespace)</td>
<td>基於容器與命名空間(Namespace)</td>
<td>基於虛擬硬體</td>
</tr>
<tr>
<td><strong>隔離性</strong></td>
<td>N&#x2F;A (管理工具)</td>
<td>中</td>
<td>高</td>
</tr>
<tr>
<td><strong>資源效率</strong></td>
<td>輕量級 (容器共享同一內核)</td>
<td>輕量級 (容器共享同一內核)</td>
<td>重量級 (每個)VM 有獨立的內核)</td>
</tr>
<tr>
<td><strong>啟動速度</strong></td>
<td>快 (秒級)</td>
<td>快 (秒級)</td>
<td>慢 (分鐘級)</td>
</tr>
<tr>
<td><strong>運行環境的靈活性</strong></td>
<td>高 (容器自動調度與管理)</td>
<td>中 (單機或簡單的容器編排)</td>
<td>低 (操作系統層級管理)</td>
</tr>
<tr>
<td><strong>工具</strong></td>
<td>Kubernetes</td>
<td>Docker</td>
<td>VirtualBox、VMware</td>
</tr>
</tbody></table>
<h2 id="應用情境"><a href="#應用情境" class="headerlink" title="應用情境"></a>應用情境</h2><ul>
<li><strong>虛擬機</strong><br>當你需要在單台硬體上跑多個不同作業系統的應用 (ex:  Windows + Linux)。</li>
<li><strong>容器</strong><br>部署輕量、可攜式的微服務，適合 CI&#x2F;CD Pipline、自動化測試。</li>
<li><strong>Kubernetes</strong><br>大型分散式系統需要高效管理，且擁有動態流量需求的場景。</li>
</ul>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><ul>
<li>虛擬機是傳統的隔離方案，適合需要高安全性的場景。</li>
<li>容器則是現代化應用的主流解決方案，輕量且靈活。</li>
<li>Docker 是目前最受歡迎的容器化技術，提供簡單易用的工具來打包、分發和執行應用程式，讓開發與部署更加高效。</li>
<li>Kubernetes 是容器化技術的最佳管理工具，幫助我們在大規模維運中游刃有餘。</li>
</ul>
<div class="note info"><p>VM 是重量，Container 是輕量，Kubernetes 是管家！</p>
</div>

]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>容器化技術</tag>
        <tag>Kubernetes</tag>
        <tag>Container</tag>
        <tag>VM</tag>
        <tag>Containerized</tag>
        <tag>Virtualized</tag>
        <tag>虛擬化</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 1716. Calculate Money in Leetcode Bank</title>
    <url>/2023/12/07/%E7%AD%86%E8%A8%98-Leetcode-%201716.-Calculate%20Money-in%20Leetcode-Bank/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/calculate-money-in-leetcode-bank">https://leetcode.com/problems/calculate-money-in-leetcode-bank</a></p>
<blockquote>
<p>Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.</p>
</blockquote>
<p>He starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous Monday.<br>Given n, return the total amount of money he will have in the Leetcode bank at the end of the nth day.</p>
<p><img src="https://hackmd.io/_uploads/HJQMMQkL6.png" alt="image"></p>
<span id="more"></span>

<blockquote>
<p>key: 總和用上底加下底乘高除二計算，再加上剩餘天數</p>
</blockquote>
<p>第一週: 1 + 2 + 3 + 4 + 5 + 6 + 7 &#x3D; 28<br>第二週: 2 + 3 + 4 + 5 + 6 + 7 + 8 &#x3D; 28 + 7<br>第三週為: 3 + 4 + 5 + 6 + 7 + 8 + 9 &#x3D; 28 + 7 x 2<br>.<br>.<br>.<br>N 週過去，總金額為: 28 + (28 + 7) + (28 + 7 × 2) + …… + [28 + 7 × (N - 1)]</p>
<p>{[28 + 28 + 7(N - 1)] × R} ÷ 2 </p>
<p>最後記得加上不滿週的天數: (N + 1) + (N + 2) + … + (N + D)<br>[(N + 1) + (N + D)] x D ÷ 2 </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">totalMoney</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        week, day = <span class="built_in">divmod</span>(n, <span class="number">7</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">28</span> + <span class="number">28</span> + <span class="number">7</span> * (week - <span class="number">1</span>)) * week // <span class="number">2</span> + (week * <span class="number">2</span> + day + <span class="number">1</span>) * day // <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Math</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 56. Merge Intervals</title>
    <url>/2023/09/05/%E7%AD%86%E8%A8%98-Leetcode-%2056.-Merge%20Intervals/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/merge-intervals/">https://leetcode.com/problems/merge-intervals/</a></p>
<p><img src="https://i.imgur.com/FaQwh8J.png"><br>It means each list in intervals is a range, just to merge the overlapping one, others stay the same.</p>
<span id="more"></span>


<p>解題:</p>
<ol>
<li>sort</li>
</ol>
<p>sort by the start of each range<br>save the first one in result<br>if any the start of each range smaller then the last item in result, it should be merged, otherwise append in result</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">merge</span>(<span class="params">self, intervals</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type intervals: List[List[int]]</span></span><br><span class="line"><span class="string">        :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># internals.sort(key = lambda x = x[0])</span></span><br><span class="line">        sort_intervals = <span class="built_in">sorted</span>(intervals, key = <span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        res = [sort_intervals[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> start, end <span class="keyword">in</span> sort_intervals[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">if</span> res[-<span class="number">1</span>][<span class="number">1</span>] &gt;= start:</span><br><span class="line">                res[-<span class="number">1</span>][<span class="number">1</span>] = <span class="built_in">max</span>(res[-<span class="number">1</span>][<span class="number">1</span>], end)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.append([start, end])</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 1491. Average Salary Excluding the Minimum and Maximum Salary</title>
    <url>/2023/05/01/%E7%AD%86%E8%A8%98-Leetcode-1491-Average-Salary-Excluding-the-Minimum-and-Maximum-Salary/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/">https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/</a></p>
<blockquote>
<p>You are given an array of unique integers salary where salary[i] is the salary of the ith employee.<br>Return the average salary of employees excluding the minimum and maximum salary. Answers within 10-5 of the actual answer will be accepted.</p>
</blockquote>
<p><img src="https://i.imgur.com/uoZrJtI.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span> </span><br><span class="line">        salary.sort()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary[<span class="number">1</span>:-<span class="number">1</span>]) / (<span class="built_in">len</span>(salary) - <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        salary.remove(<span class="built_in">min</span>(salary))</span><br><span class="line">        salary.remove(<span class="built_in">max</span>(salary))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary) / <span class="built_in">len</span>(salary)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">sum</span>(salary) - <span class="built_in">min</span>(salary) - <span class="built_in">max</span>(salary)) / (<span class="built_in">len</span>(salary) - <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span>(<span class="params">self, salary: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span></span><br><span class="line">        salary.sort()</span><br><span class="line">        salary.pop(<span class="number">0</span>)</span><br><span class="line">        salary.pop()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(salary) / <span class="built_in">len</span>(salary)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>sort</tag>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 217. Contains Duplicate</title>
    <url>/2023/09/28/%E7%AD%86%E8%A8%98-Leetcode-%20217.-Contains-Duplicate/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/contains-duplicate/">https://leetcode.com/problems/contains-duplicate/</a></p>
<blockquote>
<p>Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.</p>
</blockquote>
<p><img src="https://hackmd.io/_uploads/H1SgWl7ga.png"></p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        ans = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> num <span class="keyword">in</span> ans:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans[num] = <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        ans = &#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> ans.get(num):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans[num] = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(nums) != <span class="built_in">len</span>(<span class="built_in">list</span>(<span class="built_in">set</span>(nums)))</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>list</tag>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
        <tag>set</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 905. Sort Array By Parity</title>
    <url>/2023/09/29/%E7%AD%86%E8%A8%98-Leetcode-%20905.-Sort-Array-By-Parity/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/contains-duplicate/">https://leetcode.com/problems/contains-duplicate/</a></p>
<blockquote>
<p>Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.<br>Return any array that satisfies this condition.</p>
</blockquote>
<p><img src="https://hackmd.io/_uploads/SJBmot7lp.png"></p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span></span><br><span class="line">        left, right = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> left &lt; right: </span><br><span class="line">            <span class="keyword">if</span> nums[right] % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">and</span> nums[left] % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                nums[right], nums[left] = nums[left], nums[right]</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line">                right -= <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> nums[left] % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> nums[right] % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                right -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span>        even_idx = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                nums[even_idx], nums[i] = nums[i], nums[even_idx]</span><br><span class="line">                even_idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>list</tag>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
        <tag>two pointer</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 2215. Find the Difference of Two Arrays</title>
    <url>/2023/05/03/%E7%AD%86%E8%A8%98-Leetcode-1822-Sign-of-the-Product-of-an-Array/</url>
    <content><![CDATA[<span id="more"></span>

<blockquote>
<p>Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:</p>
<ul>
<li>answer[0] is a list of all distinct integers in nums1 which are not present in nums2.</li>
<li>answer[1] is a list of all distinct integers in nums2 which are not present in nums1.</li>
</ul>
<p>Note that the integers in the lists may be returned in any order.</p>
</blockquote>
<p><img src="https://i.imgur.com/mN6RB67.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findDifference</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        set1 = <span class="built_in">set</span>(nums1)</span><br><span class="line">        set2 = <span class="built_in">set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> [ <span class="built_in">list</span>(set1 - set2), <span class="built_in">list</span>(set2 - set1)]</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Leetcode - 867. Transpose Matrix</title>
    <url>/2023/12/10/%E7%AD%86%E8%A8%98-Leetcode-867.-Transpose-Matrix/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/transpose-matrix/">https://leetcode.com/problems/transpose-matrix/</a></p>
<blockquote>
<p>Given a 2D integer array matrix, return the transpose of matrix.</p>
<p>The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix’s row and column indices.</p>
</blockquote>
<span id="more"></span>

<p>Example 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: matrix &#x3D; [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">Output: [[1,4,7],[2,5,8],[3,6,9]]</span><br></pre></td></tr></table></figure>
<p>Example 2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: matrix &#x3D; [[1,2,3],[4,5,6]]</span><br><span class="line">Output: [[1,4],[2,5],[3,6]]</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transpose</span>(<span class="params">self, matrix: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">        result = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(matrix[<span class="number">0</span>])):</span><br><span class="line">            new_matrix = []</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(matrix)):</span><br><span class="line">                new_matrix.append(matrix[row][col])</span><br><span class="line"></span><br><span class="line">            result.append(new_matrix)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Leetcode</tag>
        <tag>Python</tag>
        <tag>Matrix</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] Relative Dropdown List</title>
    <url>/2021/03/30/%E7%AD%86%E8%A8%98-Relative-Dropdown-List/</url>
    <content><![CDATA[<blockquote>
<p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p>
</blockquote>
<span id="more"></span>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get the one which just select</span></span><br><span class="line">$(<span class="string">&#x27;.form_select select&#x27;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">var</span> current_selected = <span class="built_in">this</span>.id;</span><br><span class="line">  <span class="comment">// get all Dropdown in the form</span></span><br><span class="line">  <span class="comment">// remove val of dropdowns except current select </span></span><br><span class="line">  $(<span class="string">&#x27;.form_select select:not(#&#x27;</span> + current_selected + <span class="string">&#x27;)&#x27;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#&#x27;</span> + <span class="built_in">this</span>.id).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/MWJjPGa?height=265&theme-id=dark&default-tab=html,result" frameborder="0">See the Pen <a href='https://codepen.io/ZZYume/pen/MWJjPGa'>Relative Dropdown List </a> by Yume
  (<a href='https://codepen.io/ZZYume'>@ZZYume</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe>

]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
        <tag>javascript</tag>
        <tag>jquery</tag>
        <tag>dropdown</tag>
      </tags>
  </entry>
  <entry>
    <title>[筆記] 網頁版面 - 側邊欄</title>
    <url>/2020/09/20/%E7%AD%86%E8%A8%98-%E7%B6%B2%E9%A0%81%E7%89%88%E9%9D%A2-%E5%81%B4%E9%82%8A%E6%AC%84/</url>
    <content><![CDATA[<blockquote>
<p>實習開發網站，常遇到一些功能需求要上網查詢，整理成筆記以後再用到就不用又從頭開始找，也希望幫助到正在找學這些功能的人</p>
</blockquote>
<span id="more"></span>


<iframe width="100%" height="500" src="https://codepen.io/ZZYume/embed/WNwaPpJ?height=265&theme-id=dark&default-tab=result" frameborder="0"></iframe>

<p>想看比較清楚的 code，我也有放在 <a href="https://github.com/ZanaZhong/side-nav.github.io">Github</a></p>
]]></content>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
        <tag>javascript</tag>
        <tag>jquery</tag>
        <tag>Bootstrap</tag>
        <tag>Bootstrap-table</tag>
      </tags>
  </entry>
  <entry>
    <title>單體架構 vs 微服務架構：選擇的關鍵與應用</title>
    <url>/2025/01/15/%E7%AD%86%E8%A8%98-%E5%96%AE%E9%AB%94%E6%9E%B6%E6%A7%8B-vs-%E5%BE%AE%E6%9C%8D%E5%8B%99%E6%9E%B6%E6%A7%8B%EF%BC%9A%E9%81%B8%E6%93%87%E7%9A%84%E9%97%9C%E9%8D%B5%E8%88%87%E6%87%89%E7%94%A8/</url>
    <content><![CDATA[<h2 id="為什麼要了解單體架構和微服務架構？"><a href="#為什麼要了解單體架構和微服務架構？" class="headerlink" title="為什麼要了解單體架構和微服務架構？"></a>為什麼要了解單體架構和微服務架構？</h2><p>隨著技術的快速發展，軟體架構設計已經成為每個工程師必須掌握的核心知識之一。<br>無論你是正在開發新產品的初創團隊，還是維護大型系統的資深工程師，選擇適合的架構直接影響系統的穩定性、性能和團隊效率。</p>
<p>然而，對於剛接觸架構設計的初學者來說，「單體架構」與「微服務架構」之間的選擇常常令人困惑：</p>
<ul>
<li>單體架構似乎簡單直接，但為什麼大家都在討論微服務？</li>
<li>微服務聽起來很先進，但是否真的適合所有場景？</li>
<li>團隊是否一定要採用最新技術，才能保持競爭力？</li>
</ul>
<span id="more"></span>

<h2 id="單體架構-Monolithic-是什麼？"><a href="#單體架構-Monolithic-是什麼？" class="headerlink" title="單體架構 (Monolithic) 是什麼？"></a>單體架構 (Monolithic) 是什麼？</h2><p>Monolithic 是傳統的軟體設計方式，將應用程式的所有功能打包在一個整體中。</p>
<ul>
<li>所有功能模組共享同一個代碼庫和部署單位。</li>
<li>通常包含三層結構：UI 層、業務邏輯層、數據層。</li>
</ul>
<p><strong>優點</strong>：</p>
<ul>
<li><strong>簡單性</strong>：適合小型或初期專案，開發與部署流程直觀。</li>
<li><strong>性能好</strong>：內部調用通常比分布式架構更快。</li>
<li><strong>工具支援廣</strong>：不需要額外的運行時環境管理 (例如 Kubernetes)。</li>
</ul>
<p><strong>缺點</strong>：</p>
<ul>
<li><strong>耦合性高</strong>：修改或新增功能可能影響整體應用。</li>
<li><strong>難以擴展</strong>：所有功能部署在一起，無法針對單一模組進行擴展。</li>
<li><strong>可靠性低</strong>：一個模組出問題，可能導致整個應用崩潰。</li>
</ul>
<h2 id="微服務架構-Microservices-是什麼？"><a href="#微服務架構-Microservices-是什麼？" class="headerlink" title="微服務架構 (Microservices) 是什麼？"></a>微服務架構 (Microservices) 是什麼？</h2><p>Microservices 將應用拆分成一系列獨立的服務，每個服務負責一個特定的功能或業務邏輯。</p>
<ul>
<li>每個服務都可以獨立開發、部署和維護。</li>
<li>服務之間通過 API (例如 REST 或 gRPC) 進行通信。</li>
</ul>
<p><strong>優點</strong>：</p>
<ul>
<li><strong>高擴展性</strong>：可以針對流量高的服務單獨擴展 (如用戶認證服務)。</li>
<li><strong>高可用性</strong>：單個服務故障不會影響整體系統。</li>
<li><strong>靈活開發</strong>：不同團隊可以用不同技術棧構建自己的服務。</li>
</ul>
<p><strong>缺點</strong>：</p>
<ul>
<li><strong>複雜性增加</strong>：服務之間的通信、數據一致性和分布式監控變得更困難。</li>
<li><strong>部署挑戰</strong>：需要配合容器化 (Docker)、編排工具 (Kubernetes) 和 CI&#x2F;CD 管線。</li>
<li><strong>運營成本高</strong>：需要專門的基礎設施和人員來維護。</li>
</ul>
<h2 id="單體架構一定要轉成微服務嗎？"><a href="#單體架構一定要轉成微服務嗎？" class="headerlink" title="單體架構一定要轉成微服務嗎？"></a>單體架構一定要轉成微服務嗎？</h2><p>不一定！選擇架構應根據業務需求和資源狀況，而非追求潮流。</p>
<p><strong>應該轉為 Microservices 的情境</strong>：</p>
<ol>
<li><strong>系統龐大且複雜</strong>：單體架構已經無法快速迭代和部署。</li>
<li><strong>流量分布不均</strong>：某些功能的流量特別高，需要獨立擴展 (例如商品查詢 vs 購物車)。</li>
<li><strong>團隊規模擴大</strong>：不同功能模組需要由多個團隊並行開發，避免資源衝突。</li>
<li><strong>多樣性需求</strong>：需要引入不同的技術或框架來滿足特定模組需求。</li>
</ol>
<p><strong>適合保留 Monolithic 的情境</strong>：</p>
<ol>
<li><strong>小型專案</strong>：團隊規模小，開發與維護的成本可控。</li>
<li><strong>需求穩定</strong>：業務場景簡單，功能變化不大。</li>
<li><strong>資源有限</strong>：運營人員、基礎設施或時間不足以支撐Microservices的高複雜度。</li>
</ol>
<h2 id="比較"><a href="#比較" class="headerlink" title="比較"></a>比較</h2><table>
<thead>
<tr>
<th><strong>特性</strong></th>
<th><strong>Monolithic</strong></th>
<th><strong>Microservices</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>耦合性</strong></td>
<td>高</td>
<td>低</td>
</tr>
<tr>
<td><strong>開發速度</strong></td>
<td>快 (初期)</td>
<td>慢 (初期)</td>
</tr>
<tr>
<td><strong>部署頻率</strong></td>
<td>整體部署</td>
<td>單獨部署</td>
</tr>
<tr>
<td><strong>擴展方式</strong></td>
<td>整體擴展</td>
<td>單點擴展</td>
</tr>
<tr>
<td><strong>技術多樣性</strong></td>
<td>單一技術棧</td>
<td>支援多種技術</td>
</tr>
<tr>
<td><strong>可靠性</strong></td>
<td>低 (單點故障影響整體)</td>
<td>高 (服務隔離，降低故障影響範圍)</td>
</tr>
</tbody></table>
<h2 id="應用情境"><a href="#應用情境" class="headerlink" title="應用情境"></a>應用情境</h2><ul>
<li><p><strong>Monolithic</strong>：<br>適用於小型企業網站、早期 MVP 開發、簡單內部工具等。</p>
</li>
<li><p><strong>Microservices</strong>：<br>適用於電子商務平台 (如亞馬遜)、流媒體服務 (如 Netflix)、高度擴展的分布式應用。</p>
</li>
</ul>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><ul>
<li>Monolithic 更適合快速啟動，Microservices 則適合長期運營的大型專案。</li>
<li><strong>切換前的提醒</strong>：轉向 Microservices 需要全面考慮團隊技能、基礎設施、業務需求，避免「過度設計」。</li>
<li><strong>最佳策略</strong>：採取 <strong>分段拆解法</strong>，先從最關鍵的模組開始，逐步轉型，平衡效能與複雜度。</li>
</ul>
<div class="note info"><p>選擇架構，不是看技術有多潮，而是看它是否真正解決你的問題！<br>這不僅是一場技術選擇，也是平衡效率與效能的一場藝術</p>
</div>
]]></content>
      <tags>
        <tag>Monolithic</tag>
        <tag>Microservices</tag>
        <tag>微服務</tag>
        <tag>單體架構</tag>
        <tag>系統架構</tag>
      </tags>
  </entry>
</search>
